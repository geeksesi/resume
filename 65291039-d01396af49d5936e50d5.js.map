{"version":3,"file":"65291039-d01396af49d5936e50d5.js","mappings":"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YACA,QACA,MAEJ,CACI,CACI,GACA,IAEJ,YACA,QACA,MAEJ,CACI,CACI,GACA,IAEJ,YACA,WACA,GAEJ,CACI,CACI,GACA,IAEJ,gBACA,SACA,GAEJ,CACI,CACI,GACA,IAEJ,kBACA,SACA,KAEJ,CACI,CACI,GACA,IAEJ,oBACA,SACA,GAEJ,CACI,GACA,gBACA,SACA,GAEJ,CACI,GACA,gBACA,SACA,GAEJ,CACI,GACA,UACA,SACA,GAEJ,CACI,GACA,QAnJR,MACIhB,cAAclG,EAAQxD,EAAQ4K,GAC1B,IAAIwB,EAAYxB,EAASyB,MAGzB,KAAMzB,EAAS7R,OAASqT,GAAUxB,EAASyB,KAC/C,GA+II,MAEJ,CACI,GACA,QACA,IAAQP,GAA0C,IAAQ7D,GAA2C,CACjGzM,KAAM,UAEV,QAOR8Q,GAA2C,CACvC,UACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,iBACA,UACA,UACA,UACA,UACA,QACA,OACA,OACA,QACA,SACA,UACA,QACA,YAIJ,IAAIC,GAA4C,CAC5C,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,GACA,SACA,SACA,YACA,iBACA,GACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,GACA,eACA,GACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,GACA,OACA,UACA,GACA,eACA,SACA,QACA,SACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,cACA,GACA,GACA,GACA,GACA,SACA,SACA,KACA,eACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,GACA,GACA,WACA,GACA,GACA,SACA,SACA,KACA,cAqQAC,GAA4C,CAC5C,UACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cA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AOoB,GACH,OAAqC,IAA9B,KAAapB,OAAOoB,EAC/B,CACA8F,cACIyC,MAAM,QACV,EAEJ,IAAI4I,GAA+B,IAAI,KAAc,CACjDC,MAAO,KACPC,MAAO,OAEPC,GAA+B,IAAI,KAAc,CACjDF,MAAO,KACPC,MAAO,OAYPE,GAAoC,IAAIR,GAAmC,CACvEhI,GAniCwC,CAC5C,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,cACA,oBACA,GACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,GACA,YACA,YACA,eACA,YACA,YACA,GACA,GACA,YACA,GACA,GACA,YACA,YACA,YACA,YACA,GACA,GACA,YACA,YACA,YACA,GACA,KACA,KACA,KACA,MACA,MACA,oBACA,GACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,kBACA,eACA,cACA,GACA,GACA,cACA,cACA,gBACA,aACA,aACA,GACA,iBACA,GACA,GACA,cACA,GACA,GACA,aACA,iBACA,GACA,GACA,cACA,YACA,eACA,GACA,GACA,GACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,GACA,GACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,mBAsyBD,IAAQT,GAbmC,IAAI,KAAuB,IAAI4I,GAA4C,CACrH,EAAG,CACCM,OAAQ,KACRC,MAAO,IAAI,KAAa,KAAc,WAE1C,EAAG,CACCC,QAAS,KACTC,OAAQ,IAAI,KAAaR,GAA8B,cAM+B,CAC1FnX,MAAM,KAIV,MAAM4X,WAAyC,KAC3ChT,OAAOoB,EAAQxD,GACX,IAAIjH,GAAS,EAAI,MAAsBY,KAAKZ,OAAQyK,EAAQxD,GACxDiD,EAAQ,EACRlB,EAAM,GACV,KAAMkB,EAAQlK,GAAO,CACjB,IAAIsc,EAAQ1b,KAAK6B,KAAK4G,OAAOoB,EAAQxD,GACrCqV,EAAMvM,OAAS7F,EACfA,GAASoS,EAAMR,MAAQ,EACvB9S,EAAIpJ,KAAK0c,EACb,CACA,OAAOtT,CACX,EAEJ,IAWIuT,GAAmC,IAAIf,GAAmC,CACtE/H,GA1lBwC,CAC5C,UACA,QACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,kBAE4C,CAC5C,UACA,QACA,iBACA,iBACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,iBACA,gBACA,YACA,SACA,eACA,aACA,iBACA,aACA,UACA,gBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,kBA8VD,IAAQV,GAfkC,IAAI,KAAuB,KAAc,CAClF,EAAG,CACC6C,OAAQ,IAAI,KAAa,MAAgB5S,GAAIA,EAAEiE,OAAOuV,YAAYxc,OAAS,KAE/E,EAAG,CACCoc,OAAQ,IAAIC,GAAiCT,IAA+B5Y,GAAIA,EAAEiE,OAAOuV,YAAYxc,OAAS,KAElH,EAAG,CACCoc,OAAQ,IAAIC,GAAiCN,IAA+B/Y,GAAIA,EAAEiE,OAAOuV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C,KAAKglE,UAAU,EAAG,EAAG,EAAG,EAAGliC,EAAG4C,EACzC,CAGE8/B,OAAOC,GACL,IAAIC,EAAMrjE,KAAKqjE,IAAID,GACfE,EAAMtjE,KAAKsjE,IAAIF,GACnB,OAAOzlE,KAAKglE,UAAUU,EAAKC,GAAMA,EAAKD,EAAK,EAAG,EAClD,CAGEE,MAAMC,EAAQC,EAASD,GACrB,OAAO7lE,KAAKglE,UAAUa,EAAQ,EAAG,EAAGC,EAAQ,EAAG,EACnD,CACAn2D,cACI3P,KAAKkjE,SAAW,GAChBljE,KAAK2jE,MAAQ,KACb3jE,KAAKwjE,MAAQ,IACjB,EAEJ,IAAK,IAAIJ,KAAW,CAChB,SACA,SACA,mBACA,gBACA,aACFJ,GAAyCz/B,UAAU6/B,IAAW,YAAY/iE,GAMxE,OALAL,KAAK2jE,MAAQ3jE,KAAKwjE,MAAQ,KAC1BxjE,KAAKkjE,SAASlkE,KAAK,CACfokE,QAASA,GACT/iE,KAAMA,IAEHL,IACX,EAIA,IAAI+lE,GAA2C,CAC3C,UACA,QACA,mBACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,cACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,YACA,QACA,WACA,SACA,SACA,YACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,OACA,WACA,UACA,SACA,YACA,aACA,aACA,YACA,YACA,QACA,WACA,WACA,KACA,SACA,WACA,YACA,YACA,eACA,MACA,KACA,cACA,YACA,UACA,KACA,WACA,cACA,eACA,QACA,KACA,SACA,eACA,aACA,aACA,UACA,SACA,cACA,QACA,gBACA,iBACA,WACA,mBACA,SACA,SACA,SACA,KACA,KACA,SACA,SACA,eACA,gBACA,YACA,aACA,SACA,UACA,YACA,YACA,WACA,WACA,gBACA,iBACA,KACA,KACA,YACA,iBACA,iBACA,eACA,cACA,cACA,cACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,QACA,SACA,SACA,cACA,SACA,WACA,aACA,QACA,SACA,QACA,YACA,OACA,UACA,eACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,YACA,MACA,MACA,SACA,SACA,QACA,QACA,QACA,WACA,cACA,cACA,gBACA,UACA,aACA,gBACA,QACA,SACA,SACA,aACA,WACA,WACA,SACA,SACA,SACA,SACA,UAIJ,MAAMC,GACFC,WACI,OAAO,IAAQjD,EACnB,CACAkD,WACI,OAAOlmE,KAAK+kE,KAAKrgC,IACrB,CACAyhC,WACI,OAAOnmE,KAAK+kE,KAAKn1B,IACrB,CACAw2B,iBAAiBxiE,GACb,GAAI5D,KAAK0jC,GAAK9/B,EAAMwC,QAAQhH,OAAQ,OAAOwE,EAAMwC,QAAQpI,IAAIgC,KAAK0jC,IAClE,IAAI2iC,EAASziE,EAAMwC,QAAQpI,IAAI4F,EAAMwC,QAAQhH,OAAS,GAKtD,MAJU,CACN6G,QAASogE,EAASA,EAAOpgE,QAAU,EACnCC,QAAStC,EAAM2C,SAASvI,IAAIgC,KAAK0jC,GAAK9/B,EAAMwC,QAAQhH,SAAW,EAGvE,CACAknE,YAAY5hC,GACR,GAAI1kC,KAAKumE,SAAU,OAAOvmE,KAAKumE,SAC/B,IAAMtgE,QAASypC,EAAexpC,QAASsgE,GAAiBxmE,KAAKomE,iBAAiBpmE,KAA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","sources":["webpack://resume-mohammad-javad-ghasemy/./node_modules/fontkit/dist/browser-module.mjs"],"sourcesContent":["import {DecodeStream as $6uUbQ$DecodeStream, Struct as $6uUbQ$Struct, String as $6uUbQ$String, uint32 as $6uUbQ$uint32, Pointer as $6uUbQ$Pointer, uint16 as $6uUbQ$uint16, Array as $6uUbQ$Array, VoidPointer as $6uUbQ$VoidPointer, int16 as $6uUbQ$int16, uint24 as $6uUbQ$uint24, uint8 as $6uUbQ$uint8, VersionedStruct as $6uUbQ$VersionedStruct, LazyArray as $6uUbQ$LazyArray, Reserved as $6uUbQ$Reserved, int32 as $6uUbQ$int32, Bitfield as $6uUbQ$Bitfield, fixed32 as $6uUbQ$fixed32, Buffer as $6uUbQ$Buffer, Number as $6uUbQ$Number, resolveLength as $6uUbQ$resolveLength, fixed16 as $6uUbQ$fixed16, PropertyDescriptor as $6uUbQ$PropertyDescriptor, Fixed as $6uUbQ$Fixed, int8 as $6uUbQ$int8, Optional as $6uUbQ$Optional, EncodeStream as $6uUbQ$EncodeStream} from \"restructure\";\nimport $6uUbQ$swchelperssrc_define_propertymjs from \"@swc/helpers/src/_define_property.mjs\";\nimport $6uUbQ$swchelperssrc_ts_decoratemjs from \"@swc/helpers/src/_ts_decorate.mjs\";\nimport $6uUbQ$fastdeepequal from \"fast-deep-equal\";\nimport {getCombiningClass as $6uUbQ$getCombiningClass, getScript as $6uUbQ$getScript, isDigit as $6uUbQ$isDigit, getCategory as $6uUbQ$getCategory, isMark as $6uUbQ$isMark} from \"unicode-properties\";\nimport $6uUbQ$unicodetrie from \"unicode-trie\";\nimport $6uUbQ$dfa from \"dfa\";\nimport $6uUbQ$clone from \"clone\";\nimport $6uUbQ$tinyinflate from \"tiny-inflate\";\nimport $6uUbQ$brotlidecompressjs from \"brotli/decompress.js\";\n\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nfunction $parcel$interopDefault(a) {\n  return a && a.__esModule ? a.default : a;\n}\nvar $d636bc798e7178db$exports = {};\n\n$parcel$export($d636bc798e7178db$exports, \"logErrors\", () => $d636bc798e7178db$export$bd5c5d8b8dcafd78);\n$parcel$export($d636bc798e7178db$exports, \"registerFormat\", () => $d636bc798e7178db$export$36b2f24e97d43be);\n$parcel$export($d636bc798e7178db$exports, \"create\", () => $d636bc798e7178db$export$185802fd694ee1f5);\n$parcel$export($d636bc798e7178db$exports, \"defaultLanguage\", () => $d636bc798e7178db$export$42940898df819940);\n$parcel$export($d636bc798e7178db$exports, \"setDefaultLanguage\", () => $d636bc798e7178db$export$5157e7780d44cc36);\n\nlet $d636bc798e7178db$export$bd5c5d8b8dcafd78 = false;\nlet $d636bc798e7178db$var$formats = [];\nfunction $d636bc798e7178db$export$36b2f24e97d43be(format) {\n    $d636bc798e7178db$var$formats.push(format);\n}\nfunction $d636bc798e7178db$export$185802fd694ee1f5(buffer, postscriptName) {\n    for(let i = 0; i < $d636bc798e7178db$var$formats.length; i++){\n        let format = $d636bc798e7178db$var$formats[i];\n        if (format.probe(buffer)) {\n            let font = new format(new (0, $6uUbQ$DecodeStream)(buffer));\n            if (postscriptName) return font.getFont(postscriptName);\n            return font;\n        }\n    }\n    throw new Error(\"Unknown font format\");\n}\nlet $d636bc798e7178db$export$42940898df819940 = \"en\";\nfunction $d636bc798e7178db$export$5157e7780d44cc36(lang = \"en\") {\n    $d636bc798e7178db$export$42940898df819940 = lang;\n}\n\n\n\n\n\nfunction $e71565f2ce09cb6b$export$69a3209f1a06c04d(target, key1, descriptor) {\n    if (descriptor.get) {\n        let get = descriptor.get;\n        descriptor.get = function() {\n            let value = get.call(this);\n            Object.defineProperty(this, key1, {\n                value: value\n            });\n            return value;\n        };\n    } else if (typeof descriptor.value === \"function\") {\n        let fn = descriptor.value;\n        return {\n            get () {\n                let cache1 = new Map;\n                function memoized(...args) {\n                    let key = args.length > 0 ? args[0] : \"value\";\n                    if (cache1.has(key)) return cache1.get(key);\n                    let result = fn.apply(this, args);\n                    cache1.set(key, result);\n                    return result;\n                }\n                Object.defineProperty(this, key1, {\n                    value: memoized\n                });\n                return memoized;\n            }\n        };\n    }\n}\n\n\n\n\n\nlet $26a62205ad06574e$var$SubHeader = new $6uUbQ$Struct({\n    firstCode: $6uUbQ$uint16,\n    entryCount: $6uUbQ$uint16,\n    idDelta: $6uUbQ$int16,\n    idRangeOffset: $6uUbQ$uint16\n});\nlet $26a62205ad06574e$var$CmapGroup = new $6uUbQ$Struct({\n    startCharCode: $6uUbQ$uint32,\n    endCharCode: $6uUbQ$uint32,\n    glyphID: $6uUbQ$uint32\n});\nlet $26a62205ad06574e$var$UnicodeValueRange = new $6uUbQ$Struct({\n    startUnicodeValue: $6uUbQ$uint24,\n    additionalCount: $6uUbQ$uint8\n});\nlet $26a62205ad06574e$var$UVSMapping = new $6uUbQ$Struct({\n    unicodeValue: $6uUbQ$uint24,\n    glyphID: $6uUbQ$uint16\n});\nlet $26a62205ad06574e$var$DefaultUVS = new $6uUbQ$Array($26a62205ad06574e$var$UnicodeValueRange, $6uUbQ$uint32);\nlet $26a62205ad06574e$var$NonDefaultUVS = new $6uUbQ$Array($26a62205ad06574e$var$UVSMapping, $6uUbQ$uint32);\nlet $26a62205ad06574e$var$VarSelectorRecord = new $6uUbQ$Struct({\n    varSelector: $6uUbQ$uint24,\n    defaultUVS: new $6uUbQ$Pointer($6uUbQ$uint32, $26a62205ad06574e$var$DefaultUVS, {\n        type: \"parent\"\n    }),\n    nonDefaultUVS: new $6uUbQ$Pointer($6uUbQ$uint32, $26a62205ad06574e$var$NonDefaultUVS, {\n        type: \"parent\"\n    })\n});\nlet $26a62205ad06574e$var$CmapSubtable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    0: {\n        length: $6uUbQ$uint16,\n        language: $6uUbQ$uint16,\n        codeMap: new $6uUbQ$LazyArray($6uUbQ$uint8, 256)\n    },\n    2: {\n        length: $6uUbQ$uint16,\n        language: $6uUbQ$uint16,\n        subHeaderKeys: new $6uUbQ$Array($6uUbQ$uint16, 256),\n        subHeaderCount: (t)=>Math.max.apply(Math, t.subHeaderKeys),\n        subHeaders: new $6uUbQ$LazyArray($26a62205ad06574e$var$SubHeader, \"subHeaderCount\"),\n        glyphIndexArray: new $6uUbQ$LazyArray($6uUbQ$uint16, \"subHeaderCount\")\n    },\n    4: {\n        length: $6uUbQ$uint16,\n        language: $6uUbQ$uint16,\n        segCountX2: $6uUbQ$uint16,\n        segCount: (t)=>t.segCountX2 >> 1,\n        searchRange: $6uUbQ$uint16,\n        entrySelector: $6uUbQ$uint16,\n        rangeShift: $6uUbQ$uint16,\n        endCode: new $6uUbQ$LazyArray($6uUbQ$uint16, \"segCount\"),\n        reservedPad: new $6uUbQ$Reserved($6uUbQ$uint16),\n        startCode: new $6uUbQ$LazyArray($6uUbQ$uint16, \"segCount\"),\n        idDelta: new $6uUbQ$LazyArray($6uUbQ$int16, \"segCount\"),\n        idRangeOffset: new $6uUbQ$LazyArray($6uUbQ$uint16, \"segCount\"),\n        glyphIndexArray: new $6uUbQ$LazyArray($6uUbQ$uint16, (t)=>(t.length - t._currentOffset) / 2)\n    },\n    6: {\n        length: $6uUbQ$uint16,\n        language: $6uUbQ$uint16,\n        firstCode: $6uUbQ$uint16,\n        entryCount: $6uUbQ$uint16,\n        glyphIndices: new $6uUbQ$LazyArray($6uUbQ$uint16, \"entryCount\")\n    },\n    8: {\n        reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n        length: $6uUbQ$uint32,\n        language: $6uUbQ$uint16,\n        is32: new $6uUbQ$LazyArray($6uUbQ$uint8, 8192),\n        nGroups: $6uUbQ$uint32,\n        groups: new $6uUbQ$LazyArray($26a62205ad06574e$var$CmapGroup, \"nGroups\")\n    },\n    10: {\n        reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n        length: $6uUbQ$uint32,\n        language: $6uUbQ$uint32,\n        firstCode: $6uUbQ$uint32,\n        entryCount: $6uUbQ$uint32,\n        glyphIndices: new $6uUbQ$LazyArray($6uUbQ$uint16, \"numChars\")\n    },\n    12: {\n        reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n        length: $6uUbQ$uint32,\n        language: $6uUbQ$uint32,\n        nGroups: $6uUbQ$uint32,\n        groups: new $6uUbQ$LazyArray($26a62205ad06574e$var$CmapGroup, \"nGroups\")\n    },\n    13: {\n        reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n        length: $6uUbQ$uint32,\n        language: $6uUbQ$uint32,\n        nGroups: $6uUbQ$uint32,\n        groups: new $6uUbQ$LazyArray($26a62205ad06574e$var$CmapGroup, \"nGroups\")\n    },\n    14: {\n        length: $6uUbQ$uint32,\n        numRecords: $6uUbQ$uint32,\n        varSelectors: new $6uUbQ$LazyArray($26a62205ad06574e$var$VarSelectorRecord, \"numRecords\")\n    }\n});\nlet $26a62205ad06574e$var$CmapEntry = new $6uUbQ$Struct({\n    platformID: $6uUbQ$uint16,\n    encodingID: $6uUbQ$uint16,\n    table: new $6uUbQ$Pointer($6uUbQ$uint32, $26a62205ad06574e$var$CmapSubtable, {\n        type: \"parent\",\n        lazy: true\n    })\n});\nvar // character to glyph mapping\n$26a62205ad06574e$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    numSubtables: $6uUbQ$uint16,\n    tables: new $6uUbQ$Array($26a62205ad06574e$var$CmapEntry, \"numSubtables\")\n});\n\n\n\nvar // font header\n$f2612a29f92ac062$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$int32,\n    revision: $6uUbQ$int32,\n    checkSumAdjustment: $6uUbQ$uint32,\n    magicNumber: $6uUbQ$uint32,\n    flags: $6uUbQ$uint16,\n    unitsPerEm: $6uUbQ$uint16,\n    created: new $6uUbQ$Array($6uUbQ$int32, 2),\n    modified: new $6uUbQ$Array($6uUbQ$int32, 2),\n    xMin: $6uUbQ$int16,\n    yMin: $6uUbQ$int16,\n    xMax: $6uUbQ$int16,\n    yMax: $6uUbQ$int16,\n    macStyle: new $6uUbQ$Bitfield($6uUbQ$uint16, [\n        \"bold\",\n        \"italic\",\n        \"underline\",\n        \"outline\",\n        \"shadow\",\n        \"condensed\",\n        \"extended\"\n    ]),\n    lowestRecPPEM: $6uUbQ$uint16,\n    fontDirectionHint: $6uUbQ$int16,\n    indexToLocFormat: $6uUbQ$int16,\n    glyphDataFormat: $6uUbQ$int16 // 0 for current format\n});\n\n\n\nvar // horizontal header\n$2c179dd593583073$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$int32,\n    ascent: $6uUbQ$int16,\n    descent: $6uUbQ$int16,\n    lineGap: $6uUbQ$int16,\n    advanceWidthMax: $6uUbQ$uint16,\n    minLeftSideBearing: $6uUbQ$int16,\n    minRightSideBearing: $6uUbQ$int16,\n    xMaxExtent: $6uUbQ$int16,\n    caretSlopeRise: $6uUbQ$int16,\n    caretSlopeRun: $6uUbQ$int16,\n    caretOffset: $6uUbQ$int16,\n    reserved: new $6uUbQ$Reserved($6uUbQ$int16, 4),\n    metricDataFormat: $6uUbQ$int16,\n    numberOfMetrics: $6uUbQ$uint16 // Number of advance widths in 'hmtx' table\n});\n\n\n\nlet $bdc9060542264b85$var$HmtxEntry = new $6uUbQ$Struct({\n    advance: $6uUbQ$uint16,\n    bearing: $6uUbQ$int16\n});\nvar $bdc9060542264b85$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    metrics: new $6uUbQ$LazyArray($bdc9060542264b85$var$HmtxEntry, (t)=>t.parent.hhea.numberOfMetrics),\n    bearings: new $6uUbQ$LazyArray($6uUbQ$int16, (t)=>t.parent.maxp.numGlyphs - t.parent.hhea.numberOfMetrics)\n});\n\n\n\nvar // maxiumum profile\n$dbf51cb3d3fe409d$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$int32,\n    numGlyphs: $6uUbQ$uint16,\n    maxPoints: $6uUbQ$uint16,\n    maxContours: $6uUbQ$uint16,\n    maxComponentPoints: $6uUbQ$uint16,\n    maxComponentContours: $6uUbQ$uint16,\n    maxZones: $6uUbQ$uint16,\n    maxTwilightPoints: $6uUbQ$uint16,\n    maxStorage: $6uUbQ$uint16,\n    maxFunctionDefs: $6uUbQ$uint16,\n    maxInstructionDefs: $6uUbQ$uint16,\n    maxStackElements: $6uUbQ$uint16,\n    maxSizeOfInstructions: $6uUbQ$uint16,\n    maxComponentElements: $6uUbQ$uint16,\n    maxComponentDepth: $6uUbQ$uint16 // Maximum levels of recursion; 1 for simple components\n});\n\n\n\nfunction $e449ad78d50845fe$export$badc544e0651b6b1(platformID, encodingID, languageID = 0) {\n    if (platformID === 1 && $e449ad78d50845fe$export$479e671907f486d1[languageID]) return $e449ad78d50845fe$export$479e671907f486d1[languageID];\n    return $e449ad78d50845fe$export$6fef87b7618bdf0b[platformID][encodingID];\n}\nconst $e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS = new Set([\n    \"x-mac-roman\",\n    \"x-mac-cyrillic\",\n    \"iso-8859-6\",\n    \"iso-8859-8\"\n]);\nconst $e449ad78d50845fe$var$MAC_ENCODINGS = {\n    \"x-mac-croatian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\u0160\\u2122\\xb4\\xa8\\u2260\\u017D\\xd8\\u221E\\xb1\\u2264\\u2265\\u2206\\xb5\\u2202\\u2211\\u220F\\u0161\\u222B\\xaa\\xba\\u03A9\\u017E\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u0106\\xab\\u010C\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u0110\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\uF8FF\\xa9\\u2044\\u20AC\\u2039\\u203A\\xc6\\xbb\\u2013\\xb7\\u201A\\u201E\\u2030\\xc2\\u0107\\xc1\\u010D\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\u0111\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u03C0\\xcb\\u02DA\\xb8\\xca\\xe6\\u02C7\",\n    \"x-mac-gaelic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u1E02\\xb1\\u2264\\u2265\\u1E03\\u010A\\u010B\\u1E0A\\u1E0B\\u1E1E\\u1E1F\\u0120\\u0121\\u1E40\\xe6\\xf8\\u1E41\\u1E56\\u1E57\\u027C\\u0192\\u017F\\u1E60\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1E61\\u1E9B\\xff\\u0178\\u1E6A\\u20AC\\u2039\\u203A\\u0176\\u0177\\u1E6B\\xb7\\u1EF2\\u1EF3\\u204A\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\u2663\\xd2\\xda\\xdb\\xd9\\u0131\\xdd\\xfd\\u0174\\u0175\\u1E84\\u1E85\\u1E80\\u1E81\\u1E82\\u1E83\",\n    \"x-mac-greek\": \"\\xc4\\xb9\\xb2\\xc9\\xb3\\xd6\\xdc\\u0385\\xe0\\xe2\\xe4\\u0384\\xa8\\xe7\\xe9\\xe8\\xea\\xeb\\xa3\\u2122\\xee\\xef\\u2022\\xbd\\u2030\\xf4\\xf6\\xa6\\u20AC\\xf9\\xfb\\xfc\\u2020\\u0393\\u0394\\u0398\\u039B\\u039E\\u03A0\\xdf\\xae\\xa9\\u03A3\\u03AA\\xa7\\u2260\\xb0\\xb7\\u0391\\xb1\\u2264\\u2265\\xa5\\u0392\\u0395\\u0396\\u0397\\u0399\\u039A\\u039C\\u03A6\\u03AB\\u03A8\\u03A9\\u03AC\\u039D\\xac\\u039F\\u03A1\\u2248\\u03A4\\xab\\xbb\\u2026 \\u03A5\\u03A7\\u0386\\u0388\\u0153\\u2013\\u2015\\u201C\\u201D\\u2018\\u2019\\xf7\\u0389\\u038A\\u038C\\u038E\\u03AD\\u03AE\\u03AF\\u03CC\\u038F\\u03CD\\u03B1\\u03B2\\u03C8\\u03B4\\u03B5\\u03C6\\u03B3\\u03B7\\u03B9\\u03BE\\u03BA\\u03BB\\u03BC\\u03BD\\u03BF\\u03C0\\u03CE\\u03C1\\u03C3\\u03C4\\u03B8\\u03C9\\u03C2\\u03C7\\u03C5\\u03B6\\u03CA\\u03CB\\u0390\\u03B0\\xad\",\n    \"x-mac-icelandic\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\xdd\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\xe6\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u2044\\u20AC\\xd0\\xf0\\xde\\xfe\\xfd\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\",\n    \"x-mac-inuit\": \"\\u1403\\u1404\\u1405\\u1406\\u140A\\u140B\\u1431\\u1432\\u1433\\u1434\\u1438\\u1439\\u1449\\u144E\\u144F\\u1450\\u1451\\u1455\\u1456\\u1466\\u146D\\u146E\\u146F\\u1470\\u1472\\u1473\\u1483\\u148B\\u148C\\u148D\\u148E\\u1490\\u1491\\xb0\\u14A1\\u14A5\\u14A6\\u2022\\xb6\\u14A7\\xae\\xa9\\u2122\\u14A8\\u14AA\\u14AB\\u14BB\\u14C2\\u14C3\\u14C4\\u14C5\\u14C7\\u14C8\\u14D0\\u14EF\\u14F0\\u14F1\\u14F2\\u14F4\\u14F5\\u1505\\u14D5\\u14D6\\u14D7\\u14D8\\u14DA\\u14DB\\u14EA\\u1528\\u1529\\u152A\\u152B\\u152D\\u2026 \\u152E\\u153E\\u1555\\u1556\\u1557\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\u1558\\u1559\\u155A\\u155D\\u1546\\u1547\\u1548\\u1549\\u154B\\u154C\\u1550\\u157F\\u1580\\u1581\\u1582\\u1583\\u1584\\u1585\\u158F\\u1590\\u1591\\u1592\\u1593\\u1594\\u1595\\u1671\\u1672\\u1673\\u1674\\u1675\\u1676\\u1596\\u15A0\\u15A1\\u15A2\\u15A3\\u15A4\\u15A5\\u15A6\\u157C\\u0141\\u0142\",\n    \"x-mac-ce\": \"\\xc4\\u0100\\u0101\\xc9\\u0104\\xd6\\xdc\\xe1\\u0105\\u010C\\xe4\\u010D\\u0106\\u0107\\xe9\\u0179\\u017A\\u010E\\xed\\u010F\\u0112\\u0113\\u0116\\xf3\\u0117\\xf4\\xf6\\xf5\\xfa\\u011A\\u011B\\xfc\\u2020\\xb0\\u0118\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\u0119\\xa8\\u2260\\u0123\\u012E\\u012F\\u012A\\u2264\\u2265\\u012B\\u0136\\u2202\\u2211\\u0142\\u013B\\u013C\\u013D\\u013E\\u0139\\u013A\\u0145\\u0146\\u0143\\xac\\u221A\\u0144\\u0147\\u2206\\xab\\xbb\\u2026 \\u0148\\u0150\\xd5\\u0151\\u014C\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\u014D\\u0154\\u0155\\u0158\\u2039\\u203A\\u0159\\u0156\\u0157\\u0160\\u201A\\u201E\\u0161\\u015A\\u015B\\xc1\\u0164\\u0165\\xcd\\u017D\\u017E\\u016A\\xd3\\xd4\\u016B\\u016E\\xda\\u016F\\u0170\\u0171\\u0172\\u0173\\xdd\\xfd\\u0137\\u017B\\u0141\\u017C\\u0122\\u02C7\",\n    \"x-mac-romanian\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\u0102\\u0218\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\u0103\\u0219\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u2044\\u20AC\\u2039\\u203A\\u021A\\u021B\\u2021\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\u0131\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\",\n    \"x-mac-turkish\": \"\\xc4\\xc5\\xc7\\xc9\\xd1\\xd6\\xdc\\xe1\\xe0\\xe2\\xe4\\xe3\\xe5\\xe7\\xe9\\xe8\\xea\\xeb\\xed\\xec\\xee\\xef\\xf1\\xf3\\xf2\\xf4\\xf6\\xf5\\xfa\\xf9\\xfb\\xfc\\u2020\\xb0\\xa2\\xa3\\xa7\\u2022\\xb6\\xdf\\xae\\xa9\\u2122\\xb4\\xa8\\u2260\\xc6\\xd8\\u221E\\xb1\\u2264\\u2265\\xa5\\xb5\\u2202\\u2211\\u220F\\u03C0\\u222B\\xaa\\xba\\u03A9\\xe6\\xf8\\xbf\\xa1\\xac\\u221A\\u0192\\u2248\\u2206\\xab\\xbb\\u2026 \\xc0\\xc3\\xd5\\u0152\\u0153\\u2013\\u2014\\u201C\\u201D\\u2018\\u2019\\xf7\\u25CA\\xff\\u0178\\u011E\\u011F\\u0130\\u0131\\u015E\\u015F\\u2021\\xb7\\u201A\\u201E\\u2030\\xc2\\xca\\xc1\\xcb\\xc8\\xcd\\xce\\xcf\\xcc\\xd3\\xd4\\uF8FF\\xd2\\xda\\xdb\\xd9\\uF8A0\\u02C6\\u02DC\\xaf\\u02D8\\u02D9\\u02DA\\xb8\\u02DD\\u02DB\\u02C7\"\n};\nconst $e449ad78d50845fe$var$encodingCache = new Map();\nfunction $e449ad78d50845fe$export$1dceb3c14ed68bee(encoding) {\n    let cached = $e449ad78d50845fe$var$encodingCache.get(encoding);\n    if (cached) return cached;\n    // These encodings aren't supported by TextDecoder.\n    let mapping = $e449ad78d50845fe$var$MAC_ENCODINGS[encoding];\n    if (mapping) {\n        let res = new Map();\n        for(let i = 0; i < mapping.length; i++)res.set(mapping.charCodeAt(i), 0x80 + i);\n        $e449ad78d50845fe$var$encodingCache.set(encoding, res);\n        return res;\n    }\n    // Only single byte encodings can be mapped 1:1.\n    if ($e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS.has(encoding)) {\n        // TextEncoder only supports utf8, whereas TextDecoder supports legacy encodings.\n        // Use this to create a mapping of code points.\n        let decoder = new TextDecoder(encoding);\n        let mapping = new Uint8Array(0x80);\n        for(let i = 0; i < 0x80; i++)mapping[i] = 0x80 + i;\n        let res = new Map();\n        let s = decoder.decode(mapping);\n        for(let i1 = 0; i1 < 0x80; i1++)res.set(s.charCodeAt(i1), 0x80 + i1);\n        $e449ad78d50845fe$var$encodingCache.set(encoding, res);\n        return res;\n    }\n}\nconst $e449ad78d50845fe$export$6fef87b7618bdf0b = [\n    // unicode\n    [\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\",\n        \"utf16be\"\n    ],\n    // macintosh\n    // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/\n    // 0\tRoman                 17\tMalayalam\n    // 1\tJapanese\t            18\tSinhalese\n    // 2\tTraditional Chinese\t  19\tBurmese\n    // 3\tKorean\t              20\tKhmer\n    // 4\tArabic\t              21\tThai\n    // 5\tHebrew\t              22\tLaotian\n    // 6\tGreek\t                23\tGeorgian\n    // 7\tRussian\t              24\tArmenian\n    // 8\tRSymbol\t              25\tSimplified Chinese\n    // 9\tDevanagari\t          26\tTibetan\n    // 10\tGurmukhi\t            27\tMongolian\n    // 11\tGujarati\t            28\tGeez\n    // 12\tOriya\t                29\tSlavic\n    // 13\tBengali\t              30\tVietnamese\n    // 14\tTamil\t                31\tSindhi\n    // 15\tTelugu\t              32\t(Uninterpreted)\n    // 16\tKannada\n    [\n        \"x-mac-roman\",\n        \"shift-jis\",\n        \"big5\",\n        \"euc-kr\",\n        \"iso-8859-6\",\n        \"iso-8859-8\",\n        \"x-mac-greek\",\n        \"x-mac-cyrillic\",\n        \"x-mac-symbol\",\n        \"x-mac-devanagari\",\n        \"x-mac-gurmukhi\",\n        \"x-mac-gujarati\",\n        \"Oriya\",\n        \"Bengali\",\n        \"Tamil\",\n        \"Telugu\",\n        \"Kannada\",\n        \"Malayalam\",\n        \"Sinhalese\",\n        \"Burmese\",\n        \"Khmer\",\n        \"iso-8859-11\",\n        \"Laotian\",\n        \"Georgian\",\n        \"Armenian\",\n        \"hz-gb-2312\",\n        \"Tibetan\",\n        \"Mongolian\",\n        \"Geez\",\n        \"x-mac-ce\",\n        \"Vietnamese\",\n        \"Sindhi\"\n    ],\n    // ISO (deprecated)\n    [\n        \"ascii\"\n    ],\n    // windows\n    // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx\n    [\n        \"symbol\",\n        \"utf16be\",\n        \"shift-jis\",\n        \"gb18030\",\n        \"big5\",\n        \"x-cp20949\",\n        \"johab\",\n        null,\n        null,\n        null,\n        \"utf16be\"\n    ]\n];\nconst $e449ad78d50845fe$export$479e671907f486d1 = {\n    15: \"x-mac-icelandic\",\n    17: \"x-mac-turkish\",\n    18: \"x-mac-croatian\",\n    24: \"x-mac-ce\",\n    25: \"x-mac-ce\",\n    26: \"x-mac-ce\",\n    27: \"x-mac-ce\",\n    28: \"x-mac-ce\",\n    30: \"x-mac-icelandic\",\n    37: \"x-mac-romanian\",\n    38: \"x-mac-ce\",\n    39: \"x-mac-ce\",\n    40: \"x-mac-ce\",\n    143: \"x-mac-inuit\",\n    146: \"x-mac-gaelic\"\n};\nconst $e449ad78d50845fe$export$2092376fd002e13 = [\n    // unicode\n    [],\n    {\n        0: \"en\",\n        30: \"fo\",\n        60: \"ks\",\n        90: \"rw\",\n        1: \"fr\",\n        31: \"fa\",\n        61: \"ku\",\n        91: \"rn\",\n        2: \"de\",\n        32: \"ru\",\n        62: \"sd\",\n        92: \"ny\",\n        3: \"it\",\n        33: \"zh\",\n        63: \"bo\",\n        93: \"mg\",\n        4: \"nl\",\n        34: \"nl-BE\",\n        64: \"ne\",\n        94: \"eo\",\n        5: \"sv\",\n        35: \"ga\",\n        65: \"sa\",\n        128: \"cy\",\n        6: \"es\",\n        36: \"sq\",\n        66: \"mr\",\n        129: \"eu\",\n        7: \"da\",\n        37: \"ro\",\n        67: \"bn\",\n        130: \"ca\",\n        8: \"pt\",\n        38: \"cz\",\n        68: \"as\",\n        131: \"la\",\n        9: \"no\",\n        39: \"sk\",\n        69: \"gu\",\n        132: \"qu\",\n        10: \"he\",\n        40: \"si\",\n        70: \"pa\",\n        133: \"gn\",\n        11: \"ja\",\n        41: \"yi\",\n        71: \"or\",\n        134: \"ay\",\n        12: \"ar\",\n        42: \"sr\",\n        72: \"ml\",\n        135: \"tt\",\n        13: \"fi\",\n        43: \"mk\",\n        73: \"kn\",\n        136: \"ug\",\n        14: \"el\",\n        44: \"bg\",\n        74: \"ta\",\n        137: \"dz\",\n        15: \"is\",\n        45: \"uk\",\n        75: \"te\",\n        138: \"jv\",\n        16: \"mt\",\n        46: \"be\",\n        76: \"si\",\n        139: \"su\",\n        17: \"tr\",\n        47: \"uz\",\n        77: \"my\",\n        140: \"gl\",\n        18: \"hr\",\n        48: \"kk\",\n        78: \"km\",\n        141: \"af\",\n        19: \"zh-Hant\",\n        49: \"az-Cyrl\",\n        79: \"lo\",\n        142: \"br\",\n        20: \"ur\",\n        50: \"az-Arab\",\n        80: \"vi\",\n        143: \"iu\",\n        21: \"hi\",\n        51: \"hy\",\n        81: \"id\",\n        144: \"gd\",\n        22: \"th\",\n        52: \"ka\",\n        82: \"tl\",\n        145: \"gv\",\n        23: \"ko\",\n        53: \"mo\",\n        83: \"ms\",\n        146: \"ga\",\n        24: \"lt\",\n        54: \"ky\",\n        84: \"ms-Arab\",\n        147: \"to\",\n        25: \"pl\",\n        55: \"tg\",\n        85: \"am\",\n        148: \"el-polyton\",\n        26: \"hu\",\n        56: \"tk\",\n        86: \"ti\",\n        149: \"kl\",\n        27: \"es\",\n        57: \"mn-CN\",\n        87: \"om\",\n        150: \"az\",\n        28: \"lv\",\n        58: \"mn\",\n        88: \"so\",\n        151: \"nn\",\n        29: \"se\",\n        59: \"ps\",\n        89: \"sw\"\n    },\n    // ISO (deprecated)\n    [],\n    {\n        0x0436: \"af\",\n        0x4009: \"en-IN\",\n        0x0487: \"rw\",\n        0x0432: \"tn\",\n        0x041C: \"sq\",\n        0x1809: \"en-IE\",\n        0x0441: \"sw\",\n        0x045B: \"si\",\n        0x0484: \"gsw\",\n        0x2009: \"en-JM\",\n        0x0457: \"kok\",\n        0x041B: \"sk\",\n        0x045E: \"am\",\n        0x4409: \"en-MY\",\n        0x0412: \"ko\",\n        0x0424: \"sl\",\n        0x1401: \"ar-DZ\",\n        0x1409: \"en-NZ\",\n        0x0440: \"ky\",\n        0x2C0A: \"es-AR\",\n        0x3C01: \"ar-BH\",\n        0x3409: \"en-PH\",\n        0x0454: \"lo\",\n        0x400A: \"es-BO\",\n        0x0C01: \"ar\",\n        0x4809: \"en-SG\",\n        0x0426: \"lv\",\n        0x340A: \"es-CL\",\n        0x0801: \"ar-IQ\",\n        0x1C09: \"en-ZA\",\n        0x0427: \"lt\",\n        0x240A: \"es-CO\",\n        0x2C01: \"ar-JO\",\n        0x2C09: \"en-TT\",\n        0x082E: \"dsb\",\n        0x140A: \"es-CR\",\n        0x3401: \"ar-KW\",\n        0x0809: \"en-GB\",\n        0x046E: \"lb\",\n        0x1C0A: \"es-DO\",\n        0x3001: \"ar-LB\",\n        0x0409: \"en\",\n        0x042F: \"mk\",\n        0x300A: \"es-EC\",\n        0x1001: \"ar-LY\",\n        0x3009: \"en-ZW\",\n        0x083E: \"ms-BN\",\n        0x440A: \"es-SV\",\n        0x1801: \"ary\",\n        0x0425: \"et\",\n        0x043E: \"ms\",\n        0x100A: \"es-GT\",\n        0x2001: \"ar-OM\",\n        0x0438: \"fo\",\n        0x044C: \"ml\",\n        0x480A: \"es-HN\",\n        0x4001: \"ar-QA\",\n        0x0464: \"fil\",\n        0x043A: \"mt\",\n        0x080A: \"es-MX\",\n        0x0401: \"ar-SA\",\n        0x040B: \"fi\",\n        0x0481: \"mi\",\n        0x4C0A: \"es-NI\",\n        0x2801: \"ar-SY\",\n        0x080C: \"fr-BE\",\n        0x047A: \"arn\",\n        0x180A: \"es-PA\",\n        0x1C01: \"aeb\",\n        0x0C0C: \"fr-CA\",\n        0x044E: \"mr\",\n        0x3C0A: \"es-PY\",\n        0x3801: \"ar-AE\",\n        0x040C: \"fr\",\n        0x047C: \"moh\",\n        0x280A: \"es-PE\",\n        0x2401: \"ar-YE\",\n        0x140C: \"fr-LU\",\n        0x0450: \"mn\",\n        0x500A: \"es-PR\",\n        0x042B: \"hy\",\n        0x180C: \"fr-MC\",\n        0x0850: \"mn-CN\",\n        0x0C0A: \"es\",\n        0x044D: \"as\",\n        0x100C: \"fr-CH\",\n        0x0461: \"ne\",\n        0x040A: \"es\",\n        0x082C: \"az-Cyrl\",\n        0x0462: \"fy\",\n        0x0414: \"nb\",\n        0x540A: \"es-US\",\n        0x042C: \"az\",\n        0x0456: \"gl\",\n        0x0814: \"nn\",\n        0x380A: \"es-UY\",\n        0x046D: \"ba\",\n        0x0437: \"ka\",\n        0x0482: \"oc\",\n        0x200A: \"es-VE\",\n        0x042D: \"eu\",\n        0x0C07: \"de-AT\",\n        0x0448: \"or\",\n        0x081D: \"sv-FI\",\n        0x0423: \"be\",\n        0x0407: \"de\",\n        0x0463: \"ps\",\n        0x041D: \"sv\",\n        0x0845: \"bn\",\n        0x1407: \"de-LI\",\n        0x0415: \"pl\",\n        0x045A: \"syr\",\n        0x0445: \"bn-IN\",\n        0x1007: \"de-LU\",\n        0x0416: \"pt\",\n        0x0428: \"tg\",\n        0x201A: \"bs-Cyrl\",\n        0x0807: \"de-CH\",\n        0x0816: \"pt-PT\",\n        0x085F: \"tzm\",\n        0x141A: \"bs\",\n        0x0408: \"el\",\n        0x0446: \"pa\",\n        0x0449: \"ta\",\n        0x047E: \"br\",\n        0x046F: \"kl\",\n        0x046B: \"qu-BO\",\n        0x0444: \"tt\",\n        0x0402: \"bg\",\n        0x0447: \"gu\",\n        0x086B: \"qu-EC\",\n        0x044A: \"te\",\n        0x0403: \"ca\",\n        0x0468: \"ha\",\n        0x0C6B: \"qu\",\n        0x041E: \"th\",\n        0x0C04: \"zh-HK\",\n        0x040D: \"he\",\n        0x0418: \"ro\",\n        0x0451: \"bo\",\n        0x1404: \"zh-MO\",\n        0x0439: \"hi\",\n        0x0417: \"rm\",\n        0x041F: \"tr\",\n        0x0804: \"zh\",\n        0x040E: \"hu\",\n        0x0419: \"ru\",\n        0x0442: \"tk\",\n        0x1004: \"zh-SG\",\n        0x040F: \"is\",\n        0x243B: \"smn\",\n        0x0480: \"ug\",\n        0x0404: \"zh-TW\",\n        0x0470: \"ig\",\n        0x103B: \"smj-NO\",\n        0x0422: \"uk\",\n        0x0483: \"co\",\n        0x0421: \"id\",\n        0x143B: \"smj\",\n        0x042E: \"hsb\",\n        0x041A: \"hr\",\n        0x045D: \"iu\",\n        0x0C3B: \"se-FI\",\n        0x0420: \"ur\",\n        0x101A: \"hr-BA\",\n        0x085D: \"iu-Latn\",\n        0x043B: \"se\",\n        0x0843: \"uz-Cyrl\",\n        0x0405: \"cs\",\n        0x083C: \"ga\",\n        0x083B: \"se-SE\",\n        0x0443: \"uz\",\n        0x0406: \"da\",\n        0x0434: \"xh\",\n        0x203B: \"sms\",\n        0x042A: \"vi\",\n        0x048C: \"prs\",\n        0x0435: \"zu\",\n        0x183B: \"sma-NO\",\n        0x0452: \"cy\",\n        0x0465: \"dv\",\n        0x0410: \"it\",\n        0x1C3B: \"sms\",\n        0x0488: \"wo\",\n        0x0813: \"nl-BE\",\n        0x0810: \"it-CH\",\n        0x044F: \"sa\",\n        0x0485: \"sah\",\n        0x0413: \"nl\",\n        0x0411: \"ja\",\n        0x1C1A: \"sr-Cyrl-BA\",\n        0x0478: \"ii\",\n        0x0C09: \"en-AU\",\n        0x044B: \"kn\",\n        0x0C1A: \"sr\",\n        0x046A: \"yo\",\n        0x2809: \"en-BZ\",\n        0x043F: \"kk\",\n        0x181A: \"sr-Latn-BA\",\n        0x1009: \"en-CA\",\n        0x0453: \"km\",\n        0x081A: \"sr-Latn\",\n        0x2409: \"en-029\",\n        0x0486: \"quc\",\n        0x046C: \"nso\"\n    }\n];\n\n\nlet $2bcf221753ec8e32$var$NameRecord = new $6uUbQ$Struct({\n    platformID: $6uUbQ$uint16,\n    encodingID: $6uUbQ$uint16,\n    languageID: $6uUbQ$uint16,\n    nameID: $6uUbQ$uint16,\n    length: $6uUbQ$uint16,\n    string: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$String(\"length\", (t)=>(0, $e449ad78d50845fe$export$badc544e0651b6b1)(t.platformID, t.encodingID, t.languageID)), {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.parent.stringOffset,\n        allowNull: false\n    })\n});\nlet $2bcf221753ec8e32$var$LangTagRecord = new $6uUbQ$Struct({\n    length: $6uUbQ$uint16,\n    tag: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$String(\"length\", \"utf16be\"), {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.stringOffset\n    })\n});\nvar $2bcf221753ec8e32$var$NameTable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    0: {\n        count: $6uUbQ$uint16,\n        stringOffset: $6uUbQ$uint16,\n        records: new $6uUbQ$Array($2bcf221753ec8e32$var$NameRecord, \"count\")\n    },\n    1: {\n        count: $6uUbQ$uint16,\n        stringOffset: $6uUbQ$uint16,\n        records: new $6uUbQ$Array($2bcf221753ec8e32$var$NameRecord, \"count\"),\n        langTagCount: $6uUbQ$uint16,\n        langTags: new $6uUbQ$Array($2bcf221753ec8e32$var$LangTagRecord, \"langTagCount\")\n    }\n});\nvar $2bcf221753ec8e32$export$2e2bcd8739ae039 = $2bcf221753ec8e32$var$NameTable;\nconst $2bcf221753ec8e32$var$NAMES = [\n    \"copyright\",\n    \"fontFamily\",\n    \"fontSubfamily\",\n    \"uniqueSubfamily\",\n    \"fullName\",\n    \"version\",\n    \"postscriptName\",\n    \"trademark\",\n    \"manufacturer\",\n    \"designer\",\n    \"description\",\n    \"vendorURL\",\n    \"designerURL\",\n    \"license\",\n    \"licenseURL\",\n    null,\n    \"preferredFamily\",\n    \"preferredSubfamily\",\n    \"compatibleFull\",\n    \"sampleText\",\n    \"postscriptCIDFontName\",\n    \"wwsFamilyName\",\n    \"wwsSubfamilyName\"\n];\n$2bcf221753ec8e32$var$NameTable.process = function(stream) {\n    var records = {};\n    for (let record of this.records){\n        // find out what language this is for\n        let language = (0, $e449ad78d50845fe$export$2092376fd002e13)[record.platformID][record.languageID];\n        if (language == null && this.langTags != null && record.languageID >= 0x8000) language = this.langTags[record.languageID - 0x8000].tag;\n        if (language == null) language = record.platformID + \"-\" + record.languageID;\n        // if the nameID is >= 256, it is a font feature record (AAT)\n        let key = record.nameID >= 256 ? \"fontFeatures\" : $2bcf221753ec8e32$var$NAMES[record.nameID] || record.nameID;\n        if (records[key] == null) records[key] = {};\n        let obj = records[key];\n        if (record.nameID >= 256) obj = obj[record.nameID] || (obj[record.nameID] = {});\n        if (typeof record.string === \"string\" || typeof obj[language] !== \"string\") obj[language] = record.string;\n    }\n    this.records = records;\n};\n$2bcf221753ec8e32$var$NameTable.preEncode = function() {\n    if (Array.isArray(this.records)) return;\n    this.version = 0;\n    let records = [];\n    for(let key in this.records){\n        let val = this.records[key];\n        if (key === \"fontFeatures\") continue;\n        records.push({\n            platformID: 3,\n            encodingID: 1,\n            languageID: 0x409,\n            nameID: $2bcf221753ec8e32$var$NAMES.indexOf(key),\n            length: val.en.length * 2,\n            string: val.en\n        });\n        if (key === \"postscriptName\") records.push({\n            platformID: 1,\n            encodingID: 0,\n            languageID: 0,\n            nameID: $2bcf221753ec8e32$var$NAMES.indexOf(key),\n            length: val.en.length,\n            string: val.en\n        });\n    }\n    this.records = records;\n    this.count = records.length;\n    this.stringOffset = $2bcf221753ec8e32$var$NameTable.size(this, null, false);\n};\n\n\n\nvar $84b272aa31b70606$var$OS2 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    header: {\n        xAvgCharWidth: $6uUbQ$int16,\n        usWeightClass: $6uUbQ$uint16,\n        usWidthClass: $6uUbQ$uint16,\n        fsType: new $6uUbQ$Bitfield($6uUbQ$uint16, [\n            null,\n            \"noEmbedding\",\n            \"viewOnly\",\n            \"editable\",\n            null,\n            null,\n            null,\n            null,\n            \"noSubsetting\",\n            \"bitmapOnly\"\n        ]),\n        ySubscriptXSize: $6uUbQ$int16,\n        ySubscriptYSize: $6uUbQ$int16,\n        ySubscriptXOffset: $6uUbQ$int16,\n        ySubscriptYOffset: $6uUbQ$int16,\n        ySuperscriptXSize: $6uUbQ$int16,\n        ySuperscriptYSize: $6uUbQ$int16,\n        ySuperscriptXOffset: $6uUbQ$int16,\n        ySuperscriptYOffset: $6uUbQ$int16,\n        yStrikeoutSize: $6uUbQ$int16,\n        yStrikeoutPosition: $6uUbQ$int16,\n        sFamilyClass: $6uUbQ$int16,\n        panose: new $6uUbQ$Array($6uUbQ$uint8, 10),\n        ulCharRange: new $6uUbQ$Array($6uUbQ$uint32, 4),\n        vendorID: new $6uUbQ$String(4),\n        fsSelection: new $6uUbQ$Bitfield($6uUbQ$uint16, [\n            \"italic\",\n            \"underscore\",\n            \"negative\",\n            \"outlined\",\n            \"strikeout\",\n            \"bold\",\n            \"regular\",\n            \"useTypoMetrics\",\n            \"wws\",\n            \"oblique\"\n        ]),\n        usFirstCharIndex: $6uUbQ$uint16,\n        usLastCharIndex: $6uUbQ$uint16 // The maximum Unicode index in this font\n    },\n    // The Apple version of this table ends here, but the Microsoft one continues on...\n    0: {},\n    1: {\n        typoAscender: $6uUbQ$int16,\n        typoDescender: $6uUbQ$int16,\n        typoLineGap: $6uUbQ$int16,\n        winAscent: $6uUbQ$uint16,\n        winDescent: $6uUbQ$uint16,\n        codePageRange: new $6uUbQ$Array($6uUbQ$uint32, 2)\n    },\n    2: {\n        // these should be common with version 1 somehow\n        typoAscender: $6uUbQ$int16,\n        typoDescender: $6uUbQ$int16,\n        typoLineGap: $6uUbQ$int16,\n        winAscent: $6uUbQ$uint16,\n        winDescent: $6uUbQ$uint16,\n        codePageRange: new $6uUbQ$Array($6uUbQ$uint32, 2),\n        xHeight: $6uUbQ$int16,\n        capHeight: $6uUbQ$int16,\n        defaultChar: $6uUbQ$uint16,\n        breakChar: $6uUbQ$uint16,\n        maxContent: $6uUbQ$uint16\n    },\n    5: {\n        typoAscender: $6uUbQ$int16,\n        typoDescender: $6uUbQ$int16,\n        typoLineGap: $6uUbQ$int16,\n        winAscent: $6uUbQ$uint16,\n        winDescent: $6uUbQ$uint16,\n        codePageRange: new $6uUbQ$Array($6uUbQ$uint32, 2),\n        xHeight: $6uUbQ$int16,\n        capHeight: $6uUbQ$int16,\n        defaultChar: $6uUbQ$uint16,\n        breakChar: $6uUbQ$uint16,\n        maxContent: $6uUbQ$uint16,\n        usLowerOpticalPointSize: $6uUbQ$uint16,\n        usUpperOpticalPointSize: $6uUbQ$uint16\n    }\n});\nlet $84b272aa31b70606$var$versions = $84b272aa31b70606$var$OS2.versions;\n$84b272aa31b70606$var$versions[3] = $84b272aa31b70606$var$versions[4] = $84b272aa31b70606$var$versions[2];\nvar $84b272aa31b70606$export$2e2bcd8739ae039 = $84b272aa31b70606$var$OS2;\n\n\n\nvar // PostScript information\n$32d9e2eb9565d93c$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$fixed32, {\n    header: {\n        italicAngle: $6uUbQ$fixed32,\n        underlinePosition: $6uUbQ$int16,\n        underlineThickness: $6uUbQ$int16,\n        isFixedPitch: $6uUbQ$uint32,\n        minMemType42: $6uUbQ$uint32,\n        maxMemType42: $6uUbQ$uint32,\n        minMemType1: $6uUbQ$uint32,\n        maxMemType1: $6uUbQ$uint32 // Maximum memory usage when a TrueType font is downloaded as a Type 1 font\n    },\n    1: {},\n    2: {\n        numberOfGlyphs: $6uUbQ$uint16,\n        glyphNameIndex: new $6uUbQ$Array($6uUbQ$uint16, \"numberOfGlyphs\"),\n        names: new $6uUbQ$Array(new $6uUbQ$String($6uUbQ$uint8))\n    },\n    2.5: {\n        numberOfGlyphs: $6uUbQ$uint16,\n        offsets: new $6uUbQ$Array($6uUbQ$uint8, \"numberOfGlyphs\")\n    },\n    3: {},\n    4: {\n        map: new $6uUbQ$Array($6uUbQ$uint32, (t)=>t.parent.maxp.numGlyphs)\n    }\n});\n\n\n\nvar // An array of predefined values accessible by instructions\n$5202bd9d9ad8eaac$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    controlValues: new $6uUbQ$Array($6uUbQ$int16)\n});\n\n\n\nvar // A list of instructions that are executed once when a font is first used.\n// These instructions are known as the font program. The main use of this table\n// is for the definition of functions that are used in many different glyph programs.\n$5c0f37ca5ffb1850$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    instructions: new $6uUbQ$Array($6uUbQ$uint8)\n});\n\n\n\nlet $2b2b260902b1c57e$var$loca = new $6uUbQ$VersionedStruct(\"head.indexToLocFormat\", {\n    0: {\n        offsets: new $6uUbQ$Array($6uUbQ$uint16)\n    },\n    1: {\n        offsets: new $6uUbQ$Array($6uUbQ$uint32)\n    }\n});\n$2b2b260902b1c57e$var$loca.process = function() {\n    if (this.version === 0 && !this._processed) {\n        for(let i = 0; i < this.offsets.length; i++)this.offsets[i] <<= 1;\n        this._processed = true;\n    }\n};\n$2b2b260902b1c57e$var$loca.preEncode = function() {\n    if (this.version === 0 && this._processed !== false) {\n        for(let i = 0; i < this.offsets.length; i++)this.offsets[i] >>>= 1;\n        this._processed = false;\n    }\n};\nvar $2b2b260902b1c57e$export$2e2bcd8739ae039 = $2b2b260902b1c57e$var$loca;\n\n\n\nvar // Set of instructions executed whenever the point size or font transformation change\n$7afb878c7bea4f66$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    controlValueProgram: new $6uUbQ$Array($6uUbQ$uint8)\n});\n\n\n\nvar // only used for encoding\n$6c92b6371bce8bd9$export$2e2bcd8739ae039 = new $6uUbQ$Array(new $6uUbQ$Buffer);\n\n\n\n\nclass $43e9821ef3717eec$export$2e2bcd8739ae039 {\n    getCFFVersion(ctx) {\n        while(ctx && !ctx.hdrSize)ctx = ctx.parent;\n        return ctx ? ctx.version : -1;\n    }\n    decode(stream, parent) {\n        let version = this.getCFFVersion(parent);\n        let count = version >= 2 ? stream.readUInt32BE() : stream.readUInt16BE();\n        if (count === 0) return [];\n        let offSize = stream.readUInt8();\n        let offsetType;\n        if (offSize === 1) offsetType = $6uUbQ$uint8;\n        else if (offSize === 2) offsetType = $6uUbQ$uint16;\n        else if (offSize === 3) offsetType = $6uUbQ$uint24;\n        else if (offSize === 4) offsetType = $6uUbQ$uint32;\n        else throw new Error(`Bad offset size in CFFIndex: ${offSize} ${stream.pos}`);\n        let ret = [];\n        let startPos = stream.pos + (count + 1) * offSize - 1;\n        let start = offsetType.decode(stream);\n        for(let i = 0; i < count; i++){\n            let end = offsetType.decode(stream);\n            if (this.type != null) {\n                let pos = stream.pos;\n                stream.pos = startPos + start;\n                parent.length = end - start;\n                ret.push(this.type.decode(stream, parent));\n                stream.pos = pos;\n            } else ret.push({\n                offset: startPos + start,\n                length: end - start\n            });\n            start = end;\n        }\n        stream.pos = startPos + start;\n        return ret;\n    }\n    size(arr, parent) {\n        let size = 2;\n        if (arr.length === 0) return size;\n        let type = this.type || new $6uUbQ$Buffer;\n        // find maximum offset to detminine offset type\n        let offset = 1;\n        for(let i = 0; i < arr.length; i++){\n            let item = arr[i];\n            offset += type.size(item, parent);\n        }\n        let offsetType;\n        if (offset <= 0xff) offsetType = $6uUbQ$uint8;\n        else if (offset <= 0xffff) offsetType = $6uUbQ$uint16;\n        else if (offset <= 0xffffff) offsetType = $6uUbQ$uint24;\n        else if (offset <= 0xffffffff) offsetType = $6uUbQ$uint32;\n        else throw new Error(\"Bad offset in CFFIndex\");\n        size += 1 + offsetType.size() * (arr.length + 1);\n        size += offset - 1;\n        return size;\n    }\n    encode(stream, arr, parent) {\n        stream.writeUInt16BE(arr.length);\n        if (arr.length === 0) return;\n        let type = this.type || new $6uUbQ$Buffer;\n        // find maximum offset to detminine offset type\n        let sizes = [];\n        let offset = 1;\n        for (let item of arr){\n            let s = type.size(item, parent);\n            sizes.push(s);\n            offset += s;\n        }\n        let offsetType;\n        if (offset <= 0xff) offsetType = $6uUbQ$uint8;\n        else if (offset <= 0xffff) offsetType = $6uUbQ$uint16;\n        else if (offset <= 0xffffff) offsetType = $6uUbQ$uint24;\n        else if (offset <= 0xffffffff) offsetType = $6uUbQ$uint32;\n        else throw new Error(\"Bad offset in CFFIndex\");\n        // write offset size\n        stream.writeUInt8(offsetType.size());\n        // write elements\n        offset = 1;\n        offsetType.encode(stream, offset);\n        for (let size of sizes){\n            offset += size;\n            offsetType.encode(stream, offset);\n        }\n        for (let item1 of arr)type.encode(stream, item1, parent);\n        return;\n    }\n    constructor(type){\n        this.type = type;\n    }\n}\n\n\n\n\n\n\nconst $c2d28e92708f99da$var$FLOAT_EOF = 0xf;\nconst $c2d28e92708f99da$var$FLOAT_LOOKUP = [\n    \"0\",\n    \"1\",\n    \"2\",\n    \"3\",\n    \"4\",\n    \"5\",\n    \"6\",\n    \"7\",\n    \"8\",\n    \"9\",\n    \".\",\n    \"E\",\n    \"E-\",\n    null,\n    \"-\"\n];\nconst $c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP = {\n    \".\": 10,\n    \"E\": 11,\n    \"E-\": 12,\n    \"-\": 14\n};\nclass $c2d28e92708f99da$export$2e2bcd8739ae039 {\n    static decode(stream, value) {\n        if (32 <= value && value <= 246) return value - 139;\n        if (247 <= value && value <= 250) return (value - 247) * 256 + stream.readUInt8() + 108;\n        if (251 <= value && value <= 254) return -(value - 251) * 256 - stream.readUInt8() - 108;\n        if (value === 28) return stream.readInt16BE();\n        if (value === 29) return stream.readInt32BE();\n        if (value === 30) {\n            let str = \"\";\n            while(true){\n                let b = stream.readUInt8();\n                let n1 = b >> 4;\n                if (n1 === $c2d28e92708f99da$var$FLOAT_EOF) break;\n                str += $c2d28e92708f99da$var$FLOAT_LOOKUP[n1];\n                let n2 = b & 15;\n                if (n2 === $c2d28e92708f99da$var$FLOAT_EOF) break;\n                str += $c2d28e92708f99da$var$FLOAT_LOOKUP[n2];\n            }\n            return parseFloat(str);\n        }\n        return null;\n    }\n    static size(value) {\n        // if the value needs to be forced to the largest size (32 bit)\n        // e.g. for unknown pointers, set to 32768\n        if (value.forceLarge) value = 32768;\n        if ((value | 0) !== value) {\n            let str = \"\" + value;\n            return 1 + Math.ceil((str.length + 1) / 2);\n        } else if (-107 <= value && value <= 107) return 1;\n        else if (108 <= value && value <= 1131 || -1131 <= value && value <= -108) return 2;\n        else if (-32768 <= value && value <= 32767) return 3;\n        else return 5;\n    }\n    static encode(stream, value) {\n        // if the value needs to be forced to the largest size (32 bit)\n        // e.g. for unknown pointers, save the old value and set to 32768\n        let val = Number(value);\n        if (value.forceLarge) {\n            stream.writeUInt8(29);\n            return stream.writeInt32BE(val);\n        } else if ((val | 0) !== val) {\n            stream.writeUInt8(30);\n            let str = \"\" + val;\n            for(let i = 0; i < str.length; i += 2){\n                let c1 = str[i];\n                let n1 = $c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP[c1] || +c1;\n                if (i === str.length - 1) var n2 = $c2d28e92708f99da$var$FLOAT_EOF;\n                else {\n                    let c2 = str[i + 1];\n                    var n2 = $c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP[c2] || +c2;\n                }\n                stream.writeUInt8(n1 << 4 | n2 & 15);\n            }\n            if (n2 !== $c2d28e92708f99da$var$FLOAT_EOF) return stream.writeUInt8($c2d28e92708f99da$var$FLOAT_EOF << 4);\n        } else if (-107 <= val && val <= 107) return stream.writeUInt8(val + 139);\n        else if (108 <= val && val <= 1131) {\n            val -= 108;\n            stream.writeUInt8((val >> 8) + 247);\n            return stream.writeUInt8(val & 0xff);\n        } else if (-1131 <= val && val <= -108) {\n            val = -val - 108;\n            stream.writeUInt8((val >> 8) + 251);\n            return stream.writeUInt8(val & 0xff);\n        } else if (-32768 <= val && val <= 32767) {\n            stream.writeUInt8(28);\n            return stream.writeInt16BE(val);\n        } else {\n            stream.writeUInt8(29);\n            return stream.writeInt32BE(val);\n        }\n    }\n}\n\n\n\nclass $61aa549f16d58b9b$export$2e2bcd8739ae039 {\n    decodeOperands(type, stream, ret, operands) {\n        if (Array.isArray(type)) return operands.map((op, i)=>this.decodeOperands(type[i], stream, ret, [\n                op\n            ]));\n        else if (type.decode != null) return type.decode(stream, ret, operands);\n        else switch(type){\n            case \"number\":\n            case \"offset\":\n            case \"sid\":\n                return operands[0];\n            case \"boolean\":\n                return !!operands[0];\n            default:\n                return operands;\n        }\n    }\n    encodeOperands(type, stream, ctx, operands) {\n        if (Array.isArray(type)) return operands.map((op, i)=>this.encodeOperands(type[i], stream, ctx, op)[0]);\n        else if (type.encode != null) return type.encode(stream, operands, ctx);\n        else if (typeof operands === \"number\") return [\n            operands\n        ];\n        else if (typeof operands === \"boolean\") return [\n            +operands\n        ];\n        else if (Array.isArray(operands)) return operands;\n        else return [\n            operands\n        ];\n    }\n    decode(stream, parent) {\n        let end = stream.pos + parent.length;\n        let ret = {};\n        let operands = [];\n        // define hidden properties\n        Object.defineProperties(ret, {\n            parent: {\n                value: parent\n            },\n            _startOffset: {\n                value: stream.pos\n            }\n        });\n        // fill in defaults\n        for(let key in this.fields){\n            let field = this.fields[key];\n            ret[field[1]] = field[3];\n        }\n        while(stream.pos < end){\n            let b = stream.readUInt8();\n            if (b < 28) {\n                if (b === 12) b = b << 8 | stream.readUInt8();\n                let field = this.fields[b];\n                if (!field) throw new Error(`Unknown operator ${b}`);\n                let val = this.decodeOperands(field[2], stream, ret, operands);\n                if (val != null) {\n                    if (val instanceof (0, $6uUbQ$PropertyDescriptor)) Object.defineProperty(ret, field[1], val);\n                    else ret[field[1]] = val;\n                }\n                operands = [];\n            } else operands.push((0, $c2d28e92708f99da$export$2e2bcd8739ae039).decode(stream, b));\n        }\n        return ret;\n    }\n    size(dict, parent, includePointers = true) {\n        let ctx = {\n            parent: parent,\n            val: dict,\n            pointerSize: 0,\n            startOffset: parent.startOffset || 0\n        };\n        let len = 0;\n        for(let k in this.fields){\n            let field = this.fields[k];\n            let val = dict[field[1]];\n            if (val == null || (0, $6uUbQ$fastdeepequal)(val, field[3])) continue;\n            let operands = this.encodeOperands(field[2], null, ctx, val);\n            for (let op of operands)len += (0, $c2d28e92708f99da$export$2e2bcd8739ae039).size(op);\n            let key = Array.isArray(field[0]) ? field[0] : [\n                field[0]\n            ];\n            len += key.length;\n        }\n        if (includePointers) len += ctx.pointerSize;\n        return len;\n    }\n    encode(stream, dict, parent) {\n        let ctx = {\n            pointers: [],\n            startOffset: stream.pos,\n            parent: parent,\n            val: dict,\n            pointerSize: 0\n        };\n        ctx.pointerOffset = stream.pos + this.size(dict, ctx, false);\n        for (let field of this.ops){\n            let val = dict[field[1]];\n            if (val == null || (0, $6uUbQ$fastdeepequal)(val, field[3])) continue;\n            let operands = this.encodeOperands(field[2], stream, ctx, val);\n            for (let op of operands)(0, $c2d28e92708f99da$export$2e2bcd8739ae039).encode(stream, op);\n            let key = Array.isArray(field[0]) ? field[0] : [\n                field[0]\n            ];\n            for (let op1 of key)stream.writeUInt8(op1);\n        }\n        let i = 0;\n        while(i < ctx.pointers.length){\n            let ptr = ctx.pointers[i++];\n            ptr.type.encode(stream, ptr.val, ptr.parent);\n        }\n        return;\n    }\n    constructor(ops = []){\n        this.ops = ops;\n        this.fields = {};\n        for (let field of ops){\n            let key = Array.isArray(field[0]) ? field[0][0] << 8 | field[0][1] : field[0];\n            this.fields[key] = field;\n        }\n    }\n}\n\n\n\n\nclass $0e34a43d05bde82c$export$2e2bcd8739ae039 extends $6uUbQ$Pointer {\n    decode(stream, parent, operands) {\n        this.offsetType = {\n            decode: ()=>operands[0]\n        };\n        return super.decode(stream, parent, operands);\n    }\n    encode(stream, value, ctx) {\n        if (!stream) {\n            // compute the size (so ctx.pointerSize is correct)\n            this.offsetType = {\n                size: ()=>0\n            };\n            this.size(value, ctx);\n            return [\n                new $0e34a43d05bde82c$var$Ptr(0)\n            ];\n        }\n        let ptr = null;\n        this.offsetType = {\n            encode: (stream, val)=>ptr = val\n        };\n        super.encode(stream, value, ctx);\n        return [\n            new $0e34a43d05bde82c$var$Ptr(ptr)\n        ];\n    }\n    constructor(type, options = {}){\n        if (options.type == null) options.type = \"global\";\n        super(null, type, options);\n    }\n}\nclass $0e34a43d05bde82c$var$Ptr {\n    valueOf() {\n        return this.val;\n    }\n    constructor(val){\n        this.val = val;\n        this.forceLarge = true;\n    }\n}\n\n\n\n\n\nclass $6d59db2e29cc77b3$var$CFFBlendOp {\n    static decode(stream, parent, operands) {\n        let numBlends = operands.pop();\n        // TODO: actually blend. For now just consume the deltas\n        // since we don't use any of the values anyway.\n        while(operands.length > numBlends)operands.pop();\n    }\n}\nvar $6d59db2e29cc77b3$export$2e2bcd8739ae039 = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([\n    // key       name                    type                                          default\n    [\n        6,\n        \"BlueValues\",\n        \"delta\",\n        null\n    ],\n    [\n        7,\n        \"OtherBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        8,\n        \"FamilyBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        9,\n        \"FamilyOtherBlues\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            9\n        ],\n        \"BlueScale\",\n        \"number\",\n        0.039625\n    ],\n    [\n        [\n            12,\n            10\n        ],\n        \"BlueShift\",\n        \"number\",\n        7\n    ],\n    [\n        [\n            12,\n            11\n        ],\n        \"BlueFuzz\",\n        \"number\",\n        1\n    ],\n    [\n        10,\n        \"StdHW\",\n        \"number\",\n        null\n    ],\n    [\n        11,\n        \"StdVW\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            12\n        ],\n        \"StemSnapH\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            13\n        ],\n        \"StemSnapV\",\n        \"delta\",\n        null\n    ],\n    [\n        [\n            12,\n            14\n        ],\n        \"ForceBold\",\n        \"boolean\",\n        false\n    ],\n    [\n        [\n            12,\n            17\n        ],\n        \"LanguageGroup\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            18\n        ],\n        \"ExpansionFactor\",\n        \"number\",\n        0.06\n    ],\n    [\n        [\n            12,\n            19\n        ],\n        \"initialRandomSeed\",\n        \"number\",\n        0\n    ],\n    [\n        20,\n        \"defaultWidthX\",\n        \"number\",\n        0\n    ],\n    [\n        21,\n        \"nominalWidthX\",\n        \"number\",\n        0\n    ],\n    [\n        22,\n        \"vsindex\",\n        \"number\",\n        0\n    ],\n    [\n        23,\n        \"blend\",\n        $6d59db2e29cc77b3$var$CFFBlendOp,\n        null\n    ],\n    [\n        19,\n        \"Subrs\",\n        new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039), {\n            type: \"local\"\n        }),\n        null\n    ]\n]);\n\n\nvar // Automatically generated from Appendix A of the CFF specification; do\n// not edit. Length should be 391.\n$229224aec43783c5$export$2e2bcd8739ae039 = [\n    \".notdef\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"questiondown\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"AE\",\n    \"ordfeminine\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"ae\",\n    \"dotlessi\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\",\n    \"onesuperior\",\n    \"logicalnot\",\n    \"mu\",\n    \"trademark\",\n    \"Eth\",\n    \"onehalf\",\n    \"plusminus\",\n    \"Thorn\",\n    \"onequarter\",\n    \"divide\",\n    \"brokenbar\",\n    \"degree\",\n    \"thorn\",\n    \"threequarters\",\n    \"twosuperior\",\n    \"registered\",\n    \"minus\",\n    \"eth\",\n    \"multiply\",\n    \"threesuperior\",\n    \"copyright\",\n    \"Aacute\",\n    \"Acircumflex\",\n    \"Adieresis\",\n    \"Agrave\",\n    \"Aring\",\n    \"Atilde\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ecircumflex\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Ntilde\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"Odieresis\",\n    \"Ograve\",\n    \"Otilde\",\n    \"Scaron\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Udieresis\",\n    \"Ugrave\",\n    \"Yacute\",\n    \"Ydieresis\",\n    \"Zcaron\",\n    \"aacute\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"agrave\",\n    \"aring\",\n    \"atilde\",\n    \"ccedilla\",\n    \"eacute\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"egrave\",\n    \"iacute\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"igrave\",\n    \"ntilde\",\n    \"oacute\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"ograve\",\n    \"otilde\",\n    \"scaron\",\n    \"uacute\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"ugrave\",\n    \"yacute\",\n    \"ydieresis\",\n    \"zcaron\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"Dotaccentsmall\",\n    \"Macronsmall\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\",\n    \"001.000\",\n    \"001.001\",\n    \"001.002\",\n    \"001.003\",\n    \"Black\",\n    \"Bold\",\n    \"Book\",\n    \"Light\",\n    \"Medium\",\n    \"Regular\",\n    \"Roman\",\n    \"Semibold\"\n];\n\n\nlet $bc0433d9b7e41f5f$export$dee0027060fa13bd = [\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"\",\n    \"questiondown\",\n    \"\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"\",\n    \"ring\",\n    \"cedilla\",\n    \"\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"AE\",\n    \"\",\n    \"ordfeminine\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"ae\",\n    \"\",\n    \"\",\n    \"\",\n    \"dotlessi\",\n    \"\",\n    \"\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\"\n];\nlet $bc0433d9b7e41f5f$export$4f58f497e14a53c3 = [\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"space\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"\",\n    \"\",\n    \"isuperior\",\n    \"\",\n    \"\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"\",\n    \"\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"\",\n    \"\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"\",\n    \"Dotaccentsmall\",\n    \"\",\n    \"\",\n    \"Macronsmall\",\n    \"\",\n    \"\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"\",\n    \"\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"\",\n    \"\",\n    \"\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"\",\n    \"\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\"\n];\n\n\nlet $ef658f5c9a1488b2$export$c33b50336c234f16 = [\n    \".notdef\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quoteright\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"quoteleft\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"exclamdown\",\n    \"cent\",\n    \"sterling\",\n    \"fraction\",\n    \"yen\",\n    \"florin\",\n    \"section\",\n    \"currency\",\n    \"quotesingle\",\n    \"quotedblleft\",\n    \"guillemotleft\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"endash\",\n    \"dagger\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"paragraph\",\n    \"bullet\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"quotedblright\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"perthousand\",\n    \"questiondown\",\n    \"grave\",\n    \"acute\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"dieresis\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"emdash\",\n    \"AE\",\n    \"ordfeminine\",\n    \"Lslash\",\n    \"Oslash\",\n    \"OE\",\n    \"ordmasculine\",\n    \"ae\",\n    \"dotlessi\",\n    \"lslash\",\n    \"oslash\",\n    \"oe\",\n    \"germandbls\",\n    \"onesuperior\",\n    \"logicalnot\",\n    \"mu\",\n    \"trademark\",\n    \"Eth\",\n    \"onehalf\",\n    \"plusminus\",\n    \"Thorn\",\n    \"onequarter\",\n    \"divide\",\n    \"brokenbar\",\n    \"degree\",\n    \"thorn\",\n    \"threequarters\",\n    \"twosuperior\",\n    \"registered\",\n    \"minus\",\n    \"eth\",\n    \"multiply\",\n    \"threesuperior\",\n    \"copyright\",\n    \"Aacute\",\n    \"Acircumflex\",\n    \"Adieresis\",\n    \"Agrave\",\n    \"Aring\",\n    \"Atilde\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ecircumflex\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Ntilde\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"Odieresis\",\n    \"Ograve\",\n    \"Otilde\",\n    \"Scaron\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Udieresis\",\n    \"Ugrave\",\n    \"Yacute\",\n    \"Ydieresis\",\n    \"Zcaron\",\n    \"aacute\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"agrave\",\n    \"aring\",\n    \"atilde\",\n    \"ccedilla\",\n    \"eacute\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"egrave\",\n    \"iacute\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"igrave\",\n    \"ntilde\",\n    \"oacute\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"ograve\",\n    \"otilde\",\n    \"scaron\",\n    \"uacute\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"ugrave\",\n    \"yacute\",\n    \"ydieresis\",\n    \"zcaron\"\n];\nlet $ef658f5c9a1488b2$export$3ed0f9e1fee8d489 = [\n    \".notdef\",\n    \"space\",\n    \"exclamsmall\",\n    \"Hungarumlautsmall\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"ampersandsmall\",\n    \"Acutesmall\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"questionsmall\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"Circumflexsmall\",\n    \"hyphensuperior\",\n    \"Gravesmall\",\n    \"Asmall\",\n    \"Bsmall\",\n    \"Csmall\",\n    \"Dsmall\",\n    \"Esmall\",\n    \"Fsmall\",\n    \"Gsmall\",\n    \"Hsmall\",\n    \"Ismall\",\n    \"Jsmall\",\n    \"Ksmall\",\n    \"Lsmall\",\n    \"Msmall\",\n    \"Nsmall\",\n    \"Osmall\",\n    \"Psmall\",\n    \"Qsmall\",\n    \"Rsmall\",\n    \"Ssmall\",\n    \"Tsmall\",\n    \"Usmall\",\n    \"Vsmall\",\n    \"Wsmall\",\n    \"Xsmall\",\n    \"Ysmall\",\n    \"Zsmall\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"Tildesmall\",\n    \"exclamdownsmall\",\n    \"centoldstyle\",\n    \"Lslashsmall\",\n    \"Scaronsmall\",\n    \"Zcaronsmall\",\n    \"Dieresissmall\",\n    \"Brevesmall\",\n    \"Caronsmall\",\n    \"Dotaccentsmall\",\n    \"Macronsmall\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"Ogoneksmall\",\n    \"Ringsmall\",\n    \"Cedillasmall\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"questiondownsmall\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\",\n    \"Agravesmall\",\n    \"Aacutesmall\",\n    \"Acircumflexsmall\",\n    \"Atildesmall\",\n    \"Adieresissmall\",\n    \"Aringsmall\",\n    \"AEsmall\",\n    \"Ccedillasmall\",\n    \"Egravesmall\",\n    \"Eacutesmall\",\n    \"Ecircumflexsmall\",\n    \"Edieresissmall\",\n    \"Igravesmall\",\n    \"Iacutesmall\",\n    \"Icircumflexsmall\",\n    \"Idieresissmall\",\n    \"Ethsmall\",\n    \"Ntildesmall\",\n    \"Ogravesmall\",\n    \"Oacutesmall\",\n    \"Ocircumflexsmall\",\n    \"Otildesmall\",\n    \"Odieresissmall\",\n    \"OEsmall\",\n    \"Oslashsmall\",\n    \"Ugravesmall\",\n    \"Uacutesmall\",\n    \"Ucircumflexsmall\",\n    \"Udieresissmall\",\n    \"Yacutesmall\",\n    \"Thornsmall\",\n    \"Ydieresissmall\"\n];\nlet $ef658f5c9a1488b2$export$dc28be11139d4120 = [\n    \".notdef\",\n    \"space\",\n    \"dollaroldstyle\",\n    \"dollarsuperior\",\n    \"parenleftsuperior\",\n    \"parenrightsuperior\",\n    \"twodotenleader\",\n    \"onedotenleader\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"fraction\",\n    \"zerooldstyle\",\n    \"oneoldstyle\",\n    \"twooldstyle\",\n    \"threeoldstyle\",\n    \"fouroldstyle\",\n    \"fiveoldstyle\",\n    \"sixoldstyle\",\n    \"sevenoldstyle\",\n    \"eightoldstyle\",\n    \"nineoldstyle\",\n    \"colon\",\n    \"semicolon\",\n    \"commasuperior\",\n    \"threequartersemdash\",\n    \"periodsuperior\",\n    \"asuperior\",\n    \"bsuperior\",\n    \"centsuperior\",\n    \"dsuperior\",\n    \"esuperior\",\n    \"isuperior\",\n    \"lsuperior\",\n    \"msuperior\",\n    \"nsuperior\",\n    \"osuperior\",\n    \"rsuperior\",\n    \"ssuperior\",\n    \"tsuperior\",\n    \"ff\",\n    \"fi\",\n    \"fl\",\n    \"ffi\",\n    \"ffl\",\n    \"parenleftinferior\",\n    \"parenrightinferior\",\n    \"hyphensuperior\",\n    \"colonmonetary\",\n    \"onefitted\",\n    \"rupiah\",\n    \"centoldstyle\",\n    \"figuredash\",\n    \"hypheninferior\",\n    \"onequarter\",\n    \"onehalf\",\n    \"threequarters\",\n    \"oneeighth\",\n    \"threeeighths\",\n    \"fiveeighths\",\n    \"seveneighths\",\n    \"onethird\",\n    \"twothirds\",\n    \"zerosuperior\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"foursuperior\",\n    \"fivesuperior\",\n    \"sixsuperior\",\n    \"sevensuperior\",\n    \"eightsuperior\",\n    \"ninesuperior\",\n    \"zeroinferior\",\n    \"oneinferior\",\n    \"twoinferior\",\n    \"threeinferior\",\n    \"fourinferior\",\n    \"fiveinferior\",\n    \"sixinferior\",\n    \"seveninferior\",\n    \"eightinferior\",\n    \"nineinferior\",\n    \"centinferior\",\n    \"dollarinferior\",\n    \"periodinferior\",\n    \"commainferior\"\n];\n\n\n\n//########################\n// Scripts and Languages #\n//########################\nlet $7cbbe4e24ef3cb75$var$LangSysTable = new $6uUbQ$Struct({\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    reqFeatureIndex: $6uUbQ$uint16,\n    featureCount: $6uUbQ$uint16,\n    featureIndexes: new $6uUbQ$Array($6uUbQ$uint16, \"featureCount\")\n});\nlet $7cbbe4e24ef3cb75$var$LangSysRecord = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    langSys: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$LangSysTable, {\n        type: \"parent\"\n    })\n});\nlet $7cbbe4e24ef3cb75$var$Script = new $6uUbQ$Struct({\n    defaultLangSys: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$LangSysTable),\n    count: $6uUbQ$uint16,\n    langSysRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LangSysRecord, \"count\")\n});\nlet $7cbbe4e24ef3cb75$var$ScriptRecord = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    script: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$Script, {\n        type: \"parent\"\n    })\n});\nlet $7cbbe4e24ef3cb75$export$3e15fc05ce864229 = new $6uUbQ$Array($7cbbe4e24ef3cb75$var$ScriptRecord, $6uUbQ$uint16);\n//#######################\n// Features and Lookups #\n//#######################\nlet $7cbbe4e24ef3cb75$var$FeatureParams = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    nameID: $6uUbQ$uint16\n});\nlet $7cbbe4e24ef3cb75$export$6e91cf7616333d5 = new $6uUbQ$Struct({\n    featureParams: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$FeatureParams),\n    lookupCount: $6uUbQ$uint16,\n    lookupListIndexes: new $6uUbQ$Array($6uUbQ$uint16, \"lookupCount\")\n});\nlet $7cbbe4e24ef3cb75$var$FeatureRecord = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    feature: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$6e91cf7616333d5, {\n        type: \"parent\"\n    })\n});\nlet $7cbbe4e24ef3cb75$export$aa18130def4b6cb4 = new $6uUbQ$Array($7cbbe4e24ef3cb75$var$FeatureRecord, $6uUbQ$uint16);\nlet $7cbbe4e24ef3cb75$var$LookupFlags = new $6uUbQ$Struct({\n    markAttachmentType: $6uUbQ$uint8,\n    flags: new $6uUbQ$Bitfield($6uUbQ$uint8, [\n        \"rightToLeft\",\n        \"ignoreBaseGlyphs\",\n        \"ignoreLigatures\",\n        \"ignoreMarks\",\n        \"useMarkFilteringSet\"\n    ])\n});\nfunction $7cbbe4e24ef3cb75$export$df0008c6ff2da22a(SubTable) {\n    let Lookup = new $6uUbQ$Struct({\n        lookupType: $6uUbQ$uint16,\n        flags: $7cbbe4e24ef3cb75$var$LookupFlags,\n        subTableCount: $6uUbQ$uint16,\n        subTables: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, SubTable), \"subTableCount\"),\n        markFilteringSet: new $6uUbQ$Optional($6uUbQ$uint16, (t)=>t.flags.flags.useMarkFilteringSet)\n    });\n    return new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, Lookup), $6uUbQ$uint16);\n}\n//#################\n// Coverage Table #\n//#################\nlet $7cbbe4e24ef3cb75$var$RangeRecord = new $6uUbQ$Struct({\n    start: $6uUbQ$uint16,\n    end: $6uUbQ$uint16,\n    startCoverageIndex: $6uUbQ$uint16\n});\nlet $7cbbe4e24ef3cb75$export$17608c3f81a6111 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n        glyphCount: $6uUbQ$uint16,\n        glyphs: new $6uUbQ$Array($6uUbQ$uint16, \"glyphCount\")\n    },\n    2: {\n        rangeCount: $6uUbQ$uint16,\n        rangeRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$RangeRecord, \"rangeCount\")\n    }\n});\n//#########################\n// Class Definition Table #\n//#########################\nlet $7cbbe4e24ef3cb75$var$ClassRangeRecord = new $6uUbQ$Struct({\n    start: $6uUbQ$uint16,\n    end: $6uUbQ$uint16,\n    class: $6uUbQ$uint16\n});\nlet $7cbbe4e24ef3cb75$export$843d551fbbafef71 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n        startGlyph: $6uUbQ$uint16,\n        glyphCount: $6uUbQ$uint16,\n        classValueArray: new $6uUbQ$Array($6uUbQ$uint16, \"glyphCount\")\n    },\n    2: {\n        classRangeCount: $6uUbQ$uint16,\n        classRangeRecord: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$ClassRangeRecord, \"classRangeCount\")\n    }\n});\nlet $7cbbe4e24ef3cb75$export$8215d14a63d9fb10 = new $6uUbQ$Struct({\n    a: $6uUbQ$uint16,\n    b: $6uUbQ$uint16,\n    deltaFormat: $6uUbQ$uint16\n});\n//#############################################\n// Contextual Substitution/Positioning Tables #\n//#############################################\nlet $7cbbe4e24ef3cb75$var$LookupRecord = new $6uUbQ$Struct({\n    sequenceIndex: $6uUbQ$uint16,\n    lookupListIndex: $6uUbQ$uint16\n});\nlet $7cbbe4e24ef3cb75$var$Rule = new $6uUbQ$Struct({\n    glyphCount: $6uUbQ$uint16,\n    lookupCount: $6uUbQ$uint16,\n    input: new $6uUbQ$Array($6uUbQ$uint16, (t)=>t.glyphCount - 1),\n    lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n});\nlet $7cbbe4e24ef3cb75$var$RuleSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$Rule), $6uUbQ$uint16);\nlet $7cbbe4e24ef3cb75$var$ClassRule = new $6uUbQ$Struct({\n    glyphCount: $6uUbQ$uint16,\n    lookupCount: $6uUbQ$uint16,\n    classes: new $6uUbQ$Array($6uUbQ$uint16, (t)=>t.glyphCount - 1),\n    lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n});\nlet $7cbbe4e24ef3cb75$var$ClassSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ClassRule), $6uUbQ$uint16);\nlet $7cbbe4e24ef3cb75$export$841858b892ce1f4c = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n        coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n        ruleSetCount: $6uUbQ$uint16,\n        ruleSets: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$RuleSet), \"ruleSetCount\")\n    },\n    2: {\n        coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n        classDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n        classSetCnt: $6uUbQ$uint16,\n        classSet: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ClassSet), \"classSetCnt\")\n    },\n    3: {\n        glyphCount: $6uUbQ$uint16,\n        lookupCount: $6uUbQ$uint16,\n        coverages: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"glyphCount\"),\n        lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n    }\n});\n//######################################################\n// Chaining Contextual Substitution/Positioning Tables #\n//######################################################\nlet $7cbbe4e24ef3cb75$var$ChainRule = new $6uUbQ$Struct({\n    backtrackGlyphCount: $6uUbQ$uint16,\n    backtrack: new $6uUbQ$Array($6uUbQ$uint16, \"backtrackGlyphCount\"),\n    inputGlyphCount: $6uUbQ$uint16,\n    input: new $6uUbQ$Array($6uUbQ$uint16, (t)=>t.inputGlyphCount - 1),\n    lookaheadGlyphCount: $6uUbQ$uint16,\n    lookahead: new $6uUbQ$Array($6uUbQ$uint16, \"lookaheadGlyphCount\"),\n    lookupCount: $6uUbQ$uint16,\n    lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n});\nlet $7cbbe4e24ef3cb75$var$ChainRuleSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ChainRule), $6uUbQ$uint16);\nlet $7cbbe4e24ef3cb75$export$5e6d09e6861162f6 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n        coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n        chainCount: $6uUbQ$uint16,\n        chainRuleSets: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ChainRuleSet), \"chainCount\")\n    },\n    2: {\n        coverage: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111),\n        backtrackClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n        inputClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n        lookaheadClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$843d551fbbafef71),\n        chainCount: $6uUbQ$uint16,\n        chainClassSet: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$var$ChainRuleSet), \"chainCount\")\n    },\n    3: {\n        backtrackGlyphCount: $6uUbQ$uint16,\n        backtrackCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"backtrackGlyphCount\"),\n        inputGlyphCount: $6uUbQ$uint16,\n        inputCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"inputGlyphCount\"),\n        lookaheadGlyphCount: $6uUbQ$uint16,\n        lookaheadCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $7cbbe4e24ef3cb75$export$17608c3f81a6111), \"lookaheadGlyphCount\"),\n        lookupCount: $6uUbQ$uint16,\n        lookupRecords: new $6uUbQ$Array($7cbbe4e24ef3cb75$var$LookupRecord, \"lookupCount\")\n    }\n});\n\n\n\n/*******************\n * Variation Store *\n *******************/ let $1a47b0c45c1c22fe$var$F2DOT14 = new $6uUbQ$Fixed(16, \"BE\", 14);\nlet $1a47b0c45c1c22fe$var$RegionAxisCoordinates = new $6uUbQ$Struct({\n    startCoord: $1a47b0c45c1c22fe$var$F2DOT14,\n    peakCoord: $1a47b0c45c1c22fe$var$F2DOT14,\n    endCoord: $1a47b0c45c1c22fe$var$F2DOT14\n});\nlet $1a47b0c45c1c22fe$var$VariationRegionList = new $6uUbQ$Struct({\n    axisCount: $6uUbQ$uint16,\n    regionCount: $6uUbQ$uint16,\n    variationRegions: new $6uUbQ$Array(new $6uUbQ$Array($1a47b0c45c1c22fe$var$RegionAxisCoordinates, \"axisCount\"), \"regionCount\")\n});\nlet $1a47b0c45c1c22fe$var$DeltaSet = new $6uUbQ$Struct({\n    shortDeltas: new $6uUbQ$Array($6uUbQ$int16, (t)=>t.parent.shortDeltaCount),\n    regionDeltas: new $6uUbQ$Array($6uUbQ$int8, (t)=>t.parent.regionIndexCount - t.parent.shortDeltaCount),\n    deltas: (t)=>t.shortDeltas.concat(t.regionDeltas)\n});\nlet $1a47b0c45c1c22fe$var$ItemVariationData = new $6uUbQ$Struct({\n    itemCount: $6uUbQ$uint16,\n    shortDeltaCount: $6uUbQ$uint16,\n    regionIndexCount: $6uUbQ$uint16,\n    regionIndexes: new $6uUbQ$Array($6uUbQ$uint16, \"regionIndexCount\"),\n    deltaSets: new $6uUbQ$Array($1a47b0c45c1c22fe$var$DeltaSet, \"itemCount\")\n});\nlet $1a47b0c45c1c22fe$export$fe1b122a2710f241 = new $6uUbQ$Struct({\n    format: $6uUbQ$uint16,\n    variationRegionList: new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$VariationRegionList),\n    variationDataCount: $6uUbQ$uint16,\n    itemVariationData: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$ItemVariationData), \"variationDataCount\")\n});\n/**********************\n * Feature Variations *\n **********************/ let $1a47b0c45c1c22fe$var$ConditionTable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n        axisIndex: $6uUbQ$uint16,\n        axisIndex: $6uUbQ$uint16,\n        filterRangeMinValue: $1a47b0c45c1c22fe$var$F2DOT14,\n        filterRangeMaxValue: $1a47b0c45c1c22fe$var$F2DOT14\n    }\n});\nlet $1a47b0c45c1c22fe$var$ConditionSet = new $6uUbQ$Struct({\n    conditionCount: $6uUbQ$uint16,\n    conditionTable: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$ConditionTable), \"conditionCount\")\n});\nlet $1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord = new $6uUbQ$Struct({\n    featureIndex: $6uUbQ$uint16,\n    alternateFeatureTable: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $7cbbe4e24ef3cb75$export$6e91cf7616333d5), {\n        type: \"parent\"\n    })\n});\nlet $1a47b0c45c1c22fe$var$FeatureTableSubstitution = new $6uUbQ$Struct({\n    version: $6uUbQ$fixed32,\n    substitutionCount: $6uUbQ$uint16,\n    substitutions: new $6uUbQ$Array($1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord, \"substitutionCount\")\n});\nlet $1a47b0c45c1c22fe$var$FeatureVariationRecord = new $6uUbQ$Struct({\n    conditionSet: new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$ConditionSet, {\n        type: \"parent\"\n    }),\n    featureTableSubstitution: new $6uUbQ$Pointer($6uUbQ$uint32, $1a47b0c45c1c22fe$var$FeatureTableSubstitution, {\n        type: \"parent\"\n    })\n});\nlet $1a47b0c45c1c22fe$export$441b70b7971dd419 = new $6uUbQ$Struct({\n    majorVersion: $6uUbQ$uint16,\n    minorVersion: $6uUbQ$uint16,\n    featureVariationRecordCount: $6uUbQ$uint32,\n    featureVariationRecords: new $6uUbQ$Array($1a47b0c45c1c22fe$var$FeatureVariationRecord, \"featureVariationRecordCount\")\n});\n\n\n// Checks if an operand is an index of a predefined value,\n// otherwise delegates to the provided type.\nclass $b84fd3dd9d8eddb2$var$PredefinedOp {\n    decode(stream, parent, operands) {\n        if (this.predefinedOps[operands[0]]) return this.predefinedOps[operands[0]];\n        return this.type.decode(stream, parent, operands);\n    }\n    size(value, ctx) {\n        return this.type.size(value, ctx);\n    }\n    encode(stream, value, ctx) {\n        let index = this.predefinedOps.indexOf(value);\n        if (index !== -1) return index;\n        return this.type.encode(stream, value, ctx);\n    }\n    constructor(predefinedOps, type){\n        this.predefinedOps = predefinedOps;\n        this.type = type;\n    }\n}\nclass $b84fd3dd9d8eddb2$var$CFFEncodingVersion extends $6uUbQ$Number {\n    decode(stream) {\n        return $6uUbQ$uint8.decode(stream) & 0x7f;\n    }\n    constructor(){\n        super(\"UInt8\");\n    }\n}\nlet $b84fd3dd9d8eddb2$var$Range1 = new $6uUbQ$Struct({\n    first: $6uUbQ$uint16,\n    nLeft: $6uUbQ$uint8\n});\nlet $b84fd3dd9d8eddb2$var$Range2 = new $6uUbQ$Struct({\n    first: $6uUbQ$uint16,\n    nLeft: $6uUbQ$uint16\n});\nlet $b84fd3dd9d8eddb2$var$CFFCustomEncoding = new $6uUbQ$VersionedStruct(new $b84fd3dd9d8eddb2$var$CFFEncodingVersion(), {\n    0: {\n        nCodes: $6uUbQ$uint8,\n        codes: new $6uUbQ$Array($6uUbQ$uint8, \"nCodes\")\n    },\n    1: {\n        nRanges: $6uUbQ$uint8,\n        ranges: new $6uUbQ$Array($b84fd3dd9d8eddb2$var$Range1, \"nRanges\")\n    }\n});\nlet $b84fd3dd9d8eddb2$var$CFFEncoding = new $b84fd3dd9d8eddb2$var$PredefinedOp([\n    (0, $bc0433d9b7e41f5f$export$dee0027060fa13bd),\n    (0, $bc0433d9b7e41f5f$export$4f58f497e14a53c3)\n], new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFCustomEncoding, {\n    lazy: true\n}));\n// Decodes an array of ranges until the total\n// length is equal to the provided length.\nclass $b84fd3dd9d8eddb2$var$RangeArray extends $6uUbQ$Array {\n    decode(stream, parent) {\n        let length = (0, $6uUbQ$resolveLength)(this.length, stream, parent);\n        let count = 0;\n        let res = [];\n        while(count < length){\n            let range = this.type.decode(stream, parent);\n            range.offset = count;\n            count += range.nLeft + 1;\n            res.push(range);\n        }\n        return res;\n    }\n}\nlet $b84fd3dd9d8eddb2$var$CFFCustomCharset = new $6uUbQ$VersionedStruct($6uUbQ$uint8, {\n    0: {\n        glyphs: new $6uUbQ$Array($6uUbQ$uint16, (t)=>t.parent.CharStrings.length - 1)\n    },\n    1: {\n        ranges: new $b84fd3dd9d8eddb2$var$RangeArray($b84fd3dd9d8eddb2$var$Range1, (t)=>t.parent.CharStrings.length - 1)\n    },\n    2: {\n        ranges: new $b84fd3dd9d8eddb2$var$RangeArray($b84fd3dd9d8eddb2$var$Range2, (t)=>t.parent.CharStrings.length - 1)\n    }\n});\nlet $b84fd3dd9d8eddb2$var$CFFCharset = new $b84fd3dd9d8eddb2$var$PredefinedOp([\n    (0, $ef658f5c9a1488b2$export$c33b50336c234f16),\n    (0, $ef658f5c9a1488b2$export$3ed0f9e1fee8d489),\n    (0, $ef658f5c9a1488b2$export$dc28be11139d4120)\n], new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFCustomCharset, {\n    lazy: true\n}));\nlet $b84fd3dd9d8eddb2$var$FDRange3 = new $6uUbQ$Struct({\n    first: $6uUbQ$uint16,\n    fd: $6uUbQ$uint8\n});\nlet $b84fd3dd9d8eddb2$var$FDRange4 = new $6uUbQ$Struct({\n    first: $6uUbQ$uint32,\n    fd: $6uUbQ$uint16\n});\nlet $b84fd3dd9d8eddb2$var$FDSelect = new $6uUbQ$VersionedStruct($6uUbQ$uint8, {\n    0: {\n        fds: new $6uUbQ$Array($6uUbQ$uint8, (t)=>t.parent.CharStrings.length)\n    },\n    3: {\n        nRanges: $6uUbQ$uint16,\n        ranges: new $6uUbQ$Array($b84fd3dd9d8eddb2$var$FDRange3, \"nRanges\"),\n        sentinel: $6uUbQ$uint16\n    },\n    4: {\n        nRanges: $6uUbQ$uint32,\n        ranges: new $6uUbQ$Array($b84fd3dd9d8eddb2$var$FDRange4, \"nRanges\"),\n        sentinel: $6uUbQ$uint32\n    }\n});\nlet $b84fd3dd9d8eddb2$var$ptr = new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)((0, $6d59db2e29cc77b3$export$2e2bcd8739ae039));\nclass $b84fd3dd9d8eddb2$var$CFFPrivateOp {\n    decode(stream, parent, operands) {\n        parent.length = operands[0];\n        return $b84fd3dd9d8eddb2$var$ptr.decode(stream, parent, [\n            operands[1]\n        ]);\n    }\n    size(dict, ctx) {\n        return [\n            (0, $6d59db2e29cc77b3$export$2e2bcd8739ae039).size(dict, ctx, false),\n            $b84fd3dd9d8eddb2$var$ptr.size(dict, ctx)[0]\n        ];\n    }\n    encode(stream, dict, ctx) {\n        return [\n            (0, $6d59db2e29cc77b3$export$2e2bcd8739ae039).size(dict, ctx, false),\n            $b84fd3dd9d8eddb2$var$ptr.encode(stream, dict, ctx)[0]\n        ];\n    }\n}\nlet $b84fd3dd9d8eddb2$var$FontDict = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([\n    // key       name                   type(s)                                 default\n    [\n        18,\n        \"Private\",\n        new $b84fd3dd9d8eddb2$var$CFFPrivateOp,\n        null\n    ],\n    [\n        [\n            12,\n            38\n        ],\n        \"FontName\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        [\n            12,\n            5\n        ],\n        \"PaintType\",\n        \"number\",\n        0\n    ], \n]);\nlet $b84fd3dd9d8eddb2$var$CFFTopDict = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([\n    // key       name                   type(s)                                 default\n    [\n        [\n            12,\n            30\n        ],\n        \"ROS\",\n        [\n            \"sid\",\n            \"sid\",\n            \"number\"\n        ],\n        null\n    ],\n    [\n        0,\n        \"version\",\n        \"sid\",\n        null\n    ],\n    [\n        1,\n        \"Notice\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            0\n        ],\n        \"Copyright\",\n        \"sid\",\n        null\n    ],\n    [\n        2,\n        \"FullName\",\n        \"sid\",\n        null\n    ],\n    [\n        3,\n        \"FamilyName\",\n        \"sid\",\n        null\n    ],\n    [\n        4,\n        \"Weight\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            1\n        ],\n        \"isFixedPitch\",\n        \"boolean\",\n        false\n    ],\n    [\n        [\n            12,\n            2\n        ],\n        \"ItalicAngle\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            3\n        ],\n        \"UnderlinePosition\",\n        \"number\",\n        -100\n    ],\n    [\n        [\n            12,\n            4\n        ],\n        \"UnderlineThickness\",\n        \"number\",\n        50\n    ],\n    [\n        [\n            12,\n            5\n        ],\n        \"PaintType\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            6\n        ],\n        \"CharstringType\",\n        \"number\",\n        2\n    ],\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        13,\n        \"UniqueID\",\n        \"number\",\n        null\n    ],\n    [\n        5,\n        \"FontBBox\",\n        \"array\",\n        [\n            0,\n            0,\n            0,\n            0\n        ]\n    ],\n    [\n        [\n            12,\n            8\n        ],\n        \"StrokeWidth\",\n        \"number\",\n        0\n    ],\n    [\n        14,\n        \"XUID\",\n        \"array\",\n        null\n    ],\n    [\n        15,\n        \"charset\",\n        $b84fd3dd9d8eddb2$var$CFFCharset,\n        (0, $ef658f5c9a1488b2$export$c33b50336c234f16)\n    ],\n    [\n        16,\n        \"Encoding\",\n        $b84fd3dd9d8eddb2$var$CFFEncoding,\n        (0, $bc0433d9b7e41f5f$export$dee0027060fa13bd)\n    ],\n    [\n        17,\n        \"CharStrings\",\n        new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)),\n        null\n    ],\n    [\n        18,\n        \"Private\",\n        new $b84fd3dd9d8eddb2$var$CFFPrivateOp,\n        null\n    ],\n    [\n        [\n            12,\n            20\n        ],\n        \"SyntheticBase\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            21\n        ],\n        \"PostScript\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            22\n        ],\n        \"BaseFontName\",\n        \"sid\",\n        null\n    ],\n    [\n        [\n            12,\n            23\n        ],\n        \"BaseFontBlend\",\n        \"delta\",\n        null\n    ],\n    // CID font specific\n    [\n        [\n            12,\n            31\n        ],\n        \"CIDFontVersion\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            32\n        ],\n        \"CIDFontRevision\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            33\n        ],\n        \"CIDFontType\",\n        \"number\",\n        0\n    ],\n    [\n        [\n            12,\n            34\n        ],\n        \"CIDCount\",\n        \"number\",\n        8720\n    ],\n    [\n        [\n            12,\n            35\n        ],\n        \"UIDBase\",\n        \"number\",\n        null\n    ],\n    [\n        [\n            12,\n            37\n        ],\n        \"FDSelect\",\n        new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FDSelect),\n        null\n    ],\n    [\n        [\n            12,\n            36\n        ],\n        \"FDArray\",\n        new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FontDict)),\n        null\n    ],\n    [\n        [\n            12,\n            38\n        ],\n        \"FontName\",\n        \"sid\",\n        null\n    ]\n]);\nlet $b84fd3dd9d8eddb2$var$VariationStore = new $6uUbQ$Struct({\n    length: $6uUbQ$uint16,\n    itemVariationStore: (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241)\n});\nlet $b84fd3dd9d8eddb2$var$CFF2TopDict = new (0, $61aa549f16d58b9b$export$2e2bcd8739ae039)([\n    [\n        [\n            12,\n            7\n        ],\n        \"FontMatrix\",\n        \"array\",\n        [\n            0.001,\n            0,\n            0,\n            0.001,\n            0,\n            0\n        ]\n    ],\n    [\n        17,\n        \"CharStrings\",\n        new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)),\n        null\n    ],\n    [\n        [\n            12,\n            37\n        ],\n        \"FDSelect\",\n        new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FDSelect),\n        null\n    ],\n    [\n        [\n            12,\n            36\n        ],\n        \"FDArray\",\n        new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)(new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$FontDict)),\n        null\n    ],\n    [\n        24,\n        \"vstore\",\n        new (0, $0e34a43d05bde82c$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$VariationStore),\n        null\n    ],\n    [\n        25,\n        \"maxstack\",\n        \"number\",\n        193\n    ]\n]);\nlet $b84fd3dd9d8eddb2$var$CFFTop = new $6uUbQ$VersionedStruct($6uUbQ$fixed16, {\n    1: {\n        hdrSize: $6uUbQ$uint8,\n        offSize: $6uUbQ$uint8,\n        nameIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)(new $6uUbQ$String(\"length\")),\n        topDictIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)($b84fd3dd9d8eddb2$var$CFFTopDict),\n        stringIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)(new $6uUbQ$String(\"length\")),\n        globalSubrIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)\n    },\n    2: {\n        hdrSize: $6uUbQ$uint8,\n        length: $6uUbQ$uint16,\n        topDict: $b84fd3dd9d8eddb2$var$CFF2TopDict,\n        globalSubrIndex: new (0, $43e9821ef3717eec$export$2e2bcd8739ae039)\n    }\n});\nvar $b84fd3dd9d8eddb2$export$2e2bcd8739ae039 = $b84fd3dd9d8eddb2$var$CFFTop;\n\n\n\n\nclass $822ac0d589e4e237$var$CFFFont {\n    static decode(stream) {\n        return new $822ac0d589e4e237$var$CFFFont(stream);\n    }\n    decode() {\n        let start = this.stream.pos;\n        let top = (0, $b84fd3dd9d8eddb2$export$2e2bcd8739ae039).decode(this.stream);\n        for(let key in top){\n            let val = top[key];\n            this[key] = val;\n        }\n        if (this.version < 2) {\n            if (this.topDictIndex.length !== 1) throw new Error(\"Only a single font is allowed in CFF\");\n            this.topDict = this.topDictIndex[0];\n        }\n        this.isCIDFont = this.topDict.ROS != null;\n        return this;\n    }\n    string(sid) {\n        if (this.version >= 2) return null;\n        if (sid < (0, $229224aec43783c5$export$2e2bcd8739ae039).length) return (0, $229224aec43783c5$export$2e2bcd8739ae039)[sid];\n        return this.stringIndex[sid - (0, $229224aec43783c5$export$2e2bcd8739ae039).length];\n    }\n    get postscriptName() {\n        if (this.version < 2) return this.nameIndex[0];\n        return null;\n    }\n    get fullName() {\n        return this.string(this.topDict.FullName);\n    }\n    get familyName() {\n        return this.string(this.topDict.FamilyName);\n    }\n    getCharString(glyph) {\n        this.stream.pos = this.topDict.CharStrings[glyph].offset;\n        return this.stream.readBuffer(this.topDict.CharStrings[glyph].length);\n    }\n    getGlyphName(gid) {\n        // CFF2 glyph names are in the post table.\n        if (this.version >= 2) return null;\n        // CID-keyed fonts don't have glyph names\n        if (this.isCIDFont) return null;\n        let { charset: charset  } = this.topDict;\n        if (Array.isArray(charset)) return charset[gid];\n        if (gid === 0) return \".notdef\";\n        gid -= 1;\n        switch(charset.version){\n            case 0:\n                return this.string(charset.glyphs[gid]);\n            case 1:\n            case 2:\n                for(let i = 0; i < charset.ranges.length; i++){\n                    let range = charset.ranges[i];\n                    if (range.offset <= gid && gid <= range.offset + range.nLeft) return this.string(range.first + (gid - range.offset));\n                }\n                break;\n        }\n        return null;\n    }\n    fdForGlyph(gid) {\n        if (!this.topDict.FDSelect) return null;\n        switch(this.topDict.FDSelect.version){\n            case 0:\n                return this.topDict.FDSelect.fds[gid];\n            case 3:\n            case 4:\n                let { ranges: ranges  } = this.topDict.FDSelect;\n                let low = 0;\n                let high = ranges.length - 1;\n                while(low <= high){\n                    let mid = low + high >> 1;\n                    if (gid < ranges[mid].first) high = mid - 1;\n                    else if (mid < high && gid >= ranges[mid + 1].first) low = mid + 1;\n                    else return ranges[mid].fd;\n                }\n            default:\n                throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`);\n        }\n    }\n    privateDictForGlyph(gid) {\n        if (this.topDict.FDSelect) {\n            let fd = this.fdForGlyph(gid);\n            if (this.topDict.FDArray[fd]) return this.topDict.FDArray[fd].Private;\n            return null;\n        }\n        if (this.version < 2) return this.topDict.Private;\n        return this.topDict.FDArray[0].Private;\n    }\n    constructor(stream){\n        this.stream = stream;\n        this.decode();\n    }\n}\nvar $822ac0d589e4e237$export$2e2bcd8739ae039 = $822ac0d589e4e237$var$CFFFont;\n\n\n\nlet $2bbf2bc1ce37cd8f$var$VerticalOrigin = new $6uUbQ$Struct({\n    glyphIndex: $6uUbQ$uint16,\n    vertOriginY: $6uUbQ$int16\n});\nvar $2bbf2bc1ce37cd8f$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    majorVersion: $6uUbQ$uint16,\n    minorVersion: $6uUbQ$uint16,\n    defaultVertOriginY: $6uUbQ$int16,\n    numVertOriginYMetrics: $6uUbQ$uint16,\n    metrics: new $6uUbQ$Array($2bbf2bc1ce37cd8f$var$VerticalOrigin, \"numVertOriginYMetrics\")\n});\n\n\n\n\nlet $0941618dc22a946d$export$16b227cb15d716a0 = new $6uUbQ$Struct({\n    height: $6uUbQ$uint8,\n    width: $6uUbQ$uint8,\n    horiBearingX: $6uUbQ$int8,\n    horiBearingY: $6uUbQ$int8,\n    horiAdvance: $6uUbQ$uint8,\n    vertBearingX: $6uUbQ$int8,\n    vertBearingY: $6uUbQ$int8,\n    vertAdvance: $6uUbQ$uint8\n});\nlet $0941618dc22a946d$export$62c53e75f69bfe12 = new $6uUbQ$Struct({\n    height: $6uUbQ$uint8,\n    width: $6uUbQ$uint8,\n    bearingX: $6uUbQ$int8,\n    bearingY: $6uUbQ$int8,\n    advance: $6uUbQ$uint8\n});\nlet $0941618dc22a946d$var$EBDTComponent = new $6uUbQ$Struct({\n    glyph: $6uUbQ$uint16,\n    xOffset: $6uUbQ$int8,\n    yOffset: $6uUbQ$int8\n});\nclass $0941618dc22a946d$var$ByteAligned {\n}\nclass $0941618dc22a946d$var$BitAligned {\n}\nlet $0941618dc22a946d$export$f1f5ddeb20d14f = new $6uUbQ$VersionedStruct(\"version\", {\n    1: {\n        metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n        data: $0941618dc22a946d$var$ByteAligned\n    },\n    2: {\n        metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n        data: $0941618dc22a946d$var$BitAligned\n    },\n    // format 3 is deprecated\n    // format 4 is not supported by Microsoft\n    5: {\n        data: $0941618dc22a946d$var$BitAligned\n    },\n    6: {\n        metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n        data: $0941618dc22a946d$var$ByteAligned\n    },\n    7: {\n        metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n        data: $0941618dc22a946d$var$BitAligned\n    },\n    8: {\n        metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n        pad: new $6uUbQ$Reserved($6uUbQ$uint8),\n        numComponents: $6uUbQ$uint16,\n        components: new $6uUbQ$Array($0941618dc22a946d$var$EBDTComponent, \"numComponents\")\n    },\n    9: {\n        metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n        pad: new $6uUbQ$Reserved($6uUbQ$uint8),\n        numComponents: $6uUbQ$uint16,\n        components: new $6uUbQ$Array($0941618dc22a946d$var$EBDTComponent, \"numComponents\")\n    },\n    17: {\n        metrics: $0941618dc22a946d$export$62c53e75f69bfe12,\n        dataLen: $6uUbQ$uint32,\n        data: new $6uUbQ$Buffer(\"dataLen\")\n    },\n    18: {\n        metrics: $0941618dc22a946d$export$16b227cb15d716a0,\n        dataLen: $6uUbQ$uint32,\n        data: new $6uUbQ$Buffer(\"dataLen\")\n    },\n    19: {\n        dataLen: $6uUbQ$uint32,\n        data: new $6uUbQ$Buffer(\"dataLen\")\n    }\n});\n\n\nlet $9911c4c7201c13de$var$SBitLineMetrics = new $6uUbQ$Struct({\n    ascender: $6uUbQ$int8,\n    descender: $6uUbQ$int8,\n    widthMax: $6uUbQ$uint8,\n    caretSlopeNumerator: $6uUbQ$int8,\n    caretSlopeDenominator: $6uUbQ$int8,\n    caretOffset: $6uUbQ$int8,\n    minOriginSB: $6uUbQ$int8,\n    minAdvanceSB: $6uUbQ$int8,\n    maxBeforeBL: $6uUbQ$int8,\n    minAfterBL: $6uUbQ$int8,\n    pad: new $6uUbQ$Reserved($6uUbQ$int8, 2)\n});\nlet $9911c4c7201c13de$var$CodeOffsetPair = new $6uUbQ$Struct({\n    glyphCode: $6uUbQ$uint16,\n    offset: $6uUbQ$uint16\n});\nlet $9911c4c7201c13de$var$IndexSubtable = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    header: {\n        imageFormat: $6uUbQ$uint16,\n        imageDataOffset: $6uUbQ$uint32\n    },\n    1: {\n        offsetArray: new $6uUbQ$Array($6uUbQ$uint32, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n    },\n    2: {\n        imageSize: $6uUbQ$uint32,\n        bigMetrics: (0, $0941618dc22a946d$export$16b227cb15d716a0)\n    },\n    3: {\n        offsetArray: new $6uUbQ$Array($6uUbQ$uint16, (t)=>t.parent.lastGlyphIndex - t.parent.firstGlyphIndex + 1)\n    },\n    4: {\n        numGlyphs: $6uUbQ$uint32,\n        glyphArray: new $6uUbQ$Array($9911c4c7201c13de$var$CodeOffsetPair, (t)=>t.numGlyphs + 1)\n    },\n    5: {\n        imageSize: $6uUbQ$uint32,\n        bigMetrics: (0, $0941618dc22a946d$export$16b227cb15d716a0),\n        numGlyphs: $6uUbQ$uint32,\n        glyphCodeArray: new $6uUbQ$Array($6uUbQ$uint16, \"numGlyphs\")\n    }\n});\nlet $9911c4c7201c13de$var$IndexSubtableArray = new $6uUbQ$Struct({\n    firstGlyphIndex: $6uUbQ$uint16,\n    lastGlyphIndex: $6uUbQ$uint16,\n    subtable: new $6uUbQ$Pointer($6uUbQ$uint32, $9911c4c7201c13de$var$IndexSubtable)\n});\nlet $9911c4c7201c13de$var$BitmapSizeTable = new $6uUbQ$Struct({\n    indexSubTableArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($9911c4c7201c13de$var$IndexSubtableArray, 1), {\n        type: \"parent\"\n    }),\n    indexTablesSize: $6uUbQ$uint32,\n    numberOfIndexSubTables: $6uUbQ$uint32,\n    colorRef: $6uUbQ$uint32,\n    hori: $9911c4c7201c13de$var$SBitLineMetrics,\n    vert: $9911c4c7201c13de$var$SBitLineMetrics,\n    startGlyphIndex: $6uUbQ$uint16,\n    endGlyphIndex: $6uUbQ$uint16,\n    ppemX: $6uUbQ$uint8,\n    ppemY: $6uUbQ$uint8,\n    bitDepth: $6uUbQ$uint8,\n    flags: new $6uUbQ$Bitfield($6uUbQ$uint8, [\n        \"horizontal\",\n        \"vertical\"\n    ])\n});\nvar $9911c4c7201c13de$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint32,\n    numSizes: $6uUbQ$uint32,\n    sizes: new $6uUbQ$Array($9911c4c7201c13de$var$BitmapSizeTable, \"numSizes\")\n});\n\n\n\nlet $abb847051efd51b1$var$ImageTable = new $6uUbQ$Struct({\n    ppem: $6uUbQ$uint16,\n    resolution: $6uUbQ$uint16,\n    imageOffsets: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, \"void\"), (t)=>t.parent.parent.maxp.numGlyphs + 1)\n});\nvar // This is the Apple sbix table, used by the \"Apple Color Emoji\" font.\n// It includes several image tables with images for each bitmap glyph\n// of several different sizes.\n$abb847051efd51b1$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    flags: new $6uUbQ$Bitfield($6uUbQ$uint16, [\n        \"renderOutlines\"\n    ]),\n    numImgTables: $6uUbQ$uint32,\n    imageTables: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, $abb847051efd51b1$var$ImageTable), \"numImgTables\")\n});\n\n\n\nlet $eb629188f3dfefdd$var$LayerRecord = new $6uUbQ$Struct({\n    gid: $6uUbQ$uint16,\n    paletteIndex: $6uUbQ$uint16 // Index value to use in the appropriate palette. This value must\n}); // be less than numPaletteEntries in the CPAL table, except for\n// the special case noted below. Each palette entry is 16 bits.\n// A palette index of 0xFFFF is a special case indicating that\n// the text foreground color should be used.\nlet $eb629188f3dfefdd$var$BaseGlyphRecord = new $6uUbQ$Struct({\n    gid: $6uUbQ$uint16,\n    // and is not rendered for color.\n    firstLayerIndex: $6uUbQ$uint16,\n    // There will be numLayers consecutive entries for this base glyph.\n    numLayers: $6uUbQ$uint16\n});\nvar $eb629188f3dfefdd$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    numBaseGlyphRecords: $6uUbQ$uint16,\n    baseGlyphRecord: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($eb629188f3dfefdd$var$BaseGlyphRecord, \"numBaseGlyphRecords\")),\n    layerRecords: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($eb629188f3dfefdd$var$LayerRecord, \"numLayerRecords\"), {\n        lazy: true\n    }),\n    numLayerRecords: $6uUbQ$uint16\n});\n\n\n\nlet $08734b8e7dc64587$var$ColorRecord = new $6uUbQ$Struct({\n    blue: $6uUbQ$uint8,\n    green: $6uUbQ$uint8,\n    red: $6uUbQ$uint8,\n    alpha: $6uUbQ$uint8\n});\nvar $08734b8e7dc64587$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    header: {\n        numPaletteEntries: $6uUbQ$uint16,\n        numPalettes: $6uUbQ$uint16,\n        numColorRecords: $6uUbQ$uint16,\n        colorRecords: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($08734b8e7dc64587$var$ColorRecord, \"numColorRecords\")),\n        colorRecordIndices: new $6uUbQ$Array($6uUbQ$uint16, \"numPalettes\")\n    },\n    0: {},\n    1: {\n        offsetPaletteTypeArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($6uUbQ$uint32, \"numPalettes\")),\n        offsetPaletteLabelArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($6uUbQ$uint16, \"numPalettes\")),\n        offsetPaletteEntryLabelArray: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($6uUbQ$uint16, \"numPaletteEntries\"))\n    }\n});\n\n\n\n\n\nlet $497cef411d884e34$var$BaseCoord = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n        coordinate: $6uUbQ$int16 // X or Y value, in design units\n    },\n    2: {\n        coordinate: $6uUbQ$int16,\n        referenceGlyph: $6uUbQ$uint16,\n        baseCoordPoint: $6uUbQ$uint16 // Index of contour point on the referenceGlyph\n    },\n    3: {\n        coordinate: $6uUbQ$int16,\n        deviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10)) // Device table for X or Y value\n    }\n});\nlet $497cef411d884e34$var$BaseValues = new $6uUbQ$Struct({\n    defaultIndex: $6uUbQ$uint16,\n    baseCoordCount: $6uUbQ$uint16,\n    baseCoords: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord), \"baseCoordCount\")\n});\nlet $497cef411d884e34$var$FeatMinMaxRecord = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    minCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord, {\n        type: \"parent\"\n    }),\n    maxCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord, {\n        type: \"parent\"\n    }) // May be NULL\n});\nlet $497cef411d884e34$var$MinMax = new $6uUbQ$Struct({\n    minCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord),\n    maxCoord: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseCoord),\n    featMinMaxCount: $6uUbQ$uint16,\n    featMinMaxRecords: new $6uUbQ$Array($497cef411d884e34$var$FeatMinMaxRecord, \"featMinMaxCount\") // In alphabetical order\n});\nlet $497cef411d884e34$var$BaseLangSysRecord = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    minMax: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$MinMax, {\n        type: \"parent\"\n    })\n});\nlet $497cef411d884e34$var$BaseScript = new $6uUbQ$Struct({\n    baseValues: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseValues),\n    defaultMinMax: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$MinMax),\n    baseLangSysCount: $6uUbQ$uint16,\n    baseLangSysRecords: new $6uUbQ$Array($497cef411d884e34$var$BaseLangSysRecord, \"baseLangSysCount\") // in alphabetical order by BaseLangSysTag\n});\nlet $497cef411d884e34$var$BaseScriptRecord = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    script: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseScript, {\n        type: \"parent\"\n    })\n});\nlet $497cef411d884e34$var$BaseScriptList = new $6uUbQ$Array($497cef411d884e34$var$BaseScriptRecord, $6uUbQ$uint16);\n// Array of 4-byte baseline identification tags-must be in alphabetical order\nlet $497cef411d884e34$var$BaseTagList = new $6uUbQ$Array(new $6uUbQ$String(4), $6uUbQ$uint16);\nlet $497cef411d884e34$var$Axis = new $6uUbQ$Struct({\n    baseTagList: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseTagList),\n    baseScriptList: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$BaseScriptList)\n});\nvar $497cef411d884e34$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n    header: {\n        horizAxis: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$Axis),\n        vertAxis: new $6uUbQ$Pointer($6uUbQ$uint16, $497cef411d884e34$var$Axis) // May be NULL\n    },\n    0x00010000: {},\n    0x00010001: {\n        itemVariationStore: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241))\n    }\n});\n\n\n\n\n\nlet $cf5f33c63ef209e6$var$AttachPoint = new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16);\nlet $cf5f33c63ef209e6$var$AttachList = new $6uUbQ$Struct({\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    glyphCount: $6uUbQ$uint16,\n    attachPoints: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$AttachPoint), \"glyphCount\")\n});\nlet $cf5f33c63ef209e6$var$CaretValue = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n        coordinate: $6uUbQ$int16\n    },\n    2: {\n        caretValuePoint: $6uUbQ$uint16\n    },\n    3: {\n        coordinate: $6uUbQ$int16,\n        deviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10))\n    }\n});\nlet $cf5f33c63ef209e6$var$LigGlyph = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$CaretValue), $6uUbQ$uint16);\nlet $cf5f33c63ef209e6$var$LigCaretList = new $6uUbQ$Struct({\n    coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n    ligGlyphCount: $6uUbQ$uint16,\n    ligGlyphs: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$LigGlyph), \"ligGlyphCount\")\n});\nlet $cf5f33c63ef209e6$var$MarkGlyphSetsDef = new $6uUbQ$Struct({\n    markSetTableFormat: $6uUbQ$uint16,\n    markSetCount: $6uUbQ$uint16,\n    coverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint32, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)), \"markSetCount\")\n});\nvar $cf5f33c63ef209e6$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n    header: {\n        glyphClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71)),\n        attachList: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$AttachList),\n        ligCaretList: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$LigCaretList),\n        markAttachClassDef: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71))\n    },\n    0x00010000: {},\n    0x00010002: {\n        markGlyphSetsDef: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$MarkGlyphSetsDef)\n    },\n    0x00010003: {\n        markGlyphSetsDef: new $6uUbQ$Pointer($6uUbQ$uint16, $cf5f33c63ef209e6$var$MarkGlyphSetsDef),\n        itemVariationStore: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241))\n    }\n});\n\n\n\n\n\nlet $47e0e8ef515d9903$var$ValueFormat = new $6uUbQ$Bitfield($6uUbQ$uint16, [\n    \"xPlacement\",\n    \"yPlacement\",\n    \"xAdvance\",\n    \"yAdvance\",\n    \"xPlaDevice\",\n    \"yPlaDevice\",\n    \"xAdvDevice\",\n    \"yAdvDevice\"\n]);\nlet $47e0e8ef515d9903$var$types = {\n    xPlacement: $6uUbQ$int16,\n    yPlacement: $6uUbQ$int16,\n    xAdvance: $6uUbQ$int16,\n    yAdvance: $6uUbQ$int16,\n    xPlaDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    yPlaDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    xAdvDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    }),\n    yAdvDevice: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10), {\n        type: \"global\",\n        relativeTo: (ctx)=>ctx.rel\n    })\n};\nclass $47e0e8ef515d9903$var$ValueRecord {\n    buildStruct(parent) {\n        let struct = parent;\n        while(!struct[this.key] && struct.parent)struct = struct.parent;\n        if (!struct[this.key]) return;\n        let fields = {};\n        fields.rel = ()=>struct._startOffset;\n        let format = struct[this.key];\n        for(let key in format)if (format[key]) fields[key] = $47e0e8ef515d9903$var$types[key];\n        return new $6uUbQ$Struct(fields);\n    }\n    size(val, ctx) {\n        return this.buildStruct(ctx).size(val, ctx);\n    }\n    decode(stream, parent) {\n        let res = this.buildStruct(parent).decode(stream, parent);\n        delete res.rel;\n        return res;\n    }\n    constructor(key = \"valueFormat\"){\n        this.key = key;\n    }\n}\nlet $47e0e8ef515d9903$var$PairValueRecord = new $6uUbQ$Struct({\n    secondGlyph: $6uUbQ$uint16,\n    value1: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat1\"),\n    value2: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat2\")\n});\nlet $47e0e8ef515d9903$var$PairSet = new $6uUbQ$Array($47e0e8ef515d9903$var$PairValueRecord, $6uUbQ$uint16);\nlet $47e0e8ef515d9903$var$Class2Record = new $6uUbQ$Struct({\n    value1: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat1\"),\n    value2: new $47e0e8ef515d9903$var$ValueRecord(\"valueFormat2\")\n});\nlet $47e0e8ef515d9903$var$Anchor = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    1: {\n        xCoordinate: $6uUbQ$int16,\n        yCoordinate: $6uUbQ$int16\n    },\n    2: {\n        xCoordinate: $6uUbQ$int16,\n        yCoordinate: $6uUbQ$int16,\n        anchorPoint: $6uUbQ$uint16\n    },\n    3: {\n        xCoordinate: $6uUbQ$int16,\n        yCoordinate: $6uUbQ$int16,\n        xDeviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10)),\n        yDeviceTable: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$8215d14a63d9fb10))\n    }\n});\nlet $47e0e8ef515d9903$var$EntryExitRecord = new $6uUbQ$Struct({\n    entryAnchor: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor, {\n        type: \"parent\"\n    }),\n    exitAnchor: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor, {\n        type: \"parent\"\n    })\n});\nlet $47e0e8ef515d9903$var$MarkRecord = new $6uUbQ$Struct({\n    class: $6uUbQ$uint16,\n    markAnchor: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor, {\n        type: \"parent\"\n    })\n});\nlet $47e0e8ef515d9903$var$MarkArray = new $6uUbQ$Array($47e0e8ef515d9903$var$MarkRecord, $6uUbQ$uint16);\nlet $47e0e8ef515d9903$var$BaseRecord = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor), (t)=>t.parent.classCount);\nlet $47e0e8ef515d9903$var$BaseArray = new $6uUbQ$Array($47e0e8ef515d9903$var$BaseRecord, $6uUbQ$uint16);\nlet $47e0e8ef515d9903$var$ComponentRecord = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$Anchor), (t)=>t.parent.parent.classCount);\nlet $47e0e8ef515d9903$var$LigatureAttach = new $6uUbQ$Array($47e0e8ef515d9903$var$ComponentRecord, $6uUbQ$uint16);\nlet $47e0e8ef515d9903$var$LigatureArray = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$LigatureAttach), $6uUbQ$uint16);\nlet $47e0e8ef515d9903$export$73a8cfb19cd43a0f = new $6uUbQ$VersionedStruct(\"lookupType\", {\n    1: new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n        1: {\n            coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n            valueFormat: $47e0e8ef515d9903$var$ValueFormat,\n            value: new $47e0e8ef515d9903$var$ValueRecord()\n        },\n        2: {\n            coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n            valueFormat: $47e0e8ef515d9903$var$ValueFormat,\n            valueCount: $6uUbQ$uint16,\n            values: new $6uUbQ$LazyArray(new $47e0e8ef515d9903$var$ValueRecord(), \"valueCount\")\n        }\n    }),\n    2: new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n        1: {\n            coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n            valueFormat1: $47e0e8ef515d9903$var$ValueFormat,\n            valueFormat2: $47e0e8ef515d9903$var$ValueFormat,\n            pairSetCount: $6uUbQ$uint16,\n            pairSets: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$PairSet), \"pairSetCount\")\n        },\n        2: {\n            coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n            valueFormat1: $47e0e8ef515d9903$var$ValueFormat,\n            valueFormat2: $47e0e8ef515d9903$var$ValueFormat,\n            classDef1: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71)),\n            classDef2: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$843d551fbbafef71)),\n            class1Count: $6uUbQ$uint16,\n            class2Count: $6uUbQ$uint16,\n            classRecords: new $6uUbQ$LazyArray(new $6uUbQ$LazyArray($47e0e8ef515d9903$var$Class2Record, \"class2Count\"), \"class1Count\")\n        }\n    }),\n    3: {\n        format: $6uUbQ$uint16,\n        coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n        entryExitCount: $6uUbQ$uint16,\n        entryExitRecords: new $6uUbQ$Array($47e0e8ef515d9903$var$EntryExitRecord, \"entryExitCount\")\n    },\n    4: {\n        format: $6uUbQ$uint16,\n        markCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n        baseCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n        classCount: $6uUbQ$uint16,\n        markArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$MarkArray),\n        baseArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$BaseArray)\n    },\n    5: {\n        format: $6uUbQ$uint16,\n        markCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n        ligatureCoverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n        classCount: $6uUbQ$uint16,\n        markArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$MarkArray),\n        ligatureArray: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$LigatureArray)\n    },\n    6: {\n        format: $6uUbQ$uint16,\n        mark1Coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n        mark2Coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n        classCount: $6uUbQ$uint16,\n        mark1Array: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$MarkArray),\n        mark2Array: new $6uUbQ$Pointer($6uUbQ$uint16, $47e0e8ef515d9903$var$BaseArray)\n    },\n    7: (0, $7cbbe4e24ef3cb75$export$841858b892ce1f4c),\n    8: (0, $7cbbe4e24ef3cb75$export$5e6d09e6861162f6),\n    9: {\n        posFormat: $6uUbQ$uint16,\n        lookupType: $6uUbQ$uint16,\n        extension: new $6uUbQ$Pointer($6uUbQ$uint32, null)\n    }\n});\n// Fix circular reference\n$47e0e8ef515d9903$export$73a8cfb19cd43a0f.versions[9].extension.type = $47e0e8ef515d9903$export$73a8cfb19cd43a0f;\nvar $47e0e8ef515d9903$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n    header: {\n        scriptList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$3e15fc05ce864229)),\n        featureList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$aa18130def4b6cb4)),\n        lookupList: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)($47e0e8ef515d9903$export$73a8cfb19cd43a0f))\n    },\n    0x00010000: {},\n    0x00010001: {\n        featureVariations: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$441b70b7971dd419))\n    }\n});\n\n\n\n\n\nlet $d3f442064af66e06$var$Sequence = new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16);\nlet $d3f442064af66e06$var$AlternateSet = $d3f442064af66e06$var$Sequence;\nlet $d3f442064af66e06$var$Ligature = new $6uUbQ$Struct({\n    glyph: $6uUbQ$uint16,\n    compCount: $6uUbQ$uint16,\n    components: new $6uUbQ$Array($6uUbQ$uint16, (t)=>t.compCount - 1)\n});\nlet $d3f442064af66e06$var$LigatureSet = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$Ligature), $6uUbQ$uint16);\nlet $d3f442064af66e06$var$GSUBLookup = new $6uUbQ$VersionedStruct(\"lookupType\", {\n    1: new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n        1: {\n            coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n            deltaGlyphID: $6uUbQ$int16\n        },\n        2: {\n            coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n            glyphCount: $6uUbQ$uint16,\n            substitute: new $6uUbQ$LazyArray($6uUbQ$uint16, \"glyphCount\")\n        }\n    }),\n    2: {\n        substFormat: $6uUbQ$uint16,\n        coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n        count: $6uUbQ$uint16,\n        sequences: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$Sequence), \"count\")\n    },\n    3: {\n        substFormat: $6uUbQ$uint16,\n        coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n        count: $6uUbQ$uint16,\n        alternateSet: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$AlternateSet), \"count\")\n    },\n    4: {\n        substFormat: $6uUbQ$uint16,\n        coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n        count: $6uUbQ$uint16,\n        ligatureSets: new $6uUbQ$LazyArray(new $6uUbQ$Pointer($6uUbQ$uint16, $d3f442064af66e06$var$LigatureSet), \"count\")\n    },\n    5: (0, $7cbbe4e24ef3cb75$export$841858b892ce1f4c),\n    6: (0, $7cbbe4e24ef3cb75$export$5e6d09e6861162f6),\n    7: {\n        substFormat: $6uUbQ$uint16,\n        lookupType: $6uUbQ$uint16,\n        extension: new $6uUbQ$Pointer($6uUbQ$uint32, null)\n    },\n    8: {\n        substFormat: $6uUbQ$uint16,\n        coverage: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)),\n        backtrackCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)), \"backtrackGlyphCount\"),\n        lookaheadGlyphCount: $6uUbQ$uint16,\n        lookaheadCoverage: new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$17608c3f81a6111)), \"lookaheadGlyphCount\"),\n        glyphCount: $6uUbQ$uint16,\n        substitutes: new $6uUbQ$Array($6uUbQ$uint16, \"glyphCount\")\n    }\n});\n// Fix circular reference\n$d3f442064af66e06$var$GSUBLookup.versions[7].extension.type = $d3f442064af66e06$var$GSUBLookup;\nvar $d3f442064af66e06$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n    header: {\n        scriptList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$3e15fc05ce864229)),\n        featureList: new $6uUbQ$Pointer($6uUbQ$uint16, (0, $7cbbe4e24ef3cb75$export$aa18130def4b6cb4)),\n        lookupList: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)($d3f442064af66e06$var$GSUBLookup))\n    },\n    0x00010000: {},\n    0x00010001: {\n        featureVariations: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$441b70b7971dd419))\n    }\n});\n\n\n\n\n\nlet $71cfb3c4767fbd0c$var$JstfGSUBModList = new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16);\nlet $71cfb3c4767fbd0c$var$JstfPriority = new $6uUbQ$Struct({\n    shrinkageEnableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n    shrinkageDisableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n    shrinkageEnableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n    shrinkageDisableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n    shrinkageJstfMax: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)((0, $47e0e8ef515d9903$export$73a8cfb19cd43a0f))),\n    extensionEnableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n    extensionDisableGSUB: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n    extensionEnableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n    extensionDisableGPOS: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfGSUBModList),\n    extensionJstfMax: new $6uUbQ$Pointer($6uUbQ$uint16, new (0, $7cbbe4e24ef3cb75$export$df0008c6ff2da22a)((0, $47e0e8ef515d9903$export$73a8cfb19cd43a0f)))\n});\nlet $71cfb3c4767fbd0c$var$JstfLangSys = new $6uUbQ$Array(new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfPriority), $6uUbQ$uint16);\nlet $71cfb3c4767fbd0c$var$JstfLangSysRecord = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    jstfLangSys: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfLangSys)\n});\nlet $71cfb3c4767fbd0c$var$JstfScript = new $6uUbQ$Struct({\n    extenderGlyphs: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16)),\n    defaultLangSys: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfLangSys),\n    langSysCount: $6uUbQ$uint16,\n    langSysRecords: new $6uUbQ$Array($71cfb3c4767fbd0c$var$JstfLangSysRecord, \"langSysCount\")\n});\nlet $71cfb3c4767fbd0c$var$JstfScriptRecord = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    script: new $6uUbQ$Pointer($6uUbQ$uint16, $71cfb3c4767fbd0c$var$JstfScript, {\n        type: \"parent\"\n    })\n});\nvar $71cfb3c4767fbd0c$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint32,\n    scriptCount: $6uUbQ$uint16,\n    scriptList: new $6uUbQ$Array($71cfb3c4767fbd0c$var$JstfScriptRecord, \"scriptCount\")\n});\n\n\n\n\n\n// TODO: add this to restructure\nclass $d059a6bd2d3b5b63$var$VariableSizeNumber {\n    decode(stream, parent) {\n        switch(this.size(0, parent)){\n            case 1:\n                return stream.readUInt8();\n            case 2:\n                return stream.readUInt16BE();\n            case 3:\n                return stream.readUInt24BE();\n            case 4:\n                return stream.readUInt32BE();\n        }\n    }\n    size(val, parent) {\n        return (0, $6uUbQ$resolveLength)(this._size, null, parent);\n    }\n    constructor(size){\n        this._size = size;\n    }\n}\nlet $d059a6bd2d3b5b63$var$MapDataEntry = new $6uUbQ$Struct({\n    entry: new $d059a6bd2d3b5b63$var$VariableSizeNumber((t)=>((t.parent.entryFormat & 0x0030) >> 4) + 1),\n    outerIndex: (t)=>t.entry >> (t.parent.entryFormat & 0x000F) + 1,\n    innerIndex: (t)=>t.entry & (1 << (t.parent.entryFormat & 0x000F) + 1) - 1\n});\nlet $d059a6bd2d3b5b63$var$DeltaSetIndexMap = new $6uUbQ$Struct({\n    entryFormat: $6uUbQ$uint16,\n    mapCount: $6uUbQ$uint16,\n    mapData: new $6uUbQ$Array($d059a6bd2d3b5b63$var$MapDataEntry, \"mapCount\")\n});\nvar $d059a6bd2d3b5b63$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    majorVersion: $6uUbQ$uint16,\n    minorVersion: $6uUbQ$uint16,\n    itemVariationStore: new $6uUbQ$Pointer($6uUbQ$uint32, (0, $1a47b0c45c1c22fe$export$fe1b122a2710f241)),\n    advanceWidthMapping: new $6uUbQ$Pointer($6uUbQ$uint32, $d059a6bd2d3b5b63$var$DeltaSetIndexMap),\n    LSBMapping: new $6uUbQ$Pointer($6uUbQ$uint32, $d059a6bd2d3b5b63$var$DeltaSetIndexMap),\n    RSBMapping: new $6uUbQ$Pointer($6uUbQ$uint32, $d059a6bd2d3b5b63$var$DeltaSetIndexMap)\n});\n\n\n\nlet $dceeca3e1977ce30$var$Signature = new $6uUbQ$Struct({\n    format: $6uUbQ$uint32,\n    length: $6uUbQ$uint32,\n    offset: $6uUbQ$uint32\n});\nlet $dceeca3e1977ce30$var$SignatureBlock = new $6uUbQ$Struct({\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16, 2),\n    cbSignature: $6uUbQ$uint32,\n    signature: new $6uUbQ$Buffer(\"cbSignature\")\n});\nvar $dceeca3e1977ce30$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    ulVersion: $6uUbQ$uint32,\n    usNumSigs: $6uUbQ$uint16,\n    usFlag: $6uUbQ$uint16,\n    signatures: new $6uUbQ$Array($dceeca3e1977ce30$var$Signature, \"usNumSigs\"),\n    signatureBlocks: new $6uUbQ$Array($dceeca3e1977ce30$var$SignatureBlock, \"usNumSigs\")\n});\n\n\n\nlet $8acd740a9435aad0$var$GaspRange = new $6uUbQ$Struct({\n    rangeMaxPPEM: $6uUbQ$uint16,\n    rangeGaspBehavior: new $6uUbQ$Bitfield($6uUbQ$uint16, [\n        \"grayscale\",\n        \"gridfit\",\n        \"symmetricSmoothing\",\n        \"symmetricGridfit\" // only in version 1, for ClearType\n    ])\n});\nvar $8acd740a9435aad0$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    numRanges: $6uUbQ$uint16,\n    gaspRanges: new $6uUbQ$Array($8acd740a9435aad0$var$GaspRange, \"numRanges\") // Sorted by ppem\n});\n\n\n\nlet $b5f380243c34d6a0$var$DeviceRecord = new $6uUbQ$Struct({\n    pixelSize: $6uUbQ$uint8,\n    maximumWidth: $6uUbQ$uint8,\n    widths: new $6uUbQ$Array($6uUbQ$uint8, (t)=>t.parent.parent.maxp.numGlyphs)\n});\nvar // The Horizontal Device Metrics table stores integer advance widths scaled to particular pixel sizes\n$b5f380243c34d6a0$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    numRecords: $6uUbQ$int16,\n    sizeDeviceRecord: $6uUbQ$int32,\n    records: new $6uUbQ$Array($b5f380243c34d6a0$var$DeviceRecord, \"numRecords\")\n});\n\n\n\nlet $ca2df1256966e313$var$KernPair = new $6uUbQ$Struct({\n    left: $6uUbQ$uint16,\n    right: $6uUbQ$uint16,\n    value: $6uUbQ$int16\n});\nlet $ca2df1256966e313$var$ClassTable = new $6uUbQ$Struct({\n    firstGlyph: $6uUbQ$uint16,\n    nGlyphs: $6uUbQ$uint16,\n    offsets: new $6uUbQ$Array($6uUbQ$uint16, \"nGlyphs\"),\n    max: (t)=>t.offsets.length && Math.max.apply(Math, t.offsets)\n});\nlet $ca2df1256966e313$var$Kern2Array = new $6uUbQ$Struct({\n    off: (t)=>t._startOffset - t.parent.parent._startOffset,\n    len: (t)=>((t.parent.leftTable.max - t.off) / t.parent.rowWidth + 1) * (t.parent.rowWidth / 2),\n    values: new $6uUbQ$LazyArray($6uUbQ$int16, \"len\")\n});\nlet $ca2df1256966e313$var$KernSubtable = new $6uUbQ$VersionedStruct(\"format\", {\n    0: {\n        nPairs: $6uUbQ$uint16,\n        searchRange: $6uUbQ$uint16,\n        entrySelector: $6uUbQ$uint16,\n        rangeShift: $6uUbQ$uint16,\n        pairs: new $6uUbQ$Array($ca2df1256966e313$var$KernPair, \"nPairs\")\n    },\n    2: {\n        rowWidth: $6uUbQ$uint16,\n        leftTable: new $6uUbQ$Pointer($6uUbQ$uint16, $ca2df1256966e313$var$ClassTable, {\n            type: \"parent\"\n        }),\n        rightTable: new $6uUbQ$Pointer($6uUbQ$uint16, $ca2df1256966e313$var$ClassTable, {\n            type: \"parent\"\n        }),\n        array: new $6uUbQ$Pointer($6uUbQ$uint16, $ca2df1256966e313$var$Kern2Array, {\n            type: \"parent\"\n        })\n    },\n    3: {\n        glyphCount: $6uUbQ$uint16,\n        kernValueCount: $6uUbQ$uint8,\n        leftClassCount: $6uUbQ$uint8,\n        rightClassCount: $6uUbQ$uint8,\n        flags: $6uUbQ$uint8,\n        kernValue: new $6uUbQ$Array($6uUbQ$int16, \"kernValueCount\"),\n        leftClass: new $6uUbQ$Array($6uUbQ$uint8, \"glyphCount\"),\n        rightClass: new $6uUbQ$Array($6uUbQ$uint8, \"glyphCount\"),\n        kernIndex: new $6uUbQ$Array($6uUbQ$uint8, (t)=>t.leftClassCount * t.rightClassCount)\n    }\n});\nlet $ca2df1256966e313$var$KernTable = new $6uUbQ$VersionedStruct(\"version\", {\n    0: {\n        subVersion: $6uUbQ$uint16,\n        length: $6uUbQ$uint16,\n        format: $6uUbQ$uint8,\n        coverage: new $6uUbQ$Bitfield($6uUbQ$uint8, [\n            \"horizontal\",\n            \"minimum\",\n            \"crossStream\",\n            \"override\" // If set to 1 the value in this table replaces the accumulated value\n        ]),\n        subtable: $ca2df1256966e313$var$KernSubtable,\n        padding: new $6uUbQ$Reserved($6uUbQ$uint8, (t)=>t.length - t._currentOffset)\n    },\n    1: {\n        length: $6uUbQ$uint32,\n        coverage: new $6uUbQ$Bitfield($6uUbQ$uint8, [\n            null,\n            null,\n            null,\n            null,\n            null,\n            \"variation\",\n            \"crossStream\",\n            \"vertical\" // Set if table has vertical kerning values\n        ]),\n        format: $6uUbQ$uint8,\n        tupleIndex: $6uUbQ$uint16,\n        subtable: $ca2df1256966e313$var$KernSubtable,\n        padding: new $6uUbQ$Reserved($6uUbQ$uint8, (t)=>t.length - t._currentOffset)\n    }\n});\nvar $ca2df1256966e313$export$2e2bcd8739ae039 = new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n    0: {\n        nTables: $6uUbQ$uint16,\n        tables: new $6uUbQ$Array($ca2df1256966e313$var$KernTable, \"nTables\")\n    },\n    1: {\n        reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n        nTables: $6uUbQ$uint32,\n        tables: new $6uUbQ$Array($ca2df1256966e313$var$KernTable, \"nTables\")\n    }\n});\n\n\n\nvar // Linear Threshold table\n// Records the ppem for each glyph at which the scaling becomes linear again,\n// despite instructions effecting the advance width\n$7a9f92b0c46ebe33$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    numGlyphs: $6uUbQ$uint16,\n    yPels: new $6uUbQ$Array($6uUbQ$uint8, \"numGlyphs\")\n});\n\n\n\nvar // PCL 5 Table\n// NOTE: The PCLT table is strongly discouraged for OpenType fonts with TrueType outlines\n$2b2ccc419d152631$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    fontNumber: $6uUbQ$uint32,\n    pitch: $6uUbQ$uint16,\n    xHeight: $6uUbQ$uint16,\n    style: $6uUbQ$uint16,\n    typeFamily: $6uUbQ$uint16,\n    capHeight: $6uUbQ$uint16,\n    symbolSet: $6uUbQ$uint16,\n    typeface: new $6uUbQ$String(16),\n    characterComplement: new $6uUbQ$String(8),\n    fileName: new $6uUbQ$String(6),\n    strokeWeight: new $6uUbQ$String(1),\n    widthType: new $6uUbQ$String(1),\n    serifStyle: $6uUbQ$uint8,\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint8)\n});\n\n\n\n// VDMX tables contain ascender/descender overrides for certain (usually small)\n// sizes. This is needed in order to match font metrics on Windows.\nlet $ca5b40b9bcda9c9b$var$Ratio = new $6uUbQ$Struct({\n    bCharSet: $6uUbQ$uint8,\n    xRatio: $6uUbQ$uint8,\n    yStartRatio: $6uUbQ$uint8,\n    yEndRatio: $6uUbQ$uint8 // Ending y-Ratio value\n});\nlet $ca5b40b9bcda9c9b$var$vTable = new $6uUbQ$Struct({\n    yPelHeight: $6uUbQ$uint16,\n    yMax: $6uUbQ$int16,\n    yMin: $6uUbQ$int16 // Minimum value (in pels) for this yPelHeight\n});\nlet $ca5b40b9bcda9c9b$var$VdmxGroup = new $6uUbQ$Struct({\n    recs: $6uUbQ$uint16,\n    startsz: $6uUbQ$uint8,\n    endsz: $6uUbQ$uint8,\n    entries: new $6uUbQ$Array($ca5b40b9bcda9c9b$var$vTable, \"recs\") // The VDMX records\n});\nvar $ca5b40b9bcda9c9b$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    numRecs: $6uUbQ$uint16,\n    numRatios: $6uUbQ$uint16,\n    ratioRanges: new $6uUbQ$Array($ca5b40b9bcda9c9b$var$Ratio, \"numRatios\"),\n    offsets: new $6uUbQ$Array($6uUbQ$uint16, \"numRatios\"),\n    groups: new $6uUbQ$Array($ca5b40b9bcda9c9b$var$VdmxGroup, \"numRecs\") // The actual VDMX groupings\n});\n\n\n\nvar // Vertical Header Table\n$69530a3c40755af0$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    ascent: $6uUbQ$int16,\n    descent: $6uUbQ$int16,\n    lineGap: $6uUbQ$int16,\n    advanceHeightMax: $6uUbQ$int16,\n    minTopSideBearing: $6uUbQ$int16,\n    minBottomSideBearing: $6uUbQ$int16,\n    yMaxExtent: $6uUbQ$int16,\n    caretSlopeRise: $6uUbQ$int16,\n    caretSlopeRun: $6uUbQ$int16,\n    caretOffset: $6uUbQ$int16,\n    reserved: new $6uUbQ$Reserved($6uUbQ$int16, 4),\n    metricDataFormat: $6uUbQ$int16,\n    numberOfMetrics: $6uUbQ$uint16 // Number of advance heights in the Vertical Metrics table\n});\n\n\n\nlet $344073dd270f0e62$var$VmtxEntry = new $6uUbQ$Struct({\n    advance: $6uUbQ$uint16,\n    bearing: $6uUbQ$int16 // The top sidebearing of the glyph\n});\nvar // Vertical Metrics Table\n$344073dd270f0e62$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    metrics: new $6uUbQ$LazyArray($344073dd270f0e62$var$VmtxEntry, (t)=>t.parent.vhea.numberOfMetrics),\n    bearings: new $6uUbQ$LazyArray($6uUbQ$int16, (t)=>t.parent.maxp.numGlyphs - t.parent.vhea.numberOfMetrics)\n});\n\n\n\nlet $3793b781918cfced$var$shortFrac = new $6uUbQ$Fixed(16, \"BE\", 14);\nlet $3793b781918cfced$var$Correspondence = new $6uUbQ$Struct({\n    fromCoord: $3793b781918cfced$var$shortFrac,\n    toCoord: $3793b781918cfced$var$shortFrac\n});\nlet $3793b781918cfced$var$Segment = new $6uUbQ$Struct({\n    pairCount: $6uUbQ$uint16,\n    correspondence: new $6uUbQ$Array($3793b781918cfced$var$Correspondence, \"pairCount\")\n});\nvar $3793b781918cfced$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$fixed32,\n    axisCount: $6uUbQ$uint32,\n    segment: new $6uUbQ$Array($3793b781918cfced$var$Segment, \"axisCount\")\n});\n\n\n\n\nclass $6cb7dd5f47d82580$var$UnboundedArrayAccessor {\n    getItem(index) {\n        if (this._items[index] == null) {\n            let pos = this.stream.pos;\n            this.stream.pos = this.base + this.type.size(null, this.parent) * index;\n            this._items[index] = this.type.decode(this.stream, this.parent);\n            this.stream.pos = pos;\n        }\n        return this._items[index];\n    }\n    inspect() {\n        return `[UnboundedArray ${this.type.constructor.name}]`;\n    }\n    constructor(type, stream, parent){\n        this.type = type;\n        this.stream = stream;\n        this.parent = parent;\n        this.base = this.stream.pos;\n        this._items = [];\n    }\n}\nclass $6cb7dd5f47d82580$export$c5af1eebc882e39a extends $6uUbQ$Array {\n    decode(stream, parent) {\n        return new $6cb7dd5f47d82580$var$UnboundedArrayAccessor(this.type, stream, parent);\n    }\n    constructor(type){\n        super(type, 0);\n    }\n}\nlet $6cb7dd5f47d82580$export$8351f8c2ae2f103c = function(ValueType = $6uUbQ$uint16) {\n    // Helper class that makes internal structures invisible to pointers\n    class Shadow {\n        decode(stream, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.decode(stream, ctx);\n        }\n        size(val, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.size(val, ctx);\n        }\n        encode(stream, val, ctx) {\n            ctx = ctx.parent.parent;\n            return this.type.encode(stream, val, ctx);\n        }\n        constructor(type){\n            this.type = type;\n        }\n    }\n    ValueType = new Shadow(ValueType);\n    let BinarySearchHeader = new $6uUbQ$Struct({\n        unitSize: $6uUbQ$uint16,\n        nUnits: $6uUbQ$uint16,\n        searchRange: $6uUbQ$uint16,\n        entrySelector: $6uUbQ$uint16,\n        rangeShift: $6uUbQ$uint16\n    });\n    let LookupSegmentSingle = new $6uUbQ$Struct({\n        lastGlyph: $6uUbQ$uint16,\n        firstGlyph: $6uUbQ$uint16,\n        value: ValueType\n    });\n    let LookupSegmentArray = new $6uUbQ$Struct({\n        lastGlyph: $6uUbQ$uint16,\n        firstGlyph: $6uUbQ$uint16,\n        values: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$Array(ValueType, (t)=>t.lastGlyph - t.firstGlyph + 1), {\n            type: \"parent\"\n        })\n    });\n    let LookupSingle = new $6uUbQ$Struct({\n        glyph: $6uUbQ$uint16,\n        value: ValueType\n    });\n    return new $6uUbQ$VersionedStruct($6uUbQ$uint16, {\n        0: {\n            values: new $6cb7dd5f47d82580$export$c5af1eebc882e39a(ValueType) // length == number of glyphs maybe?\n        },\n        2: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $6uUbQ$Array(LookupSegmentSingle, (t)=>t.binarySearchHeader.nUnits)\n        },\n        4: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $6uUbQ$Array(LookupSegmentArray, (t)=>t.binarySearchHeader.nUnits)\n        },\n        6: {\n            binarySearchHeader: BinarySearchHeader,\n            segments: new $6uUbQ$Array(LookupSingle, (t)=>t.binarySearchHeader.nUnits)\n        },\n        8: {\n            firstGlyph: $6uUbQ$uint16,\n            count: $6uUbQ$uint16,\n            values: new $6uUbQ$Array(ValueType, \"count\")\n        }\n    });\n};\nfunction $6cb7dd5f47d82580$export$79f7d93d790934ba(entryData = {}, lookupType = $6uUbQ$uint16) {\n    let entry = Object.assign({\n        newState: $6uUbQ$uint16,\n        flags: $6uUbQ$uint16\n    }, entryData);\n    let Entry = new $6uUbQ$Struct(entry);\n    let StateArray = new $6cb7dd5f47d82580$export$c5af1eebc882e39a(new $6uUbQ$Array($6uUbQ$uint16, (t)=>t.nClasses));\n    let StateHeader = new $6uUbQ$Struct({\n        nClasses: $6uUbQ$uint32,\n        classTable: new $6uUbQ$Pointer($6uUbQ$uint32, new $6cb7dd5f47d82580$export$8351f8c2ae2f103c(lookupType)),\n        stateArray: new $6uUbQ$Pointer($6uUbQ$uint32, StateArray),\n        entryTable: new $6uUbQ$Pointer($6uUbQ$uint32, new $6cb7dd5f47d82580$export$c5af1eebc882e39a(Entry))\n    });\n    return StateHeader;\n}\nfunction $6cb7dd5f47d82580$export$105027425199cc51(entryData = {}, lookupType = $6uUbQ$uint16) {\n    let ClassLookupTable = new $6uUbQ$Struct({\n        version () {\n            return 8;\n        },\n        firstGlyph: $6uUbQ$uint16,\n        values: new $6uUbQ$Array($6uUbQ$uint8, $6uUbQ$uint16)\n    });\n    let entry = Object.assign({\n        newStateOffset: $6uUbQ$uint16,\n        // convert offset to stateArray index\n        newState: (t)=>(t.newStateOffset - (t.parent.stateArray.base - t.parent._startOffset)) / t.parent.nClasses,\n        flags: $6uUbQ$uint16\n    }, entryData);\n    let Entry = new $6uUbQ$Struct(entry);\n    let StateArray = new $6cb7dd5f47d82580$export$c5af1eebc882e39a(new $6uUbQ$Array($6uUbQ$uint8, (t)=>t.nClasses));\n    let StateHeader1 = new $6uUbQ$Struct({\n        nClasses: $6uUbQ$uint16,\n        classTable: new $6uUbQ$Pointer($6uUbQ$uint16, ClassLookupTable),\n        stateArray: new $6uUbQ$Pointer($6uUbQ$uint16, StateArray),\n        entryTable: new $6uUbQ$Pointer($6uUbQ$uint16, new $6cb7dd5f47d82580$export$c5af1eebc882e39a(Entry))\n    });\n    return StateHeader1;\n}\n\n\nlet $6a3746e8c708f5a3$var$BslnSubtable = new $6uUbQ$VersionedStruct(\"format\", {\n    0: {\n        deltas: new $6uUbQ$Array($6uUbQ$int16, 32)\n    },\n    1: {\n        deltas: new $6uUbQ$Array($6uUbQ$int16, 32),\n        mappingData: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)($6uUbQ$uint16)\n    },\n    2: {\n        standardGlyph: $6uUbQ$uint16,\n        controlPoints: new $6uUbQ$Array($6uUbQ$uint16, 32)\n    },\n    3: {\n        standardGlyph: $6uUbQ$uint16,\n        controlPoints: new $6uUbQ$Array($6uUbQ$uint16, 32),\n        mappingData: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)($6uUbQ$uint16)\n    }\n});\nvar $6a3746e8c708f5a3$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$fixed32,\n    format: $6uUbQ$uint16,\n    defaultBaseline: $6uUbQ$uint16,\n    subtable: $6a3746e8c708f5a3$var$BslnSubtable\n});\n\n\n\nlet $d0c76fac617b308a$var$Setting = new $6uUbQ$Struct({\n    setting: $6uUbQ$uint16,\n    nameIndex: $6uUbQ$int16,\n    name: (t)=>t.parent.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nlet $d0c76fac617b308a$var$FeatureName = new $6uUbQ$Struct({\n    feature: $6uUbQ$uint16,\n    nSettings: $6uUbQ$uint16,\n    settingTable: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array($d0c76fac617b308a$var$Setting, \"nSettings\"), {\n        type: \"parent\"\n    }),\n    featureFlags: new $6uUbQ$Bitfield($6uUbQ$uint8, [\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        \"hasDefault\",\n        \"exclusive\"\n    ]),\n    defaultSetting: $6uUbQ$uint8,\n    nameIndex: $6uUbQ$int16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameIndex]\n});\nvar $d0c76fac617b308a$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$fixed32,\n    featureNameCount: $6uUbQ$uint16,\n    reserved1: new $6uUbQ$Reserved($6uUbQ$uint16),\n    reserved2: new $6uUbQ$Reserved($6uUbQ$uint32),\n    featureNames: new $6uUbQ$Array($d0c76fac617b308a$var$FeatureName, \"featureNameCount\")\n});\n\n\n\nlet $e83fd065f00fcd01$var$Axis = new $6uUbQ$Struct({\n    axisTag: new $6uUbQ$String(4),\n    minValue: $6uUbQ$fixed32,\n    defaultValue: $6uUbQ$fixed32,\n    maxValue: $6uUbQ$fixed32,\n    flags: $6uUbQ$uint16,\n    nameID: $6uUbQ$uint16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID]\n});\nlet $e83fd065f00fcd01$var$Instance = new $6uUbQ$Struct({\n    nameID: $6uUbQ$uint16,\n    name: (t)=>t.parent.parent.name.records.fontFeatures[t.nameID],\n    flags: $6uUbQ$uint16,\n    coord: new $6uUbQ$Array($6uUbQ$fixed32, (t)=>t.parent.axisCount),\n    postscriptNameID: new $6uUbQ$Optional($6uUbQ$uint16, (t)=>t.parent.instanceSize - t._currentOffset > 0)\n});\nvar $e83fd065f00fcd01$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$fixed32,\n    offsetToData: $6uUbQ$uint16,\n    countSizePairs: $6uUbQ$uint16,\n    axisCount: $6uUbQ$uint16,\n    axisSize: $6uUbQ$uint16,\n    instanceCount: $6uUbQ$uint16,\n    instanceSize: $6uUbQ$uint16,\n    axis: new $6uUbQ$Array($e83fd065f00fcd01$var$Axis, \"axisCount\"),\n    instance: new $6uUbQ$Array($e83fd065f00fcd01$var$Instance, \"instanceCount\")\n});\n\n\n\nlet $dbe33c8d3a7f131c$var$shortFrac = new $6uUbQ$Fixed(16, \"BE\", 14);\nclass $dbe33c8d3a7f131c$var$Offset {\n    static decode(stream, parent) {\n        // In short format, offsets are multiplied by 2.\n        // This doesn't seem to be documented by Apple, but it\n        // is implemented this way in Freetype.\n        return parent.flags ? stream.readUInt32BE() : stream.readUInt16BE() * 2;\n    }\n}\nlet $dbe33c8d3a7f131c$var$gvar = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    axisCount: $6uUbQ$uint16,\n    globalCoordCount: $6uUbQ$uint16,\n    globalCoords: new $6uUbQ$Pointer($6uUbQ$uint32, new $6uUbQ$Array(new $6uUbQ$Array($dbe33c8d3a7f131c$var$shortFrac, \"axisCount\"), \"globalCoordCount\")),\n    glyphCount: $6uUbQ$uint16,\n    flags: $6uUbQ$uint16,\n    offsetToData: $6uUbQ$uint32,\n    offsets: new $6uUbQ$Array(new $6uUbQ$Pointer($dbe33c8d3a7f131c$var$Offset, \"void\", {\n        relativeTo: (ctx)=>ctx.offsetToData,\n        allowNull: false\n    }), (t)=>t.glyphCount + 1)\n});\nvar $dbe33c8d3a7f131c$export$2e2bcd8739ae039 = $dbe33c8d3a7f131c$var$gvar;\n\n\n\n\nlet $05b01887df96c4ee$var$ClassTable = new $6uUbQ$Struct({\n    length: $6uUbQ$uint16,\n    coverage: $6uUbQ$uint16,\n    subFeatureFlags: $6uUbQ$uint32,\n    stateTable: new (0, $6cb7dd5f47d82580$export$105027425199cc51)\n});\nlet $05b01887df96c4ee$var$WidthDeltaRecord = new $6uUbQ$Struct({\n    justClass: $6uUbQ$uint32,\n    beforeGrowLimit: $6uUbQ$fixed32,\n    beforeShrinkLimit: $6uUbQ$fixed32,\n    afterGrowLimit: $6uUbQ$fixed32,\n    afterShrinkLimit: $6uUbQ$fixed32,\n    growFlags: $6uUbQ$uint16,\n    shrinkFlags: $6uUbQ$uint16\n});\nlet $05b01887df96c4ee$var$WidthDeltaCluster = new $6uUbQ$Array($05b01887df96c4ee$var$WidthDeltaRecord, $6uUbQ$uint32);\nlet $05b01887df96c4ee$var$ActionData = new $6uUbQ$VersionedStruct(\"actionType\", {\n    0: {\n        lowerLimit: $6uUbQ$fixed32,\n        upperLimit: $6uUbQ$fixed32,\n        order: $6uUbQ$uint16,\n        glyphs: new $6uUbQ$Array($6uUbQ$uint16, $6uUbQ$uint16)\n    },\n    1: {\n        addGlyph: $6uUbQ$uint16\n    },\n    2: {\n        substThreshold: $6uUbQ$fixed32,\n        addGlyph: $6uUbQ$uint16,\n        substGlyph: $6uUbQ$uint16\n    },\n    3: {},\n    4: {\n        variationAxis: $6uUbQ$uint32,\n        minimumLimit: $6uUbQ$fixed32,\n        noStretchValue: $6uUbQ$fixed32,\n        maximumLimit: $6uUbQ$fixed32\n    },\n    5: {\n        flags: $6uUbQ$uint16,\n        glyph: $6uUbQ$uint16\n    }\n});\nlet $05b01887df96c4ee$var$Action = new $6uUbQ$Struct({\n    actionClass: $6uUbQ$uint16,\n    actionType: $6uUbQ$uint16,\n    actionLength: $6uUbQ$uint32,\n    actionData: $05b01887df96c4ee$var$ActionData,\n    padding: new $6uUbQ$Reserved($6uUbQ$uint8, (t)=>t.actionLength - t._currentOffset)\n});\nlet $05b01887df96c4ee$var$PostcompensationAction = new $6uUbQ$Array($05b01887df96c4ee$var$Action, $6uUbQ$uint32);\nlet $05b01887df96c4ee$var$PostCompensationTable = new $6uUbQ$Struct({\n    lookupTable: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)(new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$PostcompensationAction))\n});\nlet $05b01887df96c4ee$var$JustificationTable = new $6uUbQ$Struct({\n    classTable: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$ClassTable, {\n        type: \"parent\"\n    }),\n    wdcOffset: $6uUbQ$uint16,\n    postCompensationTable: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$PostCompensationTable, {\n        type: \"parent\"\n    }),\n    widthDeltaClusters: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)(new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$WidthDeltaCluster, {\n        type: \"parent\",\n        relativeTo: (ctx)=>ctx.wdcOffset\n    }))\n});\nvar $05b01887df96c4ee$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint32,\n    format: $6uUbQ$uint16,\n    horizontal: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$JustificationTable),\n    vertical: new $6uUbQ$Pointer($6uUbQ$uint16, $05b01887df96c4ee$var$JustificationTable)\n});\n\n\n\n\nlet $03ee6ebd54db1053$var$LigatureData = {\n    action: $6uUbQ$uint16\n};\nlet $03ee6ebd54db1053$var$ContextualData = {\n    markIndex: $6uUbQ$uint16,\n    currentIndex: $6uUbQ$uint16\n};\nlet $03ee6ebd54db1053$var$InsertionData = {\n    currentInsertIndex: $6uUbQ$uint16,\n    markedInsertIndex: $6uUbQ$uint16\n};\nlet $03ee6ebd54db1053$var$SubstitutionTable = new $6uUbQ$Struct({\n    items: new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)(new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)))\n});\nlet $03ee6ebd54db1053$var$SubtableData = new $6uUbQ$VersionedStruct(\"type\", {\n    0: {\n        stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)\n    },\n    1: {\n        stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$ContextualData),\n        substitutionTable: new $6uUbQ$Pointer($6uUbQ$uint32, $03ee6ebd54db1053$var$SubstitutionTable)\n    },\n    2: {\n        stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$LigatureData),\n        ligatureActions: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint32)),\n        components: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint16)),\n        ligatureList: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint16))\n    },\n    4: {\n        lookupTable: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)\n    },\n    5: {\n        stateTable: new (0, $6cb7dd5f47d82580$export$79f7d93d790934ba)($03ee6ebd54db1053$var$InsertionData),\n        insertionActions: new $6uUbQ$Pointer($6uUbQ$uint32, new (0, $6cb7dd5f47d82580$export$c5af1eebc882e39a)($6uUbQ$uint16))\n    }\n});\nlet $03ee6ebd54db1053$var$Subtable = new $6uUbQ$Struct({\n    length: $6uUbQ$uint32,\n    coverage: $6uUbQ$uint24,\n    type: $6uUbQ$uint8,\n    subFeatureFlags: $6uUbQ$uint32,\n    table: $03ee6ebd54db1053$var$SubtableData,\n    padding: new $6uUbQ$Reserved($6uUbQ$uint8, (t)=>t.length - t._currentOffset)\n});\nlet $03ee6ebd54db1053$var$FeatureEntry = new $6uUbQ$Struct({\n    featureType: $6uUbQ$uint16,\n    featureSetting: $6uUbQ$uint16,\n    enableFlags: $6uUbQ$uint32,\n    disableFlags: $6uUbQ$uint32\n});\nlet $03ee6ebd54db1053$var$MorxChain = new $6uUbQ$Struct({\n    defaultFlags: $6uUbQ$uint32,\n    chainLength: $6uUbQ$uint32,\n    nFeatureEntries: $6uUbQ$uint32,\n    nSubtables: $6uUbQ$uint32,\n    features: new $6uUbQ$Array($03ee6ebd54db1053$var$FeatureEntry, \"nFeatureEntries\"),\n    subtables: new $6uUbQ$Array($03ee6ebd54db1053$var$Subtable, \"nSubtables\")\n});\nvar $03ee6ebd54db1053$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$uint16,\n    unused: new $6uUbQ$Reserved($6uUbQ$uint16),\n    nChains: $6uUbQ$uint32,\n    chains: new $6uUbQ$Array($03ee6ebd54db1053$var$MorxChain, \"nChains\")\n});\n\n\n\n\nlet $b7492a80b0d1a056$var$OpticalBounds = new $6uUbQ$Struct({\n    left: $6uUbQ$int16,\n    top: $6uUbQ$int16,\n    right: $6uUbQ$int16,\n    bottom: $6uUbQ$int16\n});\nvar $b7492a80b0d1a056$export$2e2bcd8739ae039 = new $6uUbQ$Struct({\n    version: $6uUbQ$fixed32,\n    format: $6uUbQ$uint16,\n    lookupTable: new (0, $6cb7dd5f47d82580$export$8351f8c2ae2f103c)($b7492a80b0d1a056$var$OpticalBounds)\n});\n\n\nlet $c3395722bea751e2$var$tables = {};\nvar $c3395722bea751e2$export$2e2bcd8739ae039 = $c3395722bea751e2$var$tables;\n$c3395722bea751e2$var$tables.cmap = (0, $26a62205ad06574e$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.head = (0, $f2612a29f92ac062$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.hhea = (0, $2c179dd593583073$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.hmtx = (0, $bdc9060542264b85$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.maxp = (0, $dbf51cb3d3fe409d$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.name = (0, $2bcf221753ec8e32$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"OS/2\"] = (0, $84b272aa31b70606$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.post = (0, $32d9e2eb9565d93c$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.fpgm = (0, $5c0f37ca5ffb1850$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.loca = (0, $2b2b260902b1c57e$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.prep = (0, $7afb878c7bea4f66$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"cvt \"] = (0, $5202bd9d9ad8eaac$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.glyf = (0, $6c92b6371bce8bd9$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"CFF \"] = (0, $822ac0d589e4e237$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables[\"CFF2\"] = (0, $822ac0d589e4e237$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.VORG = (0, $2bbf2bc1ce37cd8f$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.EBLC = (0, $9911c4c7201c13de$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.CBLC = $c3395722bea751e2$var$tables.EBLC;\n$c3395722bea751e2$var$tables.sbix = (0, $abb847051efd51b1$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.COLR = (0, $eb629188f3dfefdd$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.CPAL = (0, $08734b8e7dc64587$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.BASE = (0, $497cef411d884e34$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.GDEF = (0, $cf5f33c63ef209e6$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.GPOS = (0, $47e0e8ef515d9903$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.GSUB = (0, $d3f442064af66e06$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.JSTF = (0, $71cfb3c4767fbd0c$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.HVAR = (0, $d059a6bd2d3b5b63$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.DSIG = (0, $dceeca3e1977ce30$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.gasp = (0, $8acd740a9435aad0$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.hdmx = (0, $b5f380243c34d6a0$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.kern = (0, $ca2df1256966e313$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.LTSH = (0, $7a9f92b0c46ebe33$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.PCLT = (0, $2b2ccc419d152631$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.VDMX = (0, $ca5b40b9bcda9c9b$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.vhea = (0, $69530a3c40755af0$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.vmtx = (0, $344073dd270f0e62$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.avar = (0, $3793b781918cfced$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.bsln = (0, $6a3746e8c708f5a3$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.feat = (0, $d0c76fac617b308a$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.fvar = (0, $e83fd065f00fcd01$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.gvar = (0, $dbe33c8d3a7f131c$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.just = (0, $05b01887df96c4ee$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.morx = (0, $03ee6ebd54db1053$export$2e2bcd8739ae039);\n$c3395722bea751e2$var$tables.opbd = (0, $b7492a80b0d1a056$export$2e2bcd8739ae039);\n\n\nlet $816c07a04b6dba87$var$TableEntry = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    checkSum: $6uUbQ$uint32,\n    offset: new $6uUbQ$Pointer($6uUbQ$uint32, \"void\", {\n        type: \"global\"\n    }),\n    length: $6uUbQ$uint32\n});\nlet $816c07a04b6dba87$var$Directory = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    numTables: $6uUbQ$uint16,\n    searchRange: $6uUbQ$uint16,\n    entrySelector: $6uUbQ$uint16,\n    rangeShift: $6uUbQ$uint16,\n    tables: new $6uUbQ$Array($816c07a04b6dba87$var$TableEntry, \"numTables\")\n});\n$816c07a04b6dba87$var$Directory.process = function() {\n    let tables = {};\n    for (let table of this.tables)tables[table.tag] = table;\n    this.tables = tables;\n};\n$816c07a04b6dba87$var$Directory.preEncode = function() {\n    if (!Array.isArray(this.tables)) {\n        let tables = [];\n        for(let tag in this.tables){\n            let table = this.tables[tag];\n            if (table) tables.push({\n                tag: tag,\n                checkSum: 0,\n                offset: new $6uUbQ$VoidPointer((0, $c3395722bea751e2$export$2e2bcd8739ae039)[tag], table),\n                length: (0, $c3395722bea751e2$export$2e2bcd8739ae039)[tag].size(table)\n            });\n        }\n        this.tables = tables;\n    }\n    this.tag = \"true\";\n    this.numTables = this.tables.length;\n    let maxExponentFor2 = Math.floor(Math.log(this.numTables) / Math.LN2);\n    let maxPowerOf2 = Math.pow(2, maxExponentFor2);\n    this.searchRange = maxPowerOf2 * 16;\n    this.entrySelector = Math.log(maxPowerOf2) / Math.LN2;\n    this.rangeShift = this.numTables * 16 - this.searchRange;\n};\nvar $816c07a04b6dba87$export$2e2bcd8739ae039 = $816c07a04b6dba87$var$Directory;\n\n\n\n\nfunction $12727730ddfc8bfe$export$2e0ae67339d5f1ac(arr, cmp) {\n    let min = 0;\n    let max = arr.length - 1;\n    while(min <= max){\n        let mid = min + max >> 1;\n        let res = cmp(arr[mid]);\n        if (res < 0) max = mid - 1;\n        else if (res > 0) min = mid + 1;\n        else return mid;\n    }\n    return -1;\n}\nfunction $12727730ddfc8bfe$export$d02631cccf789723(index, end) {\n    let range1 = [];\n    while(index < end)range1.push(index++);\n    return range1;\n}\nconst $12727730ddfc8bfe$export$3d28c1996ced1f14 = new TextDecoder(\"ascii\");\n// Based on https://github.com/niklasvh/base64-arraybuffer. MIT license.\nconst $12727730ddfc8bfe$var$CHARS = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\nconst $12727730ddfc8bfe$var$LOOKUP = new Uint8Array(256);\nfor(let i = 0; i < $12727730ddfc8bfe$var$CHARS.length; i++)$12727730ddfc8bfe$var$LOOKUP[$12727730ddfc8bfe$var$CHARS.charCodeAt(i)] = i;\nfunction $12727730ddfc8bfe$export$94fdf11bafc8de6b(base64) {\n    let bufferLength = base64.length * 0.75;\n    if (base64[base64.length - 1] === \"=\") {\n        bufferLength--;\n        if (base64[base64.length - 2] === \"=\") bufferLength--;\n    }\n    let bytes = new Uint8Array(bufferLength);\n    let p = 0;\n    for(let i1 = 0, len = base64.length; i1 < len; i1 += 4){\n        let encoded1 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1)];\n        let encoded2 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1 + 1)];\n        let encoded3 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1 + 2)];\n        let encoded4 = $12727730ddfc8bfe$var$LOOKUP[base64.charCodeAt(i1 + 3)];\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return bytes;\n}\n\n\n\n\n\nclass $f08dd41ef10b694c$export$2e2bcd8739ae039 {\n    findSubtable(cmapTable, pairs) {\n        for (let [platformID, encodingID] of pairs)for (let cmap of cmapTable.tables){\n            if (cmap.platformID === platformID && cmap.encodingID === encodingID) return cmap.table;\n        }\n        return null;\n    }\n    lookup(codepoint, variationSelector) {\n        // If there is no Unicode cmap in this font, we need to re-encode\n        // the codepoint in the encoding that the cmap supports.\n        if (this.encoding) codepoint = this.encoding.get(codepoint) || codepoint;\n        else if (variationSelector) {\n            let gid = this.getVariationSelector(codepoint, variationSelector);\n            if (gid) return gid;\n        }\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                return cmap.codeMap.get(codepoint) || 0;\n            case 4:\n                {\n                    let min = 0;\n                    let max = cmap.segCount - 1;\n                    while(min <= max){\n                        let mid = min + max >> 1;\n                        if (codepoint < cmap.startCode.get(mid)) max = mid - 1;\n                        else if (codepoint > cmap.endCode.get(mid)) min = mid + 1;\n                        else {\n                            let rangeOffset = cmap.idRangeOffset.get(mid);\n                            let gid;\n                            if (rangeOffset === 0) gid = codepoint + cmap.idDelta.get(mid);\n                            else {\n                                let index = rangeOffset / 2 + (codepoint - cmap.startCode.get(mid)) - (cmap.segCount - mid);\n                                gid = cmap.glyphIndexArray.get(index) || 0;\n                                if (gid !== 0) gid += cmap.idDelta.get(mid);\n                            }\n                            return gid & 0xffff;\n                        }\n                    }\n                    return 0;\n                }\n            case 8:\n                throw new Error(\"TODO: cmap format 8\");\n            case 6:\n            case 10:\n                return cmap.glyphIndices.get(codepoint - cmap.firstCode) || 0;\n            case 12:\n            case 13:\n                {\n                    let min = 0;\n                    let max = cmap.nGroups - 1;\n                    while(min <= max){\n                        let mid = min + max >> 1;\n                        let group = cmap.groups.get(mid);\n                        if (codepoint < group.startCharCode) max = mid - 1;\n                        else if (codepoint > group.endCharCode) min = mid + 1;\n                        else {\n                            if (cmap.version === 12) return group.glyphID + (codepoint - group.startCharCode);\n                            else return group.glyphID;\n                        }\n                    }\n                    return 0;\n                }\n            case 14:\n                throw new Error(\"TODO: cmap format 14\");\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    getVariationSelector(codepoint, variationSelector) {\n        if (!this.uvs) return 0;\n        let selectors = this.uvs.varSelectors.toArray();\n        let i = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(selectors, (x)=>variationSelector - x.varSelector);\n        let sel = selectors[i];\n        if (i !== -1 && sel.defaultUVS) i = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(sel.defaultUVS, (x)=>codepoint < x.startUnicodeValue ? -1 : codepoint > x.startUnicodeValue + x.additionalCount ? 1 : 0);\n        if (i !== -1 && sel.nonDefaultUVS) {\n            i = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(sel.nonDefaultUVS, (x)=>codepoint - x.unicodeValue);\n            if (i !== -1) return sel.nonDefaultUVS[i].glyphID;\n        }\n        return 0;\n    }\n    getCharacterSet() {\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                return (0, $12727730ddfc8bfe$export$d02631cccf789723)(0, cmap.codeMap.length);\n            case 4:\n                {\n                    let res = [];\n                    let endCodes = cmap.endCode.toArray();\n                    for(let i = 0; i < endCodes.length; i++){\n                        let tail = endCodes[i] + 1;\n                        let start = cmap.startCode.get(i);\n                        res.push(...(0, $12727730ddfc8bfe$export$d02631cccf789723)(start, tail));\n                    }\n                    return res;\n                }\n            case 8:\n                throw new Error(\"TODO: cmap format 8\");\n            case 6:\n            case 10:\n                return (0, $12727730ddfc8bfe$export$d02631cccf789723)(cmap.firstCode, cmap.firstCode + cmap.glyphIndices.length);\n            case 12:\n            case 13:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())res.push(...(0, $12727730ddfc8bfe$export$d02631cccf789723)(group.startCharCode, group.endCharCode + 1));\n                    return res;\n                }\n            case 14:\n                throw new Error(\"TODO: cmap format 14\");\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    codePointsForGlyph(gid) {\n        let cmap = this.cmap;\n        switch(cmap.version){\n            case 0:\n                {\n                    let res = [];\n                    for(let i = 0; i < 256; i++)if (cmap.codeMap.get(i) === gid) res.push(i);\n                    return res;\n                }\n            case 4:\n                {\n                    let res = [];\n                    for(let i = 0; i < cmap.segCount; i++){\n                        let end = cmap.endCode.get(i);\n                        let start = cmap.startCode.get(i);\n                        let rangeOffset = cmap.idRangeOffset.get(i);\n                        let delta = cmap.idDelta.get(i);\n                        for(var c = start; c <= end; c++){\n                            let g = 0;\n                            if (rangeOffset === 0) g = c + delta;\n                            else {\n                                let index = rangeOffset / 2 + (c - start) - (cmap.segCount - i);\n                                g = cmap.glyphIndexArray.get(index) || 0;\n                                if (g !== 0) g += delta;\n                            }\n                            if (g === gid) res.push(c);\n                        }\n                    }\n                    return res;\n                }\n            case 12:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())if (gid >= group.glyphID && gid <= group.glyphID + (group.endCharCode - group.startCharCode)) res.push(group.startCharCode + (gid - group.glyphID));\n                    return res;\n                }\n            case 13:\n                {\n                    let res = [];\n                    for (let group of cmap.groups.toArray())if (gid === group.glyphID) res.push(...(0, $12727730ddfc8bfe$export$d02631cccf789723)(group.startCharCode, group.endCharCode + 1));\n                    return res;\n                }\n            default:\n                throw new Error(`Unknown cmap format ${cmap.version}`);\n        }\n    }\n    constructor(cmapTable){\n        // Attempt to find a Unicode cmap first\n        this.encoding = null;\n        this.cmap = this.findSubtable(cmapTable, [\n            // 32-bit subtables\n            [\n                3,\n                10\n            ],\n            [\n                0,\n                6\n            ],\n            [\n                0,\n                4\n            ],\n            // 16-bit subtables\n            [\n                3,\n                1\n            ],\n            [\n                0,\n                3\n            ],\n            [\n                0,\n                2\n            ],\n            [\n                0,\n                1\n            ],\n            [\n                0,\n                0\n            ]\n        ]);\n        // If not unicode cmap was found, take the first table with a supported encoding.\n        if (!this.cmap) for (let cmap of cmapTable.tables){\n            let encoding = (0, $e449ad78d50845fe$export$badc544e0651b6b1)(cmap.platformID, cmap.encodingID, cmap.table.language - 1);\n            let mapping = (0, $e449ad78d50845fe$export$1dceb3c14ed68bee)(encoding);\n            if (mapping) {\n                this.cmap = cmap.table;\n                this.encoding = mapping;\n            }\n        }\n        if (!this.cmap) throw new Error(\"Could not find a supported cmap table\");\n        this.uvs = this.findSubtable(cmapTable, [\n            [\n                0,\n                5\n            ]\n        ]);\n        if (this.uvs && this.uvs.version !== 14) this.uvs = null;\n    }\n}\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $f08dd41ef10b694c$export$2e2bcd8739ae039.prototype, \"getCharacterSet\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $f08dd41ef10b694c$export$2e2bcd8739ae039.prototype, \"codePointsForGlyph\", null);\n\n\n\nclass $0bba3a9db57637f3$export$2e2bcd8739ae039 {\n    process(glyphs, positions) {\n        for(let glyphIndex = 0; glyphIndex < glyphs.length - 1; glyphIndex++){\n            let left = glyphs[glyphIndex].id;\n            let right = glyphs[glyphIndex + 1].id;\n            positions[glyphIndex].xAdvance += this.getKerning(left, right);\n        }\n    }\n    getKerning(left, right) {\n        let res = 0;\n        for (let table of this.kern.tables){\n            if (table.coverage.crossStream) continue;\n            switch(table.version){\n                case 0:\n                    if (!table.coverage.horizontal) continue;\n                    break;\n                case 1:\n                    if (table.coverage.vertical || table.coverage.variation) continue;\n                    break;\n                default:\n                    throw new Error(`Unsupported kerning table version ${table.version}`);\n            }\n            let val = 0;\n            let s = table.subtable;\n            switch(table.format){\n                case 0:\n                    let pairIdx = (0, $12727730ddfc8bfe$export$2e0ae67339d5f1ac)(s.pairs, function(pair) {\n                        return left - pair.left || right - pair.right;\n                    });\n                    if (pairIdx >= 0) val = s.pairs[pairIdx].value;\n                    break;\n                case 2:\n                    let leftOffset = 0, rightOffset = 0;\n                    if (left >= s.leftTable.firstGlyph && left < s.leftTable.firstGlyph + s.leftTable.nGlyphs) leftOffset = s.leftTable.offsets[left - s.leftTable.firstGlyph];\n                    else leftOffset = s.array.off;\n                    if (right >= s.rightTable.firstGlyph && right < s.rightTable.firstGlyph + s.rightTable.nGlyphs) rightOffset = s.rightTable.offsets[right - s.rightTable.firstGlyph];\n                    let index = (leftOffset + rightOffset - s.array.off) / 2;\n                    val = s.array.values.get(index);\n                    break;\n                case 3:\n                    if (left >= s.glyphCount || right >= s.glyphCount) return 0;\n                    val = s.kernValue[s.kernIndex[s.leftClass[left] * s.rightClassCount + s.rightClass[right]]];\n                    break;\n                default:\n                    throw new Error(`Unsupported kerning sub-table format ${table.format}`);\n            }\n            // Microsoft supports the override flag, which resets the result\n            // Otherwise, the sum of the results from all subtables is returned\n            if (table.coverage.override) res = val;\n            else res += val;\n        }\n        return res;\n    }\n    constructor(font){\n        this.kern = font.kern;\n    }\n}\n\n\n\nclass $0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039 {\n    positionGlyphs(glyphs, positions) {\n        // find each base + mark cluster, and position the marks relative to the base\n        let clusterStart = 0;\n        let clusterEnd = 0;\n        for(let index = 0; index < glyphs.length; index++){\n            let glyph = glyphs[index];\n            if (glyph.isMark) clusterEnd = index;\n            else {\n                if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n                clusterStart = clusterEnd = index;\n            }\n        }\n        if (clusterStart !== clusterEnd) this.positionCluster(glyphs, positions, clusterStart, clusterEnd);\n        return positions;\n    }\n    positionCluster(glyphs, positions, clusterStart, clusterEnd) {\n        let base = glyphs[clusterStart];\n        let baseBox = base.cbox.copy();\n        // adjust bounding box for ligature glyphs\n        if (base.codePoints.length > 1) // LTR. TODO: RTL support.\n        baseBox.minX += (base.codePoints.length - 1) * baseBox.width / base.codePoints.length;\n        let xOffset = -positions[clusterStart].xAdvance;\n        let yOffset = 0;\n        let yGap = this.font.unitsPerEm / 16;\n        // position each of the mark glyphs relative to the base glyph\n        for(let index = clusterStart + 1; index <= clusterEnd; index++){\n            let mark = glyphs[index];\n            let markBox = mark.cbox;\n            let position = positions[index];\n            let combiningClass = this.getCombiningClass(mark.codePoints[0]);\n            if (combiningClass !== \"Not_Reordered\") {\n                position.xOffset = position.yOffset = 0;\n                // x positioning\n                switch(combiningClass){\n                    case \"Double_Above\":\n                    case \"Double_Below\":\n                        // LTR. TODO: RTL support.\n                        position.xOffset += baseBox.minX - markBox.width / 2 - markBox.minX;\n                        break;\n                    case \"Attached_Below_Left\":\n                    case \"Below_Left\":\n                    case \"Above_Left\":\n                        // left align\n                        position.xOffset += baseBox.minX - markBox.minX;\n                        break;\n                    case \"Attached_Above_Right\":\n                    case \"Below_Right\":\n                    case \"Above_Right\":\n                        // right align\n                        position.xOffset += baseBox.maxX - markBox.width - markBox.minX;\n                        break;\n                    default:\n                        // center align\n                        position.xOffset += baseBox.minX + (baseBox.width - markBox.width) / 2 - markBox.minX;\n                }\n                // y positioning\n                switch(combiningClass){\n                    case \"Double_Below\":\n                    case \"Below_Left\":\n                    case \"Below\":\n                    case \"Below_Right\":\n                    case \"Attached_Below_Left\":\n                    case \"Attached_Below\":\n                        // add a small gap between the glyphs if they are not attached\n                        if (combiningClass === \"Attached_Below_Left\" || combiningClass === \"Attached_Below\") baseBox.minY += yGap;\n                        position.yOffset = -baseBox.minY - markBox.maxY;\n                        baseBox.minY += markBox.height;\n                        break;\n                    case \"Double_Above\":\n                    case \"Above_Left\":\n                    case \"Above\":\n                    case \"Above_Right\":\n                    case \"Attached_Above\":\n                    case \"Attached_Above_Right\":\n                        // add a small gap between the glyphs if they are not attached\n                        if (combiningClass === \"Attached_Above\" || combiningClass === \"Attached_Above_Right\") baseBox.maxY += yGap;\n                        position.yOffset = baseBox.maxY - markBox.minY;\n                        baseBox.maxY += markBox.height;\n                        break;\n                }\n                position.xAdvance = position.yAdvance = 0;\n                position.xOffset += xOffset;\n                position.yOffset += yOffset;\n            } else {\n                xOffset -= position.xAdvance;\n                yOffset -= position.yAdvance;\n            }\n        }\n        return;\n    }\n    getCombiningClass(codePoint) {\n        let combiningClass = (0, $6uUbQ$getCombiningClass)(codePoint);\n        // Thai / Lao need some per-character work\n        if ((codePoint & -256) === 0x0e00) {\n            if (combiningClass === \"Not_Reordered\") switch(codePoint){\n                case 0x0e31:\n                case 0x0e34:\n                case 0x0e35:\n                case 0x0e36:\n                case 0x0e37:\n                case 0x0e47:\n                case 0x0e4c:\n                case 0x0e3d:\n                case 0x0e4e:\n                    return \"Above_Right\";\n                case 0x0eb1:\n                case 0x0eb4:\n                case 0x0eb5:\n                case 0x0eb6:\n                case 0x0eb7:\n                case 0x0ebb:\n                case 0x0ecc:\n                case 0x0ecd:\n                    return \"Above\";\n                case 0x0ebc:\n                    return \"Below\";\n            }\n            else if (codePoint === 0x0e3a) return \"Below_Right\";\n        }\n        switch(combiningClass){\n            // Hebrew\n            case \"CCC10\":\n            case \"CCC11\":\n            case \"CCC12\":\n            case \"CCC13\":\n            case \"CCC14\":\n            case \"CCC15\":\n            case \"CCC16\":\n            case \"CCC17\":\n            case \"CCC18\":\n            case \"CCC20\":\n            case \"CCC22\":\n                return \"Below\";\n            case \"CCC23\":\n                return \"Attached_Above\";\n            case \"CCC24\":\n                return \"Above_Right\";\n            case \"CCC25\":\n            case \"CCC19\":\n                return \"Above_Left\";\n            case \"CCC26\":\n                return \"Above\";\n            case \"CCC21\":\n                break;\n            // Arabic and Syriac\n            case \"CCC27\":\n            case \"CCC28\":\n            case \"CCC30\":\n            case \"CCC31\":\n            case \"CCC33\":\n            case \"CCC34\":\n            case \"CCC35\":\n            case \"CCC36\":\n                return \"Above\";\n            case \"CCC29\":\n            case \"CCC32\":\n                return \"Below\";\n            // Thai\n            case \"CCC103\":\n                return \"Below_Right\";\n            case \"CCC107\":\n                return \"Above_Right\";\n            // Lao\n            case \"CCC118\":\n                return \"Below\";\n            case \"CCC122\":\n                return \"Above\";\n            // Tibetan\n            case \"CCC129\":\n            case \"CCC132\":\n                return \"Below\";\n            case \"CCC130\":\n                return \"Above\";\n        }\n        return combiningClass;\n    }\n    constructor(font){\n        this.font = font;\n    }\n}\n\n\nclass $f34600ab9d7f70d8$export$2e2bcd8739ae039 {\n    /**\n   * The width of the bounding box\n   * @type {number}\n   */ get width() {\n        return this.maxX - this.minX;\n    }\n    /**\n   * The height of the bounding box\n   * @type {number}\n   */ get height() {\n        return this.maxY - this.minY;\n    }\n    addPoint(x, y) {\n        if (Math.abs(x) !== Infinity) {\n            if (x < this.minX) this.minX = x;\n            if (x > this.maxX) this.maxX = x;\n        }\n        if (Math.abs(y) !== Infinity) {\n            if (y < this.minY) this.minY = y;\n            if (y > this.maxY) this.maxY = y;\n        }\n    }\n    copy() {\n        return new $f34600ab9d7f70d8$export$2e2bcd8739ae039(this.minX, this.minY, this.maxX, this.maxY);\n    }\n    constructor(minX = Infinity, minY = Infinity, maxX = -Infinity, maxY = -Infinity){\n        /**\n     * The minimum X position in the bounding box\n     * @type {number}\n     */ this.minX = minX;\n        /**\n     * The minimum Y position in the bounding box\n     * @type {number}\n     */ this.minY = minY;\n        /**\n     * The maxmimum X position in the bounding box\n     * @type {number}\n     */ this.maxX = maxX;\n        /**\n     * The maxmimum Y position in the bounding box\n     * @type {number}\n     */ this.maxY = maxY;\n    }\n}\n\n\n\n// This maps the Unicode Script property to an OpenType script tag\n// Data from http://www.microsoft.com/typography/otspec/scripttags.htm\n// and http://www.unicode.org/Public/UNIDATA/PropertyValueAliases.txt.\nconst $130d1a642ebcd2b7$var$UNICODE_SCRIPTS = {\n    Caucasian_Albanian: \"aghb\",\n    Arabic: \"arab\",\n    Imperial_Aramaic: \"armi\",\n    Armenian: \"armn\",\n    Avestan: \"avst\",\n    Balinese: \"bali\",\n    Bamum: \"bamu\",\n    Bassa_Vah: \"bass\",\n    Batak: \"batk\",\n    Bengali: [\n        \"bng2\",\n        \"beng\"\n    ],\n    Bopomofo: \"bopo\",\n    Brahmi: \"brah\",\n    Braille: \"brai\",\n    Buginese: \"bugi\",\n    Buhid: \"buhd\",\n    Chakma: \"cakm\",\n    Canadian_Aboriginal: \"cans\",\n    Carian: \"cari\",\n    Cham: \"cham\",\n    Cherokee: \"cher\",\n    Coptic: \"copt\",\n    Cypriot: \"cprt\",\n    Cyrillic: \"cyrl\",\n    Devanagari: [\n        \"dev2\",\n        \"deva\"\n    ],\n    Deseret: \"dsrt\",\n    Duployan: \"dupl\",\n    Egyptian_Hieroglyphs: \"egyp\",\n    Elbasan: \"elba\",\n    Ethiopic: \"ethi\",\n    Georgian: \"geor\",\n    Glagolitic: \"glag\",\n    Gothic: \"goth\",\n    Grantha: \"gran\",\n    Greek: \"grek\",\n    Gujarati: [\n        \"gjr2\",\n        \"gujr\"\n    ],\n    Gurmukhi: [\n        \"gur2\",\n        \"guru\"\n    ],\n    Hangul: \"hang\",\n    Han: \"hani\",\n    Hanunoo: \"hano\",\n    Hebrew: \"hebr\",\n    Hiragana: \"hira\",\n    Pahawh_Hmong: \"hmng\",\n    Katakana_Or_Hiragana: \"hrkt\",\n    Old_Italic: \"ital\",\n    Javanese: \"java\",\n    Kayah_Li: \"kali\",\n    Katakana: \"kana\",\n    Kharoshthi: \"khar\",\n    Khmer: \"khmr\",\n    Khojki: \"khoj\",\n    Kannada: [\n        \"knd2\",\n        \"knda\"\n    ],\n    Kaithi: \"kthi\",\n    Tai_Tham: \"lana\",\n    Lao: \"lao \",\n    Latin: \"latn\",\n    Lepcha: \"lepc\",\n    Limbu: \"limb\",\n    Linear_A: \"lina\",\n    Linear_B: \"linb\",\n    Lisu: \"lisu\",\n    Lycian: \"lyci\",\n    Lydian: \"lydi\",\n    Mahajani: \"mahj\",\n    Mandaic: \"mand\",\n    Manichaean: \"mani\",\n    Mende_Kikakui: \"mend\",\n    Meroitic_Cursive: \"merc\",\n    Meroitic_Hieroglyphs: \"mero\",\n    Malayalam: [\n        \"mlm2\",\n        \"mlym\"\n    ],\n    Modi: \"modi\",\n    Mongolian: \"mong\",\n    Mro: \"mroo\",\n    Meetei_Mayek: \"mtei\",\n    Myanmar: [\n        \"mym2\",\n        \"mymr\"\n    ],\n    Old_North_Arabian: \"narb\",\n    Nabataean: \"nbat\",\n    Nko: \"nko \",\n    Ogham: \"ogam\",\n    Ol_Chiki: \"olck\",\n    Old_Turkic: \"orkh\",\n    Oriya: [\n        \"ory2\",\n        \"orya\"\n    ],\n    Osmanya: \"osma\",\n    Palmyrene: \"palm\",\n    Pau_Cin_Hau: \"pauc\",\n    Old_Permic: \"perm\",\n    Phags_Pa: \"phag\",\n    Inscriptional_Pahlavi: \"phli\",\n    Psalter_Pahlavi: \"phlp\",\n    Phoenician: \"phnx\",\n    Miao: \"plrd\",\n    Inscriptional_Parthian: \"prti\",\n    Rejang: \"rjng\",\n    Runic: \"runr\",\n    Samaritan: \"samr\",\n    Old_South_Arabian: \"sarb\",\n    Saurashtra: \"saur\",\n    Shavian: \"shaw\",\n    Sharada: \"shrd\",\n    Siddham: \"sidd\",\n    Khudawadi: \"sind\",\n    Sinhala: \"sinh\",\n    Sora_Sompeng: \"sora\",\n    Sundanese: \"sund\",\n    Syloti_Nagri: \"sylo\",\n    Syriac: \"syrc\",\n    Tagbanwa: \"tagb\",\n    Takri: \"takr\",\n    Tai_Le: \"tale\",\n    New_Tai_Lue: \"talu\",\n    Tamil: [\n        \"tml2\",\n        \"taml\"\n    ],\n    Tai_Viet: \"tavt\",\n    Telugu: [\n        \"tel2\",\n        \"telu\"\n    ],\n    Tifinagh: \"tfng\",\n    Tagalog: \"tglg\",\n    Thaana: \"thaa\",\n    Thai: \"thai\",\n    Tibetan: \"tibt\",\n    Tirhuta: \"tirh\",\n    Ugaritic: \"ugar\",\n    Vai: \"vai \",\n    Warang_Citi: \"wara\",\n    Old_Persian: \"xpeo\",\n    Cuneiform: \"xsux\",\n    Yi: \"yi  \",\n    Inherited: \"zinh\",\n    Common: \"zyyy\",\n    Unknown: \"zzzz\"\n};\nconst $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS = {};\nfor(let script in $130d1a642ebcd2b7$var$UNICODE_SCRIPTS){\n    let tag = $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script];\n    if (Array.isArray(tag)) for (let t of tag)$130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[t] = script;\n    else $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[tag] = script;\n}\nfunction $130d1a642ebcd2b7$export$b32f0b5f69d65e51(script1) {\n    return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script1];\n}\nfunction $130d1a642ebcd2b7$export$ce50e82f12a827a4(tag) {\n    return $130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS[tag];\n}\nfunction $130d1a642ebcd2b7$export$e5cb25e204fb8450(string) {\n    let len = string.length;\n    let idx = 0;\n    while(idx < len){\n        let code = string.charCodeAt(idx++);\n        // Check if this is a high surrogate\n        if (0xd800 <= code && code <= 0xdbff && idx < len) {\n            let next = string.charCodeAt(idx);\n            // Check if this is a low surrogate\n            if (0xdc00 <= next && next <= 0xdfff) {\n                idx++;\n                code = ((code & 0x3FF) << 10) + (next & 0x3FF) + 0x10000;\n            }\n        }\n        let script2 = (0, $6uUbQ$getScript)(code);\n        if (script2 !== \"Common\" && script2 !== \"Inherited\" && script2 !== \"Unknown\") return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script2];\n    }\n    return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS.Unknown;\n}\nfunction $130d1a642ebcd2b7$export$16fab0757cfc223d(codePoints) {\n    for(let i = 0; i < codePoints.length; i++){\n        let codePoint = codePoints[i];\n        let script3 = (0, $6uUbQ$getScript)(codePoint);\n        if (script3 !== \"Common\" && script3 !== \"Inherited\" && script3 !== \"Unknown\") return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS[script3];\n    }\n    return $130d1a642ebcd2b7$var$UNICODE_SCRIPTS.Unknown;\n}\n// The scripts in this map are written from right to left\nconst $130d1a642ebcd2b7$var$RTL = {\n    arab: true,\n    hebr: true,\n    syrc: true,\n    thaa: true,\n    cprt: true,\n    khar: true,\n    phnx: true,\n    \"nko \": true,\n    lydi: true,\n    avst: true,\n    armi: true,\n    phli: true,\n    prti: true,\n    sarb: true,\n    orkh: true,\n    samr: true,\n    mand: true,\n    merc: true,\n    mero: true,\n    // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)\n    mani: true,\n    mend: true,\n    nbat: true,\n    narb: true,\n    palm: true,\n    phlp: true // Psalter Pahlavi\n};\nfunction $130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script4) {\n    if ($130d1a642ebcd2b7$var$RTL[script4]) return \"rtl\";\n    return \"ltr\";\n}\n\n\nclass $be07b3e97a42687a$export$2e2bcd8739ae039 {\n    /**\n   * The total advance width of the run.\n   * @type {number}\n   */ get advanceWidth() {\n        let width = 0;\n        for (let position of this.positions)width += position.xAdvance;\n        return width;\n    }\n    /**\n  * The total advance height of the run.\n  * @type {number}\n  */ get advanceHeight() {\n        let height = 0;\n        for (let position of this.positions)height += position.yAdvance;\n        return height;\n    }\n    /**\n  * The bounding box containing all glyphs in the run.\n  * @type {BBox}\n  */ get bbox() {\n        let bbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039);\n        let x = 0;\n        let y = 0;\n        for(let index = 0; index < this.glyphs.length; index++){\n            let glyph = this.glyphs[index];\n            let p = this.positions[index];\n            let b = glyph.bbox;\n            bbox.addPoint(b.minX + x + p.xOffset, b.minY + y + p.yOffset);\n            bbox.addPoint(b.maxX + x + p.xOffset, b.maxY + y + p.yOffset);\n            x += p.xAdvance;\n            y += p.yAdvance;\n        }\n        return bbox;\n    }\n    constructor(glyphs, features, script, language, direction){\n        /**\n     * An array of Glyph objects in the run\n     * @type {Glyph[]}\n     */ this.glyphs = glyphs;\n        /**\n     * An array of GlyphPosition objects for each glyph in the run\n     * @type {GlyphPosition[]}\n     */ this.positions = null;\n        /**\n     * The script that was requested for shaping. This was either passed in or detected automatically.\n     * @type {string}\n     */ this.script = script;\n        /**\n     * The language requested for shaping, as passed in. If `null`, the default language for the\n     * script was used.\n     * @type {string}\n     */ this.language = language || null;\n        /**\n     * The direction requested for shaping, as passed in (either ltr or rtl).\n     * If `null`, the default direction of the script is used.\n     * @type {string}\n     */ this.direction = direction || $130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script);\n        /**\n     * The features requested during shaping. This is a combination of user\n     * specified features and features chosen by the shaper.\n     * @type {object}\n     */ this.features = {};\n        // Convert features to an object\n        if (Array.isArray(features)) for (let tag of features)this.features[tag] = true;\n        else if (typeof features === \"object\") this.features = features;\n    }\n}\n\n\nclass $1ac75d9a55b67f01$export$2e2bcd8739ae039 {\n    constructor(xAdvance = 0, yAdvance = 0, xOffset = 0, yOffset = 0){\n        /**\n     * The amount to move the virtual pen in the X direction after rendering this glyph.\n     * @type {number}\n     */ this.xAdvance = xAdvance;\n        /**\n     * The amount to move the virtual pen in the Y direction after rendering this glyph.\n     * @type {number}\n     */ this.yAdvance = yAdvance;\n        /**\n     * The offset from the pen position in the X direction at which to render this glyph.\n     * @type {number}\n     */ this.xOffset = xOffset;\n        /**\n     * The offset from the pen position in the Y direction at which to render this glyph.\n     * @type {number}\n     */ this.yOffset = yOffset;\n    }\n}\n\n\n\n// see https://developer.apple.com/fonts/TrueType-Reference-Manual/RM09/AppendixF.html\n// and /System/Library/Frameworks/CoreText.framework/Versions/A/Headers/SFNTLayoutTypes.h on a Mac\nconst $3b6302b64eccc32c$var$features = {\n    allTypographicFeatures: {\n        code: 0,\n        exclusive: false,\n        allTypeFeatures: 0\n    },\n    ligatures: {\n        code: 1,\n        exclusive: false,\n        requiredLigatures: 0,\n        commonLigatures: 2,\n        rareLigatures: 4,\n        // logos: 6\n        rebusPictures: 8,\n        diphthongLigatures: 10,\n        squaredLigatures: 12,\n        abbrevSquaredLigatures: 14,\n        symbolLigatures: 16,\n        contextualLigatures: 18,\n        historicalLigatures: 20\n    },\n    cursiveConnection: {\n        code: 2,\n        exclusive: true,\n        unconnected: 0,\n        partiallyConnected: 1,\n        cursive: 2\n    },\n    letterCase: {\n        code: 3,\n        exclusive: true\n    },\n    // upperAndLowerCase: 0          # deprecated\n    // allCaps: 1                    # deprecated\n    // allLowerCase: 2               # deprecated\n    // smallCaps: 3                  # deprecated\n    // initialCaps: 4                # deprecated\n    // initialCapsAndSmallCaps: 5    # deprecated\n    verticalSubstitution: {\n        code: 4,\n        exclusive: false,\n        substituteVerticalForms: 0\n    },\n    linguisticRearrangement: {\n        code: 5,\n        exclusive: false,\n        linguisticRearrangement: 0\n    },\n    numberSpacing: {\n        code: 6,\n        exclusive: true,\n        monospacedNumbers: 0,\n        proportionalNumbers: 1,\n        thirdWidthNumbers: 2,\n        quarterWidthNumbers: 3\n    },\n    smartSwash: {\n        code: 8,\n        exclusive: false,\n        wordInitialSwashes: 0,\n        wordFinalSwashes: 2,\n        // lineInitialSwashes: 4\n        // lineFinalSwashes: 6\n        nonFinalSwashes: 8\n    },\n    diacritics: {\n        code: 9,\n        exclusive: true,\n        showDiacritics: 0,\n        hideDiacritics: 1,\n        decomposeDiacritics: 2\n    },\n    verticalPosition: {\n        code: 10,\n        exclusive: true,\n        normalPosition: 0,\n        superiors: 1,\n        inferiors: 2,\n        ordinals: 3,\n        scientificInferiors: 4\n    },\n    fractions: {\n        code: 11,\n        exclusive: true,\n        noFractions: 0,\n        verticalFractions: 1,\n        diagonalFractions: 2\n    },\n    overlappingCharacters: {\n        code: 13,\n        exclusive: false,\n        preventOverlap: 0\n    },\n    typographicExtras: {\n        code: 14,\n        exclusive: false,\n        // hyphensToEmDash: 0\n        // hyphenToEnDash: 2\n        slashedZero: 4\n    },\n    // formInterrobang: 6\n    // smartQuotes: 8\n    // periodsToEllipsis: 10\n    mathematicalExtras: {\n        code: 15,\n        exclusive: false,\n        // hyphenToMinus: 0\n        // asteristoMultiply: 2\n        // slashToDivide: 4\n        // inequalityLigatures: 6\n        // exponents: 8\n        mathematicalGreek: 10\n    },\n    ornamentSets: {\n        code: 16,\n        exclusive: true,\n        noOrnaments: 0,\n        dingbats: 1,\n        piCharacters: 2,\n        fleurons: 3,\n        decorativeBorders: 4,\n        internationalSymbols: 5,\n        mathSymbols: 6\n    },\n    characterAlternatives: {\n        code: 17,\n        exclusive: true,\n        noAlternates: 0\n    },\n    // user defined options\n    designComplexity: {\n        code: 18,\n        exclusive: true,\n        designLevel1: 0,\n        designLevel2: 1,\n        designLevel3: 2,\n        designLevel4: 3,\n        designLevel5: 4\n    },\n    styleOptions: {\n        code: 19,\n        exclusive: true,\n        noStyleOptions: 0,\n        displayText: 1,\n        engravedText: 2,\n        illuminatedCaps: 3,\n        titlingCaps: 4,\n        tallCaps: 5\n    },\n    characterShape: {\n        code: 20,\n        exclusive: true,\n        traditionalCharacters: 0,\n        simplifiedCharacters: 1,\n        JIS1978Characters: 2,\n        JIS1983Characters: 3,\n        JIS1990Characters: 4,\n        traditionalAltOne: 5,\n        traditionalAltTwo: 6,\n        traditionalAltThree: 7,\n        traditionalAltFour: 8,\n        traditionalAltFive: 9,\n        expertCharacters: 10,\n        JIS2004Characters: 11,\n        hojoCharacters: 12,\n        NLCCharacters: 13,\n        traditionalNamesCharacters: 14\n    },\n    numberCase: {\n        code: 21,\n        exclusive: true,\n        lowerCaseNumbers: 0,\n        upperCaseNumbers: 1\n    },\n    textSpacing: {\n        code: 22,\n        exclusive: true,\n        proportionalText: 0,\n        monospacedText: 1,\n        halfWidthText: 2,\n        thirdWidthText: 3,\n        quarterWidthText: 4,\n        altProportionalText: 5,\n        altHalfWidthText: 6\n    },\n    transliteration: {\n        code: 23,\n        exclusive: true,\n        noTransliteration: 0\n    },\n    // hanjaToHangul: 1\n    // hiraganaToKatakana: 2\n    // katakanaToHiragana: 3\n    // kanaToRomanization: 4\n    // romanizationToHiragana: 5\n    // romanizationToKatakana: 6\n    // hanjaToHangulAltOne: 7\n    // hanjaToHangulAltTwo: 8\n    // hanjaToHangulAltThree: 9\n    annotation: {\n        code: 24,\n        exclusive: true,\n        noAnnotation: 0,\n        boxAnnotation: 1,\n        roundedBoxAnnotation: 2,\n        circleAnnotation: 3,\n        invertedCircleAnnotation: 4,\n        parenthesisAnnotation: 5,\n        periodAnnotation: 6,\n        romanNumeralAnnotation: 7,\n        diamondAnnotation: 8,\n        invertedBoxAnnotation: 9,\n        invertedRoundedBoxAnnotation: 10\n    },\n    kanaSpacing: {\n        code: 25,\n        exclusive: true,\n        fullWidthKana: 0,\n        proportionalKana: 1\n    },\n    ideographicSpacing: {\n        code: 26,\n        exclusive: true,\n        fullWidthIdeographs: 0,\n        proportionalIdeographs: 1,\n        halfWidthIdeographs: 2\n    },\n    unicodeDecomposition: {\n        code: 27,\n        exclusive: false,\n        canonicalComposition: 0,\n        compatibilityComposition: 2,\n        transcodingComposition: 4\n    },\n    rubyKana: {\n        code: 28,\n        exclusive: false,\n        // noRubyKana: 0     # deprecated - use rubyKanaOff instead\n        // rubyKana: 1     # deprecated - use rubyKanaOn instead\n        rubyKana: 2\n    },\n    CJKSymbolAlternatives: {\n        code: 29,\n        exclusive: true,\n        noCJKSymbolAlternatives: 0,\n        CJKSymbolAltOne: 1,\n        CJKSymbolAltTwo: 2,\n        CJKSymbolAltThree: 3,\n        CJKSymbolAltFour: 4,\n        CJKSymbolAltFive: 5\n    },\n    ideographicAlternatives: {\n        code: 30,\n        exclusive: true,\n        noIdeographicAlternatives: 0,\n        ideographicAltOne: 1,\n        ideographicAltTwo: 2,\n        ideographicAltThree: 3,\n        ideographicAltFour: 4,\n        ideographicAltFive: 5\n    },\n    CJKVerticalRomanPlacement: {\n        code: 31,\n        exclusive: true,\n        CJKVerticalRomanCentered: 0,\n        CJKVerticalRomanHBaseline: 1\n    },\n    italicCJKRoman: {\n        code: 32,\n        exclusive: false,\n        // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead\n        // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead\n        CJKItalicRoman: 2\n    },\n    caseSensitiveLayout: {\n        code: 33,\n        exclusive: false,\n        caseSensitiveLayout: 0,\n        caseSensitiveSpacing: 2\n    },\n    alternateKana: {\n        code: 34,\n        exclusive: false,\n        alternateHorizKana: 0,\n        alternateVertKana: 2\n    },\n    stylisticAlternatives: {\n        code: 35,\n        exclusive: false,\n        noStylisticAlternates: 0,\n        stylisticAltOne: 2,\n        stylisticAltTwo: 4,\n        stylisticAltThree: 6,\n        stylisticAltFour: 8,\n        stylisticAltFive: 10,\n        stylisticAltSix: 12,\n        stylisticAltSeven: 14,\n        stylisticAltEight: 16,\n        stylisticAltNine: 18,\n        stylisticAltTen: 20,\n        stylisticAltEleven: 22,\n        stylisticAltTwelve: 24,\n        stylisticAltThirteen: 26,\n        stylisticAltFourteen: 28,\n        stylisticAltFifteen: 30,\n        stylisticAltSixteen: 32,\n        stylisticAltSeventeen: 34,\n        stylisticAltEighteen: 36,\n        stylisticAltNineteen: 38,\n        stylisticAltTwenty: 40\n    },\n    contextualAlternates: {\n        code: 36,\n        exclusive: false,\n        contextualAlternates: 0,\n        swashAlternates: 2,\n        contextualSwashAlternates: 4\n    },\n    lowerCase: {\n        code: 37,\n        exclusive: true,\n        defaultLowerCase: 0,\n        lowerCaseSmallCaps: 1,\n        lowerCasePetiteCaps: 2\n    },\n    upperCase: {\n        code: 38,\n        exclusive: true,\n        defaultUpperCase: 0,\n        upperCaseSmallCaps: 1,\n        upperCasePetiteCaps: 2\n    },\n    languageTag: {\n        code: 39,\n        exclusive: true\n    },\n    CJKRomanSpacing: {\n        code: 103,\n        exclusive: true,\n        halfWidthCJKRoman: 0,\n        proportionalCJKRoman: 1,\n        defaultCJKRoman: 2,\n        fullWidthCJKRoman: 3\n    }\n};\nconst $3b6302b64eccc32c$var$feature = (name, selector)=>[\n        $3b6302b64eccc32c$var$features[name].code,\n        $3b6302b64eccc32c$var$features[name][selector]\n    ];\nconst $3b6302b64eccc32c$var$OTMapping = {\n    rlig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"requiredLigatures\"),\n    clig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"contextualLigatures\"),\n    dlig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"rareLigatures\"),\n    hlig: $3b6302b64eccc32c$var$feature(\"ligatures\", \"historicalLigatures\"),\n    liga: $3b6302b64eccc32c$var$feature(\"ligatures\", \"commonLigatures\"),\n    hist: $3b6302b64eccc32c$var$feature(\"ligatures\", \"historicalLigatures\"),\n    smcp: $3b6302b64eccc32c$var$feature(\"lowerCase\", \"lowerCaseSmallCaps\"),\n    pcap: $3b6302b64eccc32c$var$feature(\"lowerCase\", \"lowerCasePetiteCaps\"),\n    frac: $3b6302b64eccc32c$var$feature(\"fractions\", \"diagonalFractions\"),\n    dnom: $3b6302b64eccc32c$var$feature(\"fractions\", \"diagonalFractions\"),\n    numr: $3b6302b64eccc32c$var$feature(\"fractions\", \"diagonalFractions\"),\n    afrc: $3b6302b64eccc32c$var$feature(\"fractions\", \"verticalFractions\"),\n    // aalt\n    // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?\n    // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?\n    // unic, vatu, vhal, vjmo, vpal, vrt2\n    // dist -> trak table?\n    // kern, vkrn -> kern table\n    // lfbd + opbd + rtbd -> opbd table?\n    // mark, mkmk -> acnt table?\n    // locl -> languageTag + ltag table\n    case: $3b6302b64eccc32c$var$feature(\"caseSensitiveLayout\", \"caseSensitiveLayout\"),\n    ccmp: $3b6302b64eccc32c$var$feature(\"unicodeDecomposition\", \"canonicalComposition\"),\n    cpct: $3b6302b64eccc32c$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n    valt: $3b6302b64eccc32c$var$feature(\"CJKVerticalRomanPlacement\", \"CJKVerticalRomanCentered\"),\n    swsh: $3b6302b64eccc32c$var$feature(\"contextualAlternates\", \"swashAlternates\"),\n    cswh: $3b6302b64eccc32c$var$feature(\"contextualAlternates\", \"contextualSwashAlternates\"),\n    curs: $3b6302b64eccc32c$var$feature(\"cursiveConnection\", \"cursive\"),\n    c2pc: $3b6302b64eccc32c$var$feature(\"upperCase\", \"upperCasePetiteCaps\"),\n    c2sc: $3b6302b64eccc32c$var$feature(\"upperCase\", \"upperCaseSmallCaps\"),\n    init: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordInitialSwashes\"),\n    fin2: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    medi: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n    med2: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"nonFinalSwashes\"),\n    fin3: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    fina: $3b6302b64eccc32c$var$feature(\"smartSwash\", \"wordFinalSwashes\"),\n    pkna: $3b6302b64eccc32c$var$feature(\"kanaSpacing\", \"proportionalKana\"),\n    half: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"halfWidthText\"),\n    halt: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"altHalfWidthText\"),\n    hkna: $3b6302b64eccc32c$var$feature(\"alternateKana\", \"alternateHorizKana\"),\n    vkna: $3b6302b64eccc32c$var$feature(\"alternateKana\", \"alternateVertKana\"),\n    // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated\n    ital: $3b6302b64eccc32c$var$feature(\"italicCJKRoman\", \"CJKItalicRoman\"),\n    lnum: $3b6302b64eccc32c$var$feature(\"numberCase\", \"upperCaseNumbers\"),\n    onum: $3b6302b64eccc32c$var$feature(\"numberCase\", \"lowerCaseNumbers\"),\n    mgrk: $3b6302b64eccc32c$var$feature(\"mathematicalExtras\", \"mathematicalGreek\"),\n    // nalt: not enough info. what type of annotation?\n    // ornm: ditto, which ornament style?\n    calt: $3b6302b64eccc32c$var$feature(\"contextualAlternates\", \"contextualAlternates\"),\n    vrt2: $3b6302b64eccc32c$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n    vert: $3b6302b64eccc32c$var$feature(\"verticalSubstitution\", \"substituteVerticalForms\"),\n    tnum: $3b6302b64eccc32c$var$feature(\"numberSpacing\", \"monospacedNumbers\"),\n    pnum: $3b6302b64eccc32c$var$feature(\"numberSpacing\", \"proportionalNumbers\"),\n    sups: $3b6302b64eccc32c$var$feature(\"verticalPosition\", \"superiors\"),\n    subs: $3b6302b64eccc32c$var$feature(\"verticalPosition\", \"inferiors\"),\n    ordn: $3b6302b64eccc32c$var$feature(\"verticalPosition\", \"ordinals\"),\n    pwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"proportionalText\"),\n    hwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"halfWidthText\"),\n    qwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"quarterWidthText\"),\n    twid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"thirdWidthText\"),\n    fwid: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"proportionalText\"),\n    palt: $3b6302b64eccc32c$var$feature(\"textSpacing\", \"altProportionalText\"),\n    trad: $3b6302b64eccc32c$var$feature(\"characterShape\", \"traditionalCharacters\"),\n    smpl: $3b6302b64eccc32c$var$feature(\"characterShape\", \"simplifiedCharacters\"),\n    jp78: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS1978Characters\"),\n    jp83: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS1983Characters\"),\n    jp90: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS1990Characters\"),\n    jp04: $3b6302b64eccc32c$var$feature(\"characterShape\", \"JIS2004Characters\"),\n    expt: $3b6302b64eccc32c$var$feature(\"characterShape\", \"expertCharacters\"),\n    hojo: $3b6302b64eccc32c$var$feature(\"characterShape\", \"hojoCharacters\"),\n    nlck: $3b6302b64eccc32c$var$feature(\"characterShape\", \"NLCCharacters\"),\n    tnam: $3b6302b64eccc32c$var$feature(\"characterShape\", \"traditionalNamesCharacters\"),\n    ruby: $3b6302b64eccc32c$var$feature(\"rubyKana\", \"rubyKana\"),\n    titl: $3b6302b64eccc32c$var$feature(\"styleOptions\", \"titlingCaps\"),\n    zero: $3b6302b64eccc32c$var$feature(\"typographicExtras\", \"slashedZero\"),\n    ss01: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltOne\"),\n    ss02: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTwo\"),\n    ss03: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltThree\"),\n    ss04: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFour\"),\n    ss05: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFive\"),\n    ss06: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSix\"),\n    ss07: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSeven\"),\n    ss08: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltEight\"),\n    ss09: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltNine\"),\n    ss10: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTen\"),\n    ss11: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltEleven\"),\n    ss12: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTwelve\"),\n    ss13: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltThirteen\"),\n    ss14: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFourteen\"),\n    ss15: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltFifteen\"),\n    ss16: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSixteen\"),\n    ss17: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltSeventeen\"),\n    ss18: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltEighteen\"),\n    ss19: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltNineteen\"),\n    ss20: $3b6302b64eccc32c$var$feature(\"stylisticAlternatives\", \"stylisticAltTwenty\")\n};\n// salt: feature 'stylisticAlternatives', 'stylisticAltOne' # hmm, which one to choose\n// Add cv01-cv99 features\nfor(let i = 1; i <= 99; i++)$3b6302b64eccc32c$var$OTMapping[`cv${`00${i}`.slice(-2)}`] = [\n    $3b6302b64eccc32c$var$features.characterAlternatives.code,\n    i\n];\n// create inverse mapping\nlet $3b6302b64eccc32c$var$AATMapping = {};\nfor(let ot in $3b6302b64eccc32c$var$OTMapping){\n    let aat = $3b6302b64eccc32c$var$OTMapping[ot];\n    if ($3b6302b64eccc32c$var$AATMapping[aat[0]] == null) $3b6302b64eccc32c$var$AATMapping[aat[0]] = {};\n    $3b6302b64eccc32c$var$AATMapping[aat[0]][aat[1]] = ot;\n}\nfunction $3b6302b64eccc32c$export$b813f7d2a1677c16(features1) {\n    let res = {};\n    for(let k in features1){\n        let r;\n        if (r = $3b6302b64eccc32c$var$OTMapping[k]) {\n            if (res[r[0]] == null) res[r[0]] = {};\n            res[r[0]][r[1]] = features1[k];\n        }\n    }\n    return res;\n}\n// Maps strings in a [featureType, featureSetting]\n// to their equivalent number codes\nfunction $3b6302b64eccc32c$var$mapFeatureStrings(f) {\n    let [type, setting] = f;\n    if (isNaN(type)) var typeCode = $3b6302b64eccc32c$var$features[type] && $3b6302b64eccc32c$var$features[type].code;\n    else var typeCode = type;\n    if (isNaN(setting)) var settingCode = $3b6302b64eccc32c$var$features[type] && $3b6302b64eccc32c$var$features[type][setting];\n    else var settingCode = setting;\n    return [\n        typeCode,\n        settingCode\n    ];\n}\nfunction $3b6302b64eccc32c$export$bd6df347a4f391c4(features2) {\n    let res = {};\n    if (Array.isArray(features2)) for(let k = 0; k < features2.length; k++){\n        let r;\n        let f = $3b6302b64eccc32c$var$mapFeatureStrings(features2[k]);\n        if (r = $3b6302b64eccc32c$var$AATMapping[f[0]] && $3b6302b64eccc32c$var$AATMapping[f[0]][f[1]]) res[r] = true;\n    }\n    else if (typeof features2 === \"object\") for(let type in features2){\n        let feature1 = features2[type];\n        for(let setting in feature1){\n            let r;\n            let f = $3b6302b64eccc32c$var$mapFeatureStrings([\n                type,\n                setting\n            ]);\n            if (feature1[setting] && (r = $3b6302b64eccc32c$var$AATMapping[f[0]] && $3b6302b64eccc32c$var$AATMapping[f[0]][f[1]])) res[r] = true;\n        }\n    }\n    return Object.keys(res);\n}\n\n\n\n\n\n\n\nclass $ff5ce077dae0f144$export$2e2bcd8739ae039 {\n    lookup(glyph) {\n        switch(this.table.version){\n            case 0:\n                return this.table.values.getItem(glyph);\n            case 2:\n            case 4:\n                {\n                    let min = 0;\n                    let max = this.table.binarySearchHeader.nUnits - 1;\n                    while(min <= max){\n                        var mid = min + max >> 1;\n                        var seg = this.table.segments[mid];\n                        // special end of search value\n                        if (seg.firstGlyph === 0xffff) return null;\n                        if (glyph < seg.firstGlyph) max = mid - 1;\n                        else if (glyph > seg.lastGlyph) min = mid + 1;\n                        else {\n                            if (this.table.version === 2) return seg.value;\n                            else return seg.values[glyph - seg.firstGlyph];\n                        }\n                    }\n                    return null;\n                }\n            case 6:\n                {\n                    let min = 0;\n                    let max = this.table.binarySearchHeader.nUnits - 1;\n                    while(min <= max){\n                        var mid = min + max >> 1;\n                        var seg = this.table.segments[mid];\n                        // special end of search value\n                        if (seg.glyph === 0xffff) return null;\n                        if (glyph < seg.glyph) max = mid - 1;\n                        else if (glyph > seg.glyph) min = mid + 1;\n                        else return seg.value;\n                    }\n                    return null;\n                }\n            case 8:\n                return this.table.values[glyph - this.table.firstGlyph];\n            default:\n                throw new Error(`Unknown lookup table format: ${this.table.version}`);\n        }\n    }\n    glyphsForValue(classValue) {\n        let res = [];\n        switch(this.table.version){\n            case 2:\n            case 4:\n                for (let segment of this.table.segments)if (this.table.version === 2 && segment.value === classValue) res.push(...(0, $12727730ddfc8bfe$export$d02631cccf789723)(segment.firstGlyph, segment.lastGlyph + 1));\n                else {\n                    for(let index = 0; index < segment.values.length; index++)if (segment.values[index] === classValue) res.push(segment.firstGlyph + index);\n                }\n                break;\n            case 6:\n                for (let segment1 of this.table.segments)if (segment1.value === classValue) res.push(segment1.glyph);\n                break;\n            case 8:\n                for(let i = 0; i < this.table.values.length; i++)if (this.table.values[i] === classValue) res.push(this.table.firstGlyph + i);\n                break;\n            default:\n                throw new Error(`Unknown lookup table format: ${this.table.version}`);\n        }\n        return res;\n    }\n    constructor(table){\n        this.table = table;\n    }\n}\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $ff5ce077dae0f144$export$2e2bcd8739ae039.prototype, \"glyphsForValue\", null);\n\n\nconst $50c7aac9316f2948$var$START_OF_TEXT_STATE = 0;\nconst $50c7aac9316f2948$var$START_OF_LINE_STATE = 1;\nconst $50c7aac9316f2948$var$END_OF_TEXT_CLASS = 0;\nconst $50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS = 1;\nconst $50c7aac9316f2948$var$DELETED_GLYPH_CLASS = 2;\nconst $50c7aac9316f2948$var$END_OF_LINE_CLASS = 3;\nconst $50c7aac9316f2948$var$DONT_ADVANCE = 0x4000;\nclass $50c7aac9316f2948$export$2e2bcd8739ae039 {\n    process(glyphs, reverse, processEntry) {\n        let currentState = $50c7aac9316f2948$var$START_OF_TEXT_STATE; // START_OF_LINE_STATE is used for kashida glyph insertions sometimes I think?\n        let index = reverse ? glyphs.length - 1 : 0;\n        let dir = reverse ? -1 : 1;\n        while(dir === 1 && index <= glyphs.length || dir === -1 && index >= -1){\n            let glyph = null;\n            let classCode = $50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS;\n            let shouldAdvance = true;\n            if (index === glyphs.length || index === -1) classCode = $50c7aac9316f2948$var$END_OF_TEXT_CLASS;\n            else {\n                glyph = glyphs[index];\n                if (glyph.id === 0xffff) classCode = $50c7aac9316f2948$var$DELETED_GLYPH_CLASS;\n                else {\n                    classCode = this.lookupTable.lookup(glyph.id);\n                    if (classCode == null) classCode = $50c7aac9316f2948$var$OUT_OF_BOUNDS_CLASS;\n                }\n            }\n            let row = this.stateTable.stateArray.getItem(currentState);\n            let entryIndex = row[classCode];\n            let entry = this.stateTable.entryTable.getItem(entryIndex);\n            if (classCode !== $50c7aac9316f2948$var$END_OF_TEXT_CLASS && classCode !== $50c7aac9316f2948$var$DELETED_GLYPH_CLASS) {\n                processEntry(glyph, entry, index);\n                shouldAdvance = !(entry.flags & $50c7aac9316f2948$var$DONT_ADVANCE);\n            }\n            currentState = entry.newState;\n            if (shouldAdvance) index += dir;\n        }\n        return glyphs;\n    }\n    /**\n   * Performs a depth-first traversal of the glyph strings\n   * represented by the state machine.\n   */ traverse(opts, state = 0, visited = new Set) {\n        if (visited.has(state)) return;\n        visited.add(state);\n        let { nClasses: nClasses , stateArray: stateArray , entryTable: entryTable  } = this.stateTable;\n        let row = stateArray.getItem(state);\n        // Skip predefined classes\n        for(let classCode = 4; classCode < nClasses; classCode++){\n            let entryIndex = row[classCode];\n            let entry = entryTable.getItem(entryIndex);\n            // Try all glyphs in the class\n            for (let glyph of this.lookupTable.glyphsForValue(classCode)){\n                if (opts.enter) opts.enter(glyph, entry);\n                if (entry.newState !== 0) this.traverse(opts, entry.newState, visited);\n                if (opts.exit) opts.exit(glyph, entry);\n            }\n        }\n    }\n    constructor(stateTable){\n        this.stateTable = stateTable;\n        this.lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(stateTable.classTable);\n    }\n}\n\n\n\n\n// indic replacement flags\nconst $55f71433a605c87d$var$MARK_FIRST = 0x8000;\nconst $55f71433a605c87d$var$MARK_LAST = 0x2000;\nconst $55f71433a605c87d$var$VERB = 0x000F;\n// contextual substitution and glyph insertion flag\nconst $55f71433a605c87d$var$SET_MARK = 0x8000;\n// ligature entry flags\nconst $55f71433a605c87d$var$SET_COMPONENT = 0x8000;\nconst $55f71433a605c87d$var$PERFORM_ACTION = 0x2000;\n// ligature action masks\nconst $55f71433a605c87d$var$LAST_MASK = 0x80000000;\nconst $55f71433a605c87d$var$STORE_MASK = 0x40000000;\nconst $55f71433a605c87d$var$OFFSET_MASK = 0x3FFFFFFF;\nconst $55f71433a605c87d$var$VERTICAL_ONLY = 0x800000;\nconst $55f71433a605c87d$var$REVERSE_DIRECTION = 0x400000;\nconst $55f71433a605c87d$var$HORIZONTAL_AND_VERTICAL = 0x200000;\n// glyph insertion flags\nconst $55f71433a605c87d$var$CURRENT_IS_KASHIDA_LIKE = 0x2000;\nconst $55f71433a605c87d$var$MARKED_IS_KASHIDA_LIKE = 0x1000;\nconst $55f71433a605c87d$var$CURRENT_INSERT_BEFORE = 0x0800;\nconst $55f71433a605c87d$var$MARKED_INSERT_BEFORE = 0x0400;\nconst $55f71433a605c87d$var$CURRENT_INSERT_COUNT = 0x03E0;\nconst $55f71433a605c87d$var$MARKED_INSERT_COUNT = 0x001F;\nclass $55f71433a605c87d$export$2e2bcd8739ae039 {\n    // Processes an array of glyphs and applies the specified features\n    // Features should be in the form of {featureType:{featureSetting:boolean}}\n    process(glyphs, features = {}) {\n        for (let chain of this.morx.chains){\n            let flags = chain.defaultFlags;\n            // enable/disable the requested features\n            for (let feature of chain.features){\n                let f;\n                if (f = features[feature.featureType]) {\n                    if (f[feature.featureSetting]) {\n                        flags &= feature.disableFlags;\n                        flags |= feature.enableFlags;\n                    } else if (f[feature.featureSetting] === false) {\n                        flags |= ~feature.disableFlags;\n                        flags &= ~feature.enableFlags;\n                    }\n                }\n            }\n            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.processSubtable(subtable, glyphs);\n        }\n        // remove deleted glyphs\n        let index = glyphs.length - 1;\n        while(index >= 0){\n            if (glyphs[index].id === 0xffff) glyphs.splice(index, 1);\n            index--;\n        }\n        return glyphs;\n    }\n    processSubtable(subtable, glyphs) {\n        this.subtable = subtable;\n        this.glyphs = glyphs;\n        if (this.subtable.type === 4) {\n            this.processNoncontextualSubstitutions(this.subtable, this.glyphs);\n            return;\n        }\n        this.ligatureStack = [];\n        this.markedGlyph = null;\n        this.firstGlyph = null;\n        this.lastGlyph = null;\n        this.markedIndex = null;\n        let stateMachine = this.getStateMachine(subtable);\n        let process = this.getProcessor();\n        let reverse = !!(this.subtable.coverage & $55f71433a605c87d$var$REVERSE_DIRECTION);\n        return stateMachine.process(this.glyphs, reverse, process);\n    }\n    getStateMachine(subtable) {\n        return new (0, $50c7aac9316f2948$export$2e2bcd8739ae039)(subtable.table.stateTable);\n    }\n    getProcessor() {\n        switch(this.subtable.type){\n            case 0:\n                return this.processIndicRearragement;\n            case 1:\n                return this.processContextualSubstitution;\n            case 2:\n                return this.processLigature;\n            case 4:\n                return this.processNoncontextualSubstitutions;\n            case 5:\n                return this.processGlyphInsertion;\n            default:\n                throw new Error(`Invalid morx subtable type: ${this.subtable.type}`);\n        }\n    }\n    processIndicRearragement(glyph, entry, index) {\n        if (entry.flags & $55f71433a605c87d$var$MARK_FIRST) this.firstGlyph = index;\n        if (entry.flags & $55f71433a605c87d$var$MARK_LAST) this.lastGlyph = index;\n        $55f71433a605c87d$var$reorderGlyphs(this.glyphs, entry.flags & $55f71433a605c87d$var$VERB, this.firstGlyph, this.lastGlyph);\n    }\n    processContextualSubstitution(glyph, entry, index) {\n        let subsitutions = this.subtable.table.substitutionTable.items;\n        if (entry.markIndex !== 0xffff) {\n            let lookup = subsitutions.getItem(entry.markIndex);\n            let lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(lookup);\n            glyph = this.glyphs[this.markedGlyph];\n            var gid = lookupTable.lookup(glyph.id);\n            if (gid) this.glyphs[this.markedGlyph] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n        if (entry.currentIndex !== 0xffff) {\n            let lookup = subsitutions.getItem(entry.currentIndex);\n            let lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(lookup);\n            glyph = this.glyphs[index];\n            var gid = lookupTable.lookup(glyph.id);\n            if (gid) this.glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n        }\n        if (entry.flags & $55f71433a605c87d$var$SET_MARK) this.markedGlyph = index;\n    }\n    processLigature(glyph, entry, index) {\n        if (entry.flags & $55f71433a605c87d$var$SET_COMPONENT) this.ligatureStack.push(index);\n        if (entry.flags & $55f71433a605c87d$var$PERFORM_ACTION) {\n            let actions = this.subtable.table.ligatureActions;\n            let components = this.subtable.table.components;\n            let ligatureList = this.subtable.table.ligatureList;\n            let actionIndex = entry.action;\n            let last = false;\n            let ligatureIndex = 0;\n            let codePoints = [];\n            let ligatureGlyphs = [];\n            while(!last){\n                let componentGlyph = this.ligatureStack.pop();\n                codePoints.unshift(...this.glyphs[componentGlyph].codePoints);\n                let action = actions.getItem(actionIndex++);\n                last = !!(action & $55f71433a605c87d$var$LAST_MASK);\n                let store = !!(action & $55f71433a605c87d$var$STORE_MASK);\n                let offset = (action & $55f71433a605c87d$var$OFFSET_MASK) << 2 >> 2; // sign extend 30 to 32 bits\n                offset += this.glyphs[componentGlyph].id;\n                let component = components.getItem(offset);\n                ligatureIndex += component;\n                if (last || store) {\n                    let ligatureEntry = ligatureList.getItem(ligatureIndex);\n                    this.glyphs[componentGlyph] = this.font.getGlyph(ligatureEntry, codePoints);\n                    ligatureGlyphs.push(componentGlyph);\n                    ligatureIndex = 0;\n                    codePoints = [];\n                } else this.glyphs[componentGlyph] = this.font.getGlyph(0xffff);\n            }\n            // Put ligature glyph indexes back on the stack\n            this.ligatureStack.push(...ligatureGlyphs);\n        }\n    }\n    processNoncontextualSubstitutions(subtable, glyphs, index) {\n        let lookupTable = new (0, $ff5ce077dae0f144$export$2e2bcd8739ae039)(subtable.table.lookupTable);\n        for(index = 0; index < glyphs.length; index++){\n            let glyph = glyphs[index];\n            if (glyph.id !== 0xffff) {\n                let gid = lookupTable.lookup(glyph.id);\n                if (gid) glyphs[index] = this.font.getGlyph(gid, glyph.codePoints);\n            }\n        }\n    }\n    _insertGlyphs(glyphIndex, insertionActionIndex, count, isBefore) {\n        let insertions = [];\n        while(count--){\n            let gid = this.subtable.table.insertionActions.getItem(insertionActionIndex++);\n            insertions.push(this.font.getGlyph(gid));\n        }\n        if (!isBefore) glyphIndex++;\n        this.glyphs.splice(glyphIndex, 0, ...insertions);\n    }\n    processGlyphInsertion(glyph, entry, index) {\n        if (entry.flags & $55f71433a605c87d$var$SET_MARK) this.markedIndex = index;\n        if (entry.markedInsertIndex !== 0xffff) {\n            let count = (entry.flags & $55f71433a605c87d$var$MARKED_INSERT_COUNT) >>> 5;\n            let isBefore = !!(entry.flags & $55f71433a605c87d$var$MARKED_INSERT_BEFORE);\n            this._insertGlyphs(this.markedIndex, entry.markedInsertIndex, count, isBefore);\n        }\n        if (entry.currentInsertIndex !== 0xffff) {\n            let count = (entry.flags & $55f71433a605c87d$var$CURRENT_INSERT_COUNT) >>> 5;\n            let isBefore = !!(entry.flags & $55f71433a605c87d$var$CURRENT_INSERT_BEFORE);\n            this._insertGlyphs(index, entry.currentInsertIndex, count, isBefore);\n        }\n    }\n    getSupportedFeatures() {\n        let features = [];\n        for (let chain of this.morx.chains)for (let feature of chain.features)features.push([\n            feature.featureType,\n            feature.featureSetting\n        ]);\n        return features;\n    }\n    generateInputs(gid) {\n        if (!this.inputCache) this.generateInputCache();\n        return this.inputCache[gid] || [];\n    }\n    generateInputCache() {\n        this.inputCache = {};\n        for (let chain of this.morx.chains){\n            let flags = chain.defaultFlags;\n            for (let subtable of chain.subtables)if (subtable.subFeatureFlags & flags) this.generateInputsForSubtable(subtable);\n        }\n    }\n    generateInputsForSubtable(subtable) {\n        // Currently, only supporting ligature subtables.\n        if (subtable.type !== 2) return;\n        let reverse = !!(subtable.coverage & $55f71433a605c87d$var$REVERSE_DIRECTION);\n        if (reverse) throw new Error(\"Reverse subtable, not supported.\");\n        this.subtable = subtable;\n        this.ligatureStack = [];\n        let stateMachine = this.getStateMachine(subtable);\n        let process = this.getProcessor();\n        let input = [];\n        let stack = [];\n        this.glyphs = [];\n        stateMachine.traverse({\n            enter: (glyph, entry)=>{\n                let glyphs = this.glyphs;\n                stack.push({\n                    glyphs: glyphs.slice(),\n                    ligatureStack: this.ligatureStack.slice()\n                });\n                // Add glyph to input and glyphs to process.\n                let g1 = this.font.getGlyph(glyph);\n                input.push(g1);\n                glyphs.push(input[input.length - 1]);\n                // Process ligature substitution\n                process(glyphs[glyphs.length - 1], entry, glyphs.length - 1);\n                // Add input to result if only one matching (non-deleted) glyph remains.\n                let count = 0;\n                let found = 0;\n                for(let i = 0; i < glyphs.length && count <= 1; i++)if (glyphs[i].id !== 0xffff) {\n                    count++;\n                    found = glyphs[i].id;\n                }\n                if (count === 1) {\n                    let result = input.map((g)=>g.id);\n                    let cache1 = this.inputCache[found];\n                    if (cache1) cache1.push(result);\n                    else this.inputCache[found] = [\n                        result\n                    ];\n                }\n            },\n            exit: ()=>{\n                ({ glyphs: this.glyphs , ligatureStack: this.ligatureStack  } = stack.pop());\n                input.pop();\n            }\n        });\n    }\n    constructor(font){\n        this.processIndicRearragement = this.processIndicRearragement.bind(this);\n        this.processContextualSubstitution = this.processContextualSubstitution.bind(this);\n        this.processLigature = this.processLigature.bind(this);\n        this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this);\n        this.processGlyphInsertion = this.processGlyphInsertion.bind(this);\n        this.font = font;\n        this.morx = font.morx;\n        this.inputCache = null;\n    }\n}\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $55f71433a605c87d$export$2e2bcd8739ae039.prototype, \"getStateMachine\", null);\n// swaps the glyphs in rangeA with those in rangeB\n// reverse the glyphs inside those ranges if specified\n// ranges are in [offset, length] format\nfunction $55f71433a605c87d$var$swap(glyphs, rangeA, rangeB, reverseA = false, reverseB = false) {\n    let end = glyphs.splice(rangeB[0] - (rangeB[1] - 1), rangeB[1]);\n    if (reverseB) end.reverse();\n    let start = glyphs.splice(rangeA[0], rangeA[1], ...end);\n    if (reverseA) start.reverse();\n    glyphs.splice(rangeB[0] - (rangeA[1] - 1), 0, ...start);\n    return glyphs;\n}\nfunction $55f71433a605c87d$var$reorderGlyphs(glyphs, verb, firstGlyph, lastGlyph) {\n    let length = lastGlyph - firstGlyph + 1;\n    switch(verb){\n        case 0:\n            return glyphs;\n        case 1:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                0\n            ]);\n        case 2:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 3:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 4:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                0\n            ]);\n        case 5:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                0\n            ], true, false);\n        case 6:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 7:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                0\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 8:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 9:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                1\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 10:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                1\n            ]);\n        case 11:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                1\n            ], true, false);\n        case 12:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ]);\n        case 13:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], true, false);\n        case 14:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], false, true);\n        case 15:\n            return $55f71433a605c87d$var$swap(glyphs, [\n                firstGlyph,\n                2\n            ], [\n                lastGlyph,\n                2\n            ], true, true);\n        default:\n            throw new Error(`Unknown verb: ${verb}`);\n    }\n}\n\n\nclass $ba6dd74203be8728$export$2e2bcd8739ae039 {\n    substitute(glyphRun) {\n        // AAT expects the glyphs to be in visual order prior to morx processing,\n        // so reverse the glyphs if the script is right-to-left.\n        if (glyphRun.direction === \"rtl\") glyphRun.glyphs.reverse();\n        this.morxProcessor.process(glyphRun.glyphs, $3b6302b64eccc32c$export$b813f7d2a1677c16(glyphRun.features));\n    }\n    getAvailableFeatures(script, language) {\n        return $3b6302b64eccc32c$export$bd6df347a4f391c4(this.morxProcessor.getSupportedFeatures());\n    }\n    stringsForGlyph(gid) {\n        let glyphStrings = this.morxProcessor.generateInputs(gid);\n        let result = new Set;\n        for (let glyphs of glyphStrings)this._addStrings(glyphs, 0, result, \"\");\n        return result;\n    }\n    _addStrings(glyphs, index, strings, string) {\n        let codePoints = this.font._cmapProcessor.codePointsForGlyph(glyphs[index]);\n        for (let codePoint of codePoints){\n            let s = string + String.fromCodePoint(codePoint);\n            if (index < glyphs.length - 1) this._addStrings(glyphs, index + 1, strings, s);\n            else strings.add(s);\n        }\n    }\n    constructor(font){\n        this.font = font;\n        this.morxProcessor = new (0, $55f71433a605c87d$export$2e2bcd8739ae039)(font);\n        this.fallbackPosition = false;\n    }\n}\n\n\n\nclass $94d7a73bd2edfc9a$export$2e2bcd8739ae039 {\n    /**\n   * Adds the given features to the last stage.\n   * Ignores features that have already been applied.\n   */ _addFeatures(features, global) {\n        let stageIndex = this.stages.length - 1;\n        let stage = this.stages[stageIndex];\n        for (let feature of features)if (this.allFeatures[feature] == null) {\n            stage.push(feature);\n            this.allFeatures[feature] = stageIndex;\n            if (global) this.globalFeatures[feature] = true;\n        }\n    }\n    /**\n   * Add features to the last stage\n   */ add(arg, global = true) {\n        if (this.stages.length === 0) this.stages.push([]);\n        if (typeof arg === \"string\") arg = [\n            arg\n        ];\n        if (Array.isArray(arg)) this._addFeatures(arg, global);\n        else if (typeof arg === \"object\") {\n            this._addFeatures(arg.global || [], true);\n            this._addFeatures(arg.local || [], false);\n        } else throw new Error(\"Unsupported argument to ShapingPlan#add\");\n    }\n    /**\n   * Add a new stage\n   */ addStage(arg, global) {\n        if (typeof arg === \"function\") this.stages.push(arg, []);\n        else {\n            this.stages.push([]);\n            this.add(arg, global);\n        }\n    }\n    setFeatureOverrides(features) {\n        if (Array.isArray(features)) this.add(features);\n        else if (typeof features === \"object\") for(let tag in features){\n            if (features[tag]) this.add(tag);\n            else if (this.allFeatures[tag] != null) {\n                let stage = this.stages[this.allFeatures[tag]];\n                stage.splice(stage.indexOf(tag), 1);\n                delete this.allFeatures[tag];\n                delete this.globalFeatures[tag];\n            }\n        }\n    }\n    /**\n   * Assigns the global features to the given glyphs\n   */ assignGlobalFeatures(glyphs) {\n        for (let glyph of glyphs)for(let feature in this.globalFeatures)glyph.features[feature] = true;\n    }\n    /**\n   * Executes the planned stages using the given OTProcessor\n   */ process(processor, glyphs, positions) {\n        for (let stage of this.stages){\n            if (typeof stage === \"function\") {\n                if (!positions) stage(this.font, glyphs, this);\n            } else if (stage.length > 0) processor.applyFeatures(stage, glyphs, positions);\n        }\n    }\n    constructor(font, script, direction){\n        this.font = font;\n        this.script = script;\n        this.direction = direction;\n        this.stages = [];\n        this.globalFeatures = {};\n        this.allFeatures = {};\n    }\n}\n\n\n\n\nconst $649970d87335b30f$var$VARIATION_FEATURES = [\n    \"rvrn\"\n];\nconst $649970d87335b30f$var$COMMON_FEATURES = [\n    \"ccmp\",\n    \"locl\",\n    \"rlig\",\n    \"mark\",\n    \"mkmk\"\n];\nconst $649970d87335b30f$var$FRACTIONAL_FEATURES = [\n    \"frac\",\n    \"numr\",\n    \"dnom\"\n];\nconst $649970d87335b30f$var$HORIZONTAL_FEATURES = [\n    \"calt\",\n    \"clig\",\n    \"liga\",\n    \"rclt\",\n    \"curs\",\n    \"kern\"\n];\nconst $649970d87335b30f$var$VERTICAL_FEATURES = [\n    \"vert\"\n];\nconst $649970d87335b30f$var$DIRECTIONAL_FEATURES = {\n    ltr: [\n        \"ltra\",\n        \"ltrm\"\n    ],\n    rtl: [\n        \"rtla\",\n        \"rtlm\"\n    ]\n};\nclass $649970d87335b30f$export$2e2bcd8739ae039 {\n    static plan(plan, glyphs, features) {\n        // Plan the features we want to apply\n        this.planPreprocessing(plan);\n        this.planFeatures(plan);\n        this.planPostprocessing(plan, features);\n        // Assign the global features to all the glyphs\n        plan.assignGlobalFeatures(glyphs);\n        // Assign local features to glyphs\n        this.assignFeatures(plan, glyphs);\n    }\n    static planPreprocessing(plan) {\n        plan.add({\n            global: [\n                ...$649970d87335b30f$var$VARIATION_FEATURES,\n                ...$649970d87335b30f$var$DIRECTIONAL_FEATURES[plan.direction]\n            ],\n            local: $649970d87335b30f$var$FRACTIONAL_FEATURES\n        });\n    }\n    static planFeatures(plan) {\n    // Do nothing by default. Let subclasses override this.\n    }\n    static planPostprocessing(plan, userFeatures) {\n        plan.add([\n            ...$649970d87335b30f$var$COMMON_FEATURES,\n            ...$649970d87335b30f$var$HORIZONTAL_FEATURES\n        ]);\n        plan.setFeatureOverrides(userFeatures);\n    }\n    static assignFeatures(plan, glyphs) {\n        // Enable contextual fractions\n        for(let i = 0; i < glyphs.length; i++){\n            let glyph = glyphs[i];\n            if (glyph.codePoints[0] === 0x2044) {\n                let start = i;\n                let end = i + 1;\n                // Apply numerator\n                while(start > 0 && (0, $6uUbQ$isDigit)(glyphs[start - 1].codePoints[0])){\n                    glyphs[start - 1].features.numr = true;\n                    glyphs[start - 1].features.frac = true;\n                    start--;\n                }\n                // Apply denominator\n                while(end < glyphs.length && (0, $6uUbQ$isDigit)(glyphs[end].codePoints[0])){\n                    glyphs[end].features.dnom = true;\n                    glyphs[end].features.frac = true;\n                    end++;\n                }\n                // Apply fraction slash\n                glyph.features.frac = true;\n                i = end - 1;\n            }\n        }\n    }\n}\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($649970d87335b30f$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"AFTER_GPOS\");\n\n\n\n\n\n\nconst $764eb544bbe1ccf0$var$trie = new (0, $6uUbQ$unicodetrie)((0, $12727730ddfc8bfe$export$94fdf11bafc8de6b)(\"ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=\"));\nconst $764eb544bbe1ccf0$var$FEATURES = [\n    \"isol\",\n    \"fina\",\n    \"fin2\",\n    \"fin3\",\n    \"medi\",\n    \"med2\",\n    \"init\"\n];\nconst $764eb544bbe1ccf0$var$ShapingClasses = {\n    Non_Joining: 0,\n    Left_Joining: 1,\n    Right_Joining: 2,\n    Dual_Joining: 3,\n    Join_Causing: 3,\n    ALAPH: 4,\n    \"DALATH RISH\": 5,\n    Transparent: 6\n};\nconst $764eb544bbe1ccf0$var$ISOL = \"isol\";\nconst $764eb544bbe1ccf0$var$FINA = \"fina\";\nconst $764eb544bbe1ccf0$var$FIN2 = \"fin2\";\nconst $764eb544bbe1ccf0$var$FIN3 = \"fin3\";\nconst $764eb544bbe1ccf0$var$MEDI = \"medi\";\nconst $764eb544bbe1ccf0$var$MED2 = \"med2\";\nconst $764eb544bbe1ccf0$var$INIT = \"init\";\nconst $764eb544bbe1ccf0$var$NONE = null;\n// Each entry is [prevAction, curAction, nextState]\nconst $764eb544bbe1ccf0$var$STATE_TABLE = [\n    //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH\n    // State 0: prev was U,  not willing to join.\n    [\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$NONE,\n            0\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            1\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            1\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            6\n        ]\n    ],\n    // State 1: prev was R or ISOL/ALAPH,  not willing to join.\n    [\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$NONE,\n            0\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            1\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$FIN2,\n            5\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            6\n        ]\n    ],\n    // State 2: prev was D/L in ISOL form,  willing to join.\n    [\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$NONE,\n            0\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$INIT,\n            $764eb544bbe1ccf0$var$FINA,\n            1\n        ],\n        [\n            $764eb544bbe1ccf0$var$INIT,\n            $764eb544bbe1ccf0$var$FINA,\n            3\n        ],\n        [\n            $764eb544bbe1ccf0$var$INIT,\n            $764eb544bbe1ccf0$var$FINA,\n            4\n        ],\n        [\n            $764eb544bbe1ccf0$var$INIT,\n            $764eb544bbe1ccf0$var$FINA,\n            6\n        ]\n    ],\n    // State 3: prev was D in FINA form,  willing to join.\n    [\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$NONE,\n            0\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$MEDI,\n            $764eb544bbe1ccf0$var$FINA,\n            1\n        ],\n        [\n            $764eb544bbe1ccf0$var$MEDI,\n            $764eb544bbe1ccf0$var$FINA,\n            3\n        ],\n        [\n            $764eb544bbe1ccf0$var$MEDI,\n            $764eb544bbe1ccf0$var$FINA,\n            4\n        ],\n        [\n            $764eb544bbe1ccf0$var$MEDI,\n            $764eb544bbe1ccf0$var$FINA,\n            6\n        ]\n    ],\n    // State 4: prev was FINA ALAPH,  not willing to join.\n    [\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$NONE,\n            0\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$MED2,\n            $764eb544bbe1ccf0$var$ISOL,\n            1\n        ],\n        [\n            $764eb544bbe1ccf0$var$MED2,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$MED2,\n            $764eb544bbe1ccf0$var$FIN2,\n            5\n        ],\n        [\n            $764eb544bbe1ccf0$var$MED2,\n            $764eb544bbe1ccf0$var$ISOL,\n            6\n        ]\n    ],\n    // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.\n    [\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$NONE,\n            0\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$ISOL,\n            $764eb544bbe1ccf0$var$ISOL,\n            1\n        ],\n        [\n            $764eb544bbe1ccf0$var$ISOL,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$ISOL,\n            $764eb544bbe1ccf0$var$FIN2,\n            5\n        ],\n        [\n            $764eb544bbe1ccf0$var$ISOL,\n            $764eb544bbe1ccf0$var$ISOL,\n            6\n        ]\n    ],\n    // State 6: prev was DALATH/RISH,  not willing to join.\n    [\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$NONE,\n            0\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            1\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            2\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$FIN3,\n            5\n        ],\n        [\n            $764eb544bbe1ccf0$var$NONE,\n            $764eb544bbe1ccf0$var$ISOL,\n            6\n        ]\n    ]\n];\nclass $764eb544bbe1ccf0$export$2e2bcd8739ae039 extends (0, $649970d87335b30f$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.add([\n            \"ccmp\",\n            \"locl\"\n        ]);\n        for(let i = 0; i < $764eb544bbe1ccf0$var$FEATURES.length; i++){\n            let feature = $764eb544bbe1ccf0$var$FEATURES[i];\n            plan.addStage(feature, false);\n        }\n        plan.addStage(\"mset\");\n    }\n    static assignFeatures(plan, glyphs) {\n        super.assignFeatures(plan, glyphs);\n        let prev = -1;\n        let state = 0;\n        let actions = [];\n        // Apply the state machine to map glyphs to features\n        for(let i = 0; i < glyphs.length; i++){\n            let curAction, prevAction;\n            var glyph = glyphs[i];\n            let type = $764eb544bbe1ccf0$var$getShapingClass(glyph.codePoints[0]);\n            if (type === $764eb544bbe1ccf0$var$ShapingClasses.Transparent) {\n                actions[i] = $764eb544bbe1ccf0$var$NONE;\n                continue;\n            }\n            [prevAction, curAction, state] = $764eb544bbe1ccf0$var$STATE_TABLE[state][type];\n            if (prevAction !== $764eb544bbe1ccf0$var$NONE && prev !== -1) actions[prev] = prevAction;\n            actions[i] = curAction;\n            prev = i;\n        }\n        // Apply the chosen features to their respective glyphs\n        for(let index = 0; index < glyphs.length; index++){\n            let feature;\n            var glyph = glyphs[index];\n            if (feature = actions[index]) glyph.features[feature] = true;\n        }\n    }\n}\nfunction $764eb544bbe1ccf0$var$getShapingClass(codePoint) {\n    let res = $764eb544bbe1ccf0$var$trie.get(codePoint);\n    if (res) return res - 1;\n    let category = (0, $6uUbQ$getCategory)(codePoint);\n    if (category === \"Mn\" || category === \"Me\" || category === \"Cf\") return $764eb544bbe1ccf0$var$ShapingClasses.Transparent;\n    return $764eb544bbe1ccf0$var$ShapingClasses.Non_Joining;\n}\n\n\n\n\n\nclass $85d408632270248b$export$2e2bcd8739ae039 {\n    reset(options = {}, index = 0) {\n        this.options = options;\n        this.flags = options.flags || {};\n        this.markAttachmentType = options.markAttachmentType || 0;\n        this.index = index;\n    }\n    get cur() {\n        return this.glyphs[this.index] || null;\n    }\n    shouldIgnore(glyph) {\n        return this.flags.ignoreMarks && glyph.isMark || this.flags.ignoreBaseGlyphs && glyph.isBase || this.flags.ignoreLigatures && glyph.isLigature || this.markAttachmentType && glyph.isMark && glyph.markAttachmentType !== this.markAttachmentType;\n    }\n    move(dir) {\n        this.index += dir;\n        while(0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index]))this.index += dir;\n        if (0 > this.index || this.index >= this.glyphs.length) return null;\n        return this.glyphs[this.index];\n    }\n    next() {\n        return this.move(1);\n    }\n    prev() {\n        return this.move(-1);\n    }\n    peek(count = 1) {\n        let idx = this.index;\n        let res = this.increment(count);\n        this.index = idx;\n        return res;\n    }\n    peekIndex(count = 1) {\n        let idx = this.index;\n        this.increment(count);\n        let res = this.index;\n        this.index = idx;\n        return res;\n    }\n    increment(count = 1) {\n        let dir = count < 0 ? -1 : 1;\n        count = Math.abs(count);\n        while(count--)this.move(dir);\n        return this.glyphs[this.index];\n    }\n    constructor(glyphs, options){\n        this.glyphs = glyphs;\n        this.reset(options);\n    }\n}\n\n\n\nconst $a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS = [\n    \"DFLT\",\n    \"dflt\",\n    \"latn\"\n];\nclass $a83b9c36aaa94fd3$export$2e2bcd8739ae039 {\n    findScript(script) {\n        if (this.table.scriptList == null) return null;\n        if (!Array.isArray(script)) script = [\n            script\n        ];\n        for (let s of script)for (let entry of this.table.scriptList){\n            if (entry.tag === s) return entry;\n        }\n        return null;\n    }\n    selectScript(script, language, direction) {\n        let changed = false;\n        let entry;\n        if (!this.script || script !== this.scriptTag) {\n            entry = this.findScript(script);\n            if (!entry) entry = this.findScript($a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS);\n            if (!entry) return this.scriptTag;\n            this.scriptTag = entry.tag;\n            this.script = entry.script;\n            this.language = null;\n            this.languageTag = null;\n            changed = true;\n        }\n        if (!direction || direction !== this.direction) this.direction = direction || $130d1a642ebcd2b7$export$9fddb9d0dd7d8a54(script);\n        if (language && language.length < 4) language += \" \".repeat(4 - language.length);\n        if (!language || language !== this.languageTag) {\n            this.language = null;\n            for (let lang of this.script.langSysRecords)if (lang.tag === language) {\n                this.language = lang.langSys;\n                this.languageTag = lang.tag;\n                break;\n            }\n            if (!this.language) {\n                this.language = this.script.defaultLangSys;\n                this.languageTag = null;\n            }\n            changed = true;\n        }\n        // Build a feature lookup table\n        if (changed) {\n            this.features = {};\n            if (this.language) for (let featureIndex of this.language.featureIndexes){\n                let record = this.table.featureList[featureIndex];\n                let substituteFeature = this.substituteFeatureForVariations(featureIndex);\n                this.features[record.tag] = substituteFeature || record.feature;\n            }\n        }\n        return this.scriptTag;\n    }\n    lookupsForFeatures(userFeatures = [], exclude) {\n        let lookups = [];\n        for (let tag of userFeatures){\n            let feature = this.features[tag];\n            if (!feature) continue;\n            for (let lookupIndex of feature.lookupListIndexes){\n                if (exclude && exclude.indexOf(lookupIndex) !== -1) continue;\n                lookups.push({\n                    feature: tag,\n                    index: lookupIndex,\n                    lookup: this.table.lookupList.get(lookupIndex)\n                });\n            }\n        }\n        lookups.sort((a, b)=>a.index - b.index);\n        return lookups;\n    }\n    substituteFeatureForVariations(featureIndex) {\n        if (this.variationsIndex === -1) return null;\n        let record = this.table.featureVariations.featureVariationRecords[this.variationsIndex];\n        let substitutions = record.featureTableSubstitution.substitutions;\n        for (let substitution of substitutions){\n            if (substitution.featureIndex === featureIndex) return substitution.alternateFeatureTable;\n        }\n        return null;\n    }\n    findVariationsIndex(coords) {\n        let variations = this.table.featureVariations;\n        if (!variations) return -1;\n        let records = variations.featureVariationRecords;\n        for(let i = 0; i < records.length; i++){\n            let conditions = records[i].conditionSet.conditionTable;\n            if (this.variationConditionsMatch(conditions, coords)) return i;\n        }\n        return -1;\n    }\n    variationConditionsMatch(conditions, coords) {\n        return conditions.every((condition)=>{\n            let coord = condition.axisIndex < coords.length ? coords[condition.axisIndex] : 0;\n            return condition.filterRangeMinValue <= coord && coord <= condition.filterRangeMaxValue;\n        });\n    }\n    applyFeatures(userFeatures, glyphs, advances) {\n        let lookups = this.lookupsForFeatures(userFeatures);\n        this.applyLookups(lookups, glyphs, advances);\n    }\n    applyLookups(lookups, glyphs, positions) {\n        this.glyphs = glyphs;\n        this.positions = positions;\n        this.glyphIterator = new (0, $85d408632270248b$export$2e2bcd8739ae039)(glyphs);\n        for (let { feature: feature , lookup: lookup  } of lookups){\n            this.currentFeature = feature;\n            this.glyphIterator.reset(lookup.flags);\n            while(this.glyphIterator.index < glyphs.length){\n                if (!(feature in this.glyphIterator.cur.features)) {\n                    this.glyphIterator.next();\n                    continue;\n                }\n                for (let table of lookup.subTables){\n                    let res = this.applyLookup(lookup.lookupType, table);\n                    if (res) break;\n                }\n                this.glyphIterator.next();\n            }\n        }\n    }\n    applyLookup(lookup, table) {\n        throw new Error(\"applyLookup must be implemented by subclasses\");\n    }\n    applyLookupList(lookupRecords) {\n        let options = this.glyphIterator.options;\n        let glyphIndex = this.glyphIterator.index;\n        for (let lookupRecord of lookupRecords){\n            // Reset flags and find glyph index for this lookup record\n            this.glyphIterator.reset(options, glyphIndex);\n            this.glyphIterator.increment(lookupRecord.sequenceIndex);\n            // Get the lookup and setup flags for subtables\n            let lookup = this.table.lookupList.get(lookupRecord.lookupListIndex);\n            this.glyphIterator.reset(lookup.flags, this.glyphIterator.index);\n            // Apply lookup subtables until one matches\n            for (let table of lookup.subTables){\n                if (this.applyLookup(lookup.lookupType, table)) break;\n            }\n        }\n        this.glyphIterator.reset(options, glyphIndex);\n        return true;\n    }\n    coverageIndex(coverage, glyph) {\n        if (glyph == null) glyph = this.glyphIterator.cur.id;\n        switch(coverage.version){\n            case 1:\n                return coverage.glyphs.indexOf(glyph);\n            case 2:\n                for (let range of coverage.rangeRecords){\n                    if (range.start <= glyph && glyph <= range.end) return range.startCoverageIndex + glyph - range.start;\n                }\n                break;\n        }\n        return -1;\n    }\n    match(sequenceIndex, sequence, fn, matched) {\n        let pos = this.glyphIterator.index;\n        let glyph = this.glyphIterator.increment(sequenceIndex);\n        let idx = 0;\n        while(idx < sequence.length && glyph && fn(sequence[idx], glyph)){\n            if (matched) matched.push(this.glyphIterator.index);\n            idx++;\n            glyph = this.glyphIterator.next();\n        }\n        this.glyphIterator.index = pos;\n        if (idx < sequence.length) return false;\n        return matched || true;\n    }\n    sequenceMatches(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (component, glyph)=>component === glyph.id);\n    }\n    sequenceMatchIndices(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (component, glyph)=>{\n            // If the current feature doesn't apply to this glyph,\n            if (!(this.currentFeature in glyph.features)) return false;\n            return component === glyph.id;\n        }, []);\n    }\n    coverageSequenceMatches(sequenceIndex, sequence) {\n        return this.match(sequenceIndex, sequence, (coverage, glyph)=>this.coverageIndex(coverage, glyph.id) >= 0);\n    }\n    getClassID(glyph, classDef) {\n        switch(classDef.version){\n            case 1:\n                let i = glyph - classDef.startGlyph;\n                if (i >= 0 && i < classDef.classValueArray.length) return classDef.classValueArray[i];\n                break;\n            case 2:\n                for (let range of classDef.classRangeRecord){\n                    if (range.start <= glyph && glyph <= range.end) return range.class;\n                }\n                break;\n        }\n        return 0;\n    }\n    classSequenceMatches(sequenceIndex, sequence, classDef) {\n        return this.match(sequenceIndex, sequence, (classID, glyph)=>classID === this.getClassID(glyph.id, classDef));\n    }\n    applyContext(table) {\n        let index, set;\n        switch(table.version){\n            case 1:\n                index = this.coverageIndex(table.coverage);\n                if (index === -1) return false;\n                set = table.ruleSets[index];\n                for (let rule of set){\n                    if (this.sequenceMatches(1, rule.input)) return this.applyLookupList(rule.lookupRecords);\n                }\n                break;\n            case 2:\n                if (this.coverageIndex(table.coverage) === -1) return false;\n                index = this.getClassID(this.glyphIterator.cur.id, table.classDef);\n                if (index === -1) return false;\n                set = table.classSet[index];\n                for (let rule1 of set){\n                    if (this.classSequenceMatches(1, rule1.classes, table.classDef)) return this.applyLookupList(rule1.lookupRecords);\n                }\n                break;\n            case 3:\n                if (this.coverageSequenceMatches(0, table.coverages)) return this.applyLookupList(table.lookupRecords);\n                break;\n        }\n        return false;\n    }\n    applyChainingContext(table) {\n        let index;\n        switch(table.version){\n            case 1:\n                index = this.coverageIndex(table.coverage);\n                if (index === -1) return false;\n                let set = table.chainRuleSets[index];\n                for (let rule of set){\n                    if (this.sequenceMatches(-rule.backtrack.length, rule.backtrack) && this.sequenceMatches(1, rule.input) && this.sequenceMatches(1 + rule.input.length, rule.lookahead)) return this.applyLookupList(rule.lookupRecords);\n                }\n                break;\n            case 2:\n                if (this.coverageIndex(table.coverage) === -1) return false;\n                index = this.getClassID(this.glyphIterator.cur.id, table.inputClassDef);\n                let rules = table.chainClassSet[index];\n                if (!rules) return false;\n                for (let rule2 of rules){\n                    if (this.classSequenceMatches(-rule2.backtrack.length, rule2.backtrack, table.backtrackClassDef) && this.classSequenceMatches(1, rule2.input, table.inputClassDef) && this.classSequenceMatches(1 + rule2.input.length, rule2.lookahead, table.lookaheadClassDef)) return this.applyLookupList(rule2.lookupRecords);\n                }\n                break;\n            case 3:\n                if (this.coverageSequenceMatches(-table.backtrackGlyphCount, table.backtrackCoverage) && this.coverageSequenceMatches(0, table.inputCoverage) && this.coverageSequenceMatches(table.inputGlyphCount, table.lookaheadCoverage)) return this.applyLookupList(table.lookupRecords);\n                break;\n        }\n        return false;\n    }\n    constructor(font, table){\n        this.font = font;\n        this.table = table;\n        this.script = null;\n        this.scriptTag = null;\n        this.language = null;\n        this.languageTag = null;\n        this.features = {};\n        this.lookups = {};\n        // Setup variation substitutions\n        this.variationsIndex = font._variationProcessor ? this.findVariationsIndex(font._variationProcessor.normalizedCoords) : -1;\n        // initialize to default script + language\n        this.selectScript();\n        // current context (set by applyFeatures)\n        this.glyphs = [];\n        this.positions = []; // only used by GPOS\n        this.ligatureID = 1;\n        this.currentFeature = null;\n    }\n}\n\n\nclass $10e7b257e1a9a756$export$2e2bcd8739ae039 {\n    get id() {\n        return this._id;\n    }\n    set id(id) {\n        this._id = id;\n        this.substituted = true;\n        let GDEF = this._font.GDEF;\n        if (GDEF && GDEF.glyphClassDef) {\n            // TODO: clean this up\n            let classID = (0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.glyphClassDef);\n            this.isBase = classID === 1;\n            this.isLigature = classID === 2;\n            this.isMark = classID === 3;\n            this.markAttachmentType = GDEF.markAttachClassDef ? (0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039).prototype.getClassID(id, GDEF.markAttachClassDef) : 0;\n        } else {\n            this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $6uUbQ$isMark));\n            this.isBase = !this.isMark;\n            this.isLigature = this.codePoints.length > 1;\n            this.markAttachmentType = 0;\n        }\n    }\n    copy() {\n        return new $10e7b257e1a9a756$export$2e2bcd8739ae039(this._font, this.id, this.codePoints, this.features);\n    }\n    constructor(font, id, codePoints = [], features){\n        this._font = font;\n        this.codePoints = codePoints;\n        this.id = id;\n        this.features = {};\n        if (Array.isArray(features)) for(let i = 0; i < features.length; i++){\n            let feature = features[i];\n            this.features[feature] = true;\n        }\n        else if (typeof features === \"object\") Object.assign(this.features, features);\n        this.ligatureID = null;\n        this.ligatureComponent = null;\n        this.isLigated = false;\n        this.cursiveAttachment = null;\n        this.markAttachment = null;\n        this.shaperInfo = null;\n        this.substituted = false;\n        this.isMultiplied = false;\n    }\n}\n\n\nclass $e1c6bbc8cb416f8c$export$2e2bcd8739ae039 extends (0, $649970d87335b30f$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.add([\n            \"ljmo\",\n            \"vjmo\",\n            \"tjmo\"\n        ], false);\n    }\n    static assignFeatures(plan, glyphs) {\n        let state = 0;\n        let i = 0;\n        while(i < glyphs.length){\n            let action;\n            let glyph = glyphs[i];\n            let code = glyph.codePoints[0];\n            let type = $e1c6bbc8cb416f8c$var$getType(code);\n            [action, state] = $e1c6bbc8cb416f8c$var$STATE_TABLE[state][type];\n            switch(action){\n                case $e1c6bbc8cb416f8c$var$DECOMPOSE:\n                    // Decompose the composed syllable if it is not supported by the font.\n                    if (!plan.font.hasGlyphForCodePoint(code)) i = $e1c6bbc8cb416f8c$var$decompose(glyphs, i, plan.font);\n                    break;\n                case $e1c6bbc8cb416f8c$var$COMPOSE:\n                    // Found a decomposed syllable. Try to compose if supported by the font.\n                    i = $e1c6bbc8cb416f8c$var$compose(glyphs, i, plan.font);\n                    break;\n                case $e1c6bbc8cb416f8c$var$TONE_MARK:\n                    // Got a valid syllable, followed by a tone mark. Move the tone mark to the beginning of the syllable.\n                    $e1c6bbc8cb416f8c$var$reorderToneMark(glyphs, i, plan.font);\n                    break;\n                case $e1c6bbc8cb416f8c$var$INVALID:\n                    // Tone mark has no valid syllable to attach to, so insert a dotted circle\n                    i = $e1c6bbc8cb416f8c$var$insertDottedCircle(glyphs, i, plan.font);\n                    break;\n            }\n            i++;\n        }\n    }\n}\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($e1c6bbc8cb416f8c$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nconst $e1c6bbc8cb416f8c$var$HANGUL_BASE = 0xac00;\nconst $e1c6bbc8cb416f8c$var$HANGUL_END = 0xd7a4;\nconst $e1c6bbc8cb416f8c$var$HANGUL_COUNT = $e1c6bbc8cb416f8c$var$HANGUL_END - $e1c6bbc8cb416f8c$var$HANGUL_BASE + 1;\nconst $e1c6bbc8cb416f8c$var$L_BASE = 0x1100; // lead\nconst $e1c6bbc8cb416f8c$var$V_BASE = 0x1161; // vowel\nconst $e1c6bbc8cb416f8c$var$T_BASE = 0x11a7; // trail\nconst $e1c6bbc8cb416f8c$var$L_COUNT = 19;\nconst $e1c6bbc8cb416f8c$var$V_COUNT = 21;\nconst $e1c6bbc8cb416f8c$var$T_COUNT = 28;\nconst $e1c6bbc8cb416f8c$var$L_END = $e1c6bbc8cb416f8c$var$L_BASE + $e1c6bbc8cb416f8c$var$L_COUNT - 1;\nconst $e1c6bbc8cb416f8c$var$V_END = $e1c6bbc8cb416f8c$var$V_BASE + $e1c6bbc8cb416f8c$var$V_COUNT - 1;\nconst $e1c6bbc8cb416f8c$var$T_END = $e1c6bbc8cb416f8c$var$T_BASE + $e1c6bbc8cb416f8c$var$T_COUNT - 1;\nconst $e1c6bbc8cb416f8c$var$DOTTED_CIRCLE = 0x25cc;\nconst $e1c6bbc8cb416f8c$var$isL = (code)=>0x1100 <= code && code <= 0x115f || 0xa960 <= code && code <= 0xa97c;\nconst $e1c6bbc8cb416f8c$var$isV = (code)=>0x1160 <= code && code <= 0x11a7 || 0xd7b0 <= code && code <= 0xd7c6;\nconst $e1c6bbc8cb416f8c$var$isT = (code)=>0x11a8 <= code && code <= 0x11ff || 0xd7cb <= code && code <= 0xd7fb;\nconst $e1c6bbc8cb416f8c$var$isTone = (code)=>0x302e <= code && code <= 0x302f;\nconst $e1c6bbc8cb416f8c$var$isLVT = (code)=>$e1c6bbc8cb416f8c$var$HANGUL_BASE <= code && code <= $e1c6bbc8cb416f8c$var$HANGUL_END;\nconst $e1c6bbc8cb416f8c$var$isLV = (code)=>code - $e1c6bbc8cb416f8c$var$HANGUL_BASE < $e1c6bbc8cb416f8c$var$HANGUL_COUNT && (code - $e1c6bbc8cb416f8c$var$HANGUL_BASE) % $e1c6bbc8cb416f8c$var$T_COUNT === 0;\nconst $e1c6bbc8cb416f8c$var$isCombiningL = (code)=>$e1c6bbc8cb416f8c$var$L_BASE <= code && code <= $e1c6bbc8cb416f8c$var$L_END;\nconst $e1c6bbc8cb416f8c$var$isCombiningV = (code)=>$e1c6bbc8cb416f8c$var$V_BASE <= code && code <= $e1c6bbc8cb416f8c$var$V_END;\nconst $e1c6bbc8cb416f8c$var$isCombiningT = (code)=>$e1c6bbc8cb416f8c$var$T_BASE + 1 && 1 <= code && code <= $e1c6bbc8cb416f8c$var$T_END;\n// Character categories\nconst $e1c6bbc8cb416f8c$var$X = 0; // Other character\nconst $e1c6bbc8cb416f8c$var$L = 1; // Leading consonant\nconst $e1c6bbc8cb416f8c$var$V = 2; // Medial vowel\nconst $e1c6bbc8cb416f8c$var$T = 3; // Trailing consonant\nconst $e1c6bbc8cb416f8c$var$LV = 4; // Composed <LV> syllable\nconst $e1c6bbc8cb416f8c$var$LVT = 5; // Composed <LVT> syllable\nconst $e1c6bbc8cb416f8c$var$M = 6; // Tone mark\n// This function classifies a character using the above categories.\nfunction $e1c6bbc8cb416f8c$var$getType(code) {\n    if ($e1c6bbc8cb416f8c$var$isL(code)) return $e1c6bbc8cb416f8c$var$L;\n    if ($e1c6bbc8cb416f8c$var$isV(code)) return $e1c6bbc8cb416f8c$var$V;\n    if ($e1c6bbc8cb416f8c$var$isT(code)) return $e1c6bbc8cb416f8c$var$T;\n    if ($e1c6bbc8cb416f8c$var$isLV(code)) return $e1c6bbc8cb416f8c$var$LV;\n    if ($e1c6bbc8cb416f8c$var$isLVT(code)) return $e1c6bbc8cb416f8c$var$LVT;\n    if ($e1c6bbc8cb416f8c$var$isTone(code)) return $e1c6bbc8cb416f8c$var$M;\n    return $e1c6bbc8cb416f8c$var$X;\n}\n// State machine actions\nconst $e1c6bbc8cb416f8c$var$NO_ACTION = 0;\nconst $e1c6bbc8cb416f8c$var$DECOMPOSE = 1;\nconst $e1c6bbc8cb416f8c$var$COMPOSE = 2;\nconst $e1c6bbc8cb416f8c$var$TONE_MARK = 4;\nconst $e1c6bbc8cb416f8c$var$INVALID = 5;\n// Build a state machine that accepts valid syllables, and applies actions along the way.\n// The logic this is implementing is documented at the top of the file.\nconst $e1c6bbc8cb416f8c$var$STATE_TABLE = [\n    //       X                 L                 V                T                  LV                LVT               M\n    // State 0: start state\n    [\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            0\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            1\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            0\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            0\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$DECOMPOSE,\n            2\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$DECOMPOSE,\n            3\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$INVALID,\n            0\n        ]\n    ],\n    // State 1: <L>\n    [\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            0\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            1\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$COMPOSE,\n            2\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            0\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$DECOMPOSE,\n            2\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$DECOMPOSE,\n            3\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$INVALID,\n            0\n        ]\n    ],\n    // State 2: <L,V> or <LV>\n    [\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            0\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            1\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            0\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$COMPOSE,\n            3\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$DECOMPOSE,\n            2\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$DECOMPOSE,\n            3\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$TONE_MARK,\n            0\n        ]\n    ],\n    // State 3: <L,V,T> or <LVT>\n    [\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            0\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            1\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            0\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$NO_ACTION,\n            0\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$DECOMPOSE,\n            2\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$DECOMPOSE,\n            3\n        ],\n        [\n            $e1c6bbc8cb416f8c$var$TONE_MARK,\n            0\n        ]\n    ]\n];\nfunction $e1c6bbc8cb416f8c$var$getGlyph(font, code, features) {\n    return new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, font.glyphForCodePoint(code).id, [\n        code\n    ], features);\n}\nfunction $e1c6bbc8cb416f8c$var$decompose(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyph.codePoints[0];\n    let s = code - $e1c6bbc8cb416f8c$var$HANGUL_BASE;\n    let t = $e1c6bbc8cb416f8c$var$T_BASE + s % $e1c6bbc8cb416f8c$var$T_COUNT;\n    s = s / $e1c6bbc8cb416f8c$var$T_COUNT | 0;\n    let l = $e1c6bbc8cb416f8c$var$L_BASE + s / $e1c6bbc8cb416f8c$var$V_COUNT | 0;\n    let v = $e1c6bbc8cb416f8c$var$V_BASE + s % $e1c6bbc8cb416f8c$var$V_COUNT;\n    // Don't decompose if all of the components are not available\n    if (!font.hasGlyphForCodePoint(l) || !font.hasGlyphForCodePoint(v) || t !== $e1c6bbc8cb416f8c$var$T_BASE && !font.hasGlyphForCodePoint(t)) return i;\n    // Replace the current glyph with decomposed L, V, and T glyphs,\n    // and apply the proper OpenType features to each component.\n    let ljmo = $e1c6bbc8cb416f8c$var$getGlyph(font, l, glyph.features);\n    ljmo.features.ljmo = true;\n    let vjmo = $e1c6bbc8cb416f8c$var$getGlyph(font, v, glyph.features);\n    vjmo.features.vjmo = true;\n    let insert = [\n        ljmo,\n        vjmo\n    ];\n    if (t > $e1c6bbc8cb416f8c$var$T_BASE) {\n        let tjmo = $e1c6bbc8cb416f8c$var$getGlyph(font, t, glyph.features);\n        tjmo.features.tjmo = true;\n        insert.push(tjmo);\n    }\n    glyphs.splice(i, 1, ...insert);\n    return i + insert.length - 1;\n}\nfunction $e1c6bbc8cb416f8c$var$compose(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    let type = $e1c6bbc8cb416f8c$var$getType(code);\n    let prev = glyphs[i - 1].codePoints[0];\n    let prevType = $e1c6bbc8cb416f8c$var$getType(prev);\n    // Figure out what type of syllable we're dealing with\n    let lv, ljmo, vjmo, tjmo;\n    if (prevType === $e1c6bbc8cb416f8c$var$LV && type === $e1c6bbc8cb416f8c$var$T) {\n        // <LV,T>\n        lv = prev;\n        tjmo = glyph;\n    } else {\n        if (type === $e1c6bbc8cb416f8c$var$V) {\n            // <L,V>\n            ljmo = glyphs[i - 1];\n            vjmo = glyph;\n        } else {\n            // <L,V,T>\n            ljmo = glyphs[i - 2];\n            vjmo = glyphs[i - 1];\n            tjmo = glyph;\n        }\n        let l = ljmo.codePoints[0];\n        let v = vjmo.codePoints[0];\n        // Make sure L and V are combining characters\n        if ($e1c6bbc8cb416f8c$var$isCombiningL(l) && $e1c6bbc8cb416f8c$var$isCombiningV(v)) lv = $e1c6bbc8cb416f8c$var$HANGUL_BASE + ((l - $e1c6bbc8cb416f8c$var$L_BASE) * $e1c6bbc8cb416f8c$var$V_COUNT + (v - $e1c6bbc8cb416f8c$var$V_BASE)) * $e1c6bbc8cb416f8c$var$T_COUNT;\n    }\n    let t = tjmo && tjmo.codePoints[0] || $e1c6bbc8cb416f8c$var$T_BASE;\n    if (lv != null && (t === $e1c6bbc8cb416f8c$var$T_BASE || $e1c6bbc8cb416f8c$var$isCombiningT(t))) {\n        let s = lv + (t - $e1c6bbc8cb416f8c$var$T_BASE);\n        // Replace with a composed glyph if supported by the font,\n        // otherwise apply the proper OpenType features to each component.\n        if (font.hasGlyphForCodePoint(s)) {\n            let del = prevType === $e1c6bbc8cb416f8c$var$V ? 3 : 2;\n            glyphs.splice(i - del + 1, del, $e1c6bbc8cb416f8c$var$getGlyph(font, s, glyph.features));\n            return i - del + 1;\n        }\n    }\n    // Didn't compose (either a non-combining component or unsupported by font).\n    if (ljmo) ljmo.features.ljmo = true;\n    if (vjmo) vjmo.features.vjmo = true;\n    if (tjmo) tjmo.features.tjmo = true;\n    if (prevType === $e1c6bbc8cb416f8c$var$LV) {\n        // Sequence was originally <L,V>, which got combined earlier.\n        // Either the T was non-combining, or the LVT glyph wasn't supported.\n        // Decompose the glyph again and apply OT features.\n        $e1c6bbc8cb416f8c$var$decompose(glyphs, i - 1, font);\n        return i + 1;\n    }\n    return i;\n}\nfunction $e1c6bbc8cb416f8c$var$getLength(code) {\n    switch($e1c6bbc8cb416f8c$var$getType(code)){\n        case $e1c6bbc8cb416f8c$var$LV:\n        case $e1c6bbc8cb416f8c$var$LVT:\n            return 1;\n        case $e1c6bbc8cb416f8c$var$V:\n            return 2;\n        case $e1c6bbc8cb416f8c$var$T:\n            return 3;\n    }\n}\nfunction $e1c6bbc8cb416f8c$var$reorderToneMark(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    // Move tone mark to the beginning of the previous syllable, unless it is zero width\n    if (font.glyphForCodePoint(code).advanceWidth === 0) return;\n    let prev = glyphs[i - 1].codePoints[0];\n    let len = $e1c6bbc8cb416f8c$var$getLength(prev);\n    glyphs.splice(i, 1);\n    return glyphs.splice(i - len, 0, glyph);\n}\nfunction $e1c6bbc8cb416f8c$var$insertDottedCircle(glyphs, i, font) {\n    let glyph = glyphs[i];\n    let code = glyphs[i].codePoints[0];\n    if (font.hasGlyphForCodePoint($e1c6bbc8cb416f8c$var$DOTTED_CIRCLE)) {\n        let dottedCircle = $e1c6bbc8cb416f8c$var$getGlyph(font, $e1c6bbc8cb416f8c$var$DOTTED_CIRCLE, glyph.features);\n        // If the tone mark is zero width, insert the dotted circle before, otherwise after\n        let idx = font.glyphForCodePoint(code).advanceWidth === 0 ? i : i + 1;\n        glyphs.splice(idx, 0, dottedCircle);\n        i++;\n    }\n    return i;\n}\n\n\n\n\n\n\n\n\n\nvar $4b0735ca6c692ea5$exports = {};\n$4b0735ca6c692ea5$exports = JSON.parse('{\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],\"accepting\":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"symbol_cluster\"],[],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"broken_cluster\"],[\"symbol_cluster\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[\"standalone_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[],[],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[],[],[\"consonant_syllable\",\"broken_cluster\"],[\"consonant_syllable\",\"broken_cluster\"],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[],[],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"consonant_syllable\"],[],[\"consonant_syllable\"],[\"consonant_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"vowel_syllable\"],[],[\"vowel_syllable\"],[\"vowel_syllable\"],[\"broken_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"standalone_cluster\"],[\"standalone_cluster\"],[],[\"consonant_syllable\"],[\"vowel_syllable\"],[\"standalone_cluster\"]]}');\n\n\nvar $aa333a9607471296$exports = {};\n$aa333a9607471296$exports = JSON.parse('{\"categories\":[\"O\",\"IND\",\"S\",\"GB\",\"B\",\"FM\",\"CGJ\",\"VMAbv\",\"VMPst\",\"VAbv\",\"VPst\",\"CMBlw\",\"VPre\",\"VBlw\",\"H\",\"VMBlw\",\"CMAbv\",\"MBlw\",\"CS\",\"R\",\"SUB\",\"MPst\",\"MPre\",\"FAbv\",\"FPst\",\"FBlw\",\"SMAbv\",\"SMBlw\",\"VMPre\",\"ZWNJ\",\"ZWJ\",\"WJ\",\"VS\",\"N\",\"HN\",\"MAbv\"],\"decompositions\":{\"2507\":[2503,2494],\"2508\":[2503,2519],\"2888\":[2887,2902],\"2891\":[2887,2878],\"2892\":[2887,2903],\"3018\":[3014,3006],\"3019\":[3015,3006],\"3020\":[3014,3031],\"3144\":[3142,3158],\"3264\":[3263,3285],\"3271\":[3270,3285],\"3272\":[3270,3286],\"3274\":[3270,3266],\"3275\":[3270,3266,3285],\"3402\":[3398,3390],\"3403\":[3399,3390],\"3404\":[3398,3415],\"3546\":[3545,3530],\"3548\":[3545,3535],\"3549\":[3545,3535,3530],\"3550\":[3545,3551],\"3635\":[3661,3634],\"3763\":[3789,3762],\"3955\":[3953,3954],\"3957\":[3953,3956],\"3958\":[4018,3968],\"3959\":[4018,3953,3968],\"3960\":[4019,3968],\"3961\":[4019,3953,3968],\"3969\":[3953,3968],\"6971\":[6970,6965],\"6973\":[6972,6965],\"6976\":[6974,6965],\"6977\":[6975,6965],\"6979\":[6978,6965],\"69934\":[69937,69927],\"69935\":[69938,69927],\"70475\":[70471,70462],\"70476\":[70471,70487],\"70843\":[70841,70842],\"70844\":[70841,70832],\"70846\":[70841,70845],\"71098\":[71096,71087],\"71099\":[71097,71087]},\"stateTable\":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],\"accepting\":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],\"tags\":[[],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"broken_cluster\"],[\"independent_cluster\"],[\"symbol_cluster\"],[\"symbol_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"virama_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"broken_cluster\"],[\"broken_cluster\"],[\"numeral_cluster\"],[\"number_joiner_terminated_cluster\"],[\"standard_cluster\"],[\"standard_cluster\"],[\"numeral_cluster\"]]}');\n\n\nconst $90a9d3398ee54fe5$export$a513ea61a7bee91c = {\n    X: 1,\n    C: 2,\n    V: 4,\n    N: 8,\n    H: 16,\n    ZWNJ: 32,\n    ZWJ: 64,\n    M: 128,\n    SM: 256,\n    VD: 512,\n    A: 1024,\n    Placeholder: 2048,\n    Dotted_Circle: 4096,\n    RS: 8192,\n    Coeng: 16384,\n    Repha: 32768,\n    Ra: 65536,\n    CM: 131072,\n    Symbol: 262144 // Avagraha, etc that take marks (SM,A,VD).\n};\nconst $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0 = {\n    Start: 1,\n    Ra_To_Become_Reph: 2,\n    Pre_M: 4,\n    Pre_C: 8,\n    Base_C: 16,\n    After_Main: 32,\n    Above_C: 64,\n    Before_Sub: 128,\n    Below_C: 256,\n    After_Sub: 512,\n    Before_Post: 1024,\n    Post_C: 2048,\n    After_Post: 4096,\n    Final_C: 8192,\n    SMVD: 16384,\n    End: 32768\n};\nconst $90a9d3398ee54fe5$export$8519deaa7de2b07 = $90a9d3398ee54fe5$export$a513ea61a7bee91c.C | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Ra | $90a9d3398ee54fe5$export$a513ea61a7bee91c.CM | $90a9d3398ee54fe5$export$a513ea61a7bee91c.V | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Placeholder | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Dotted_Circle;\nconst $90a9d3398ee54fe5$export$bbcd928767338e0d = $90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWJ | $90a9d3398ee54fe5$export$a513ea61a7bee91c.ZWNJ;\nconst $90a9d3398ee54fe5$export$ca9599b2a300afc = $90a9d3398ee54fe5$export$a513ea61a7bee91c.H | $90a9d3398ee54fe5$export$a513ea61a7bee91c.Coeng;\nconst $90a9d3398ee54fe5$export$e99d119da76a0fc5 = {\n    Default: {\n        hasOldSpec: false,\n        virama: 0,\n        basePos: \"Last\",\n        rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Devanagari: {\n        hasOldSpec: true,\n        virama: 0x094D,\n        basePos: \"Last\",\n        rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Bengali: {\n        hasOldSpec: true,\n        virama: 0x09CD,\n        basePos: \"Last\",\n        rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Sub,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Gurmukhi: {\n        hasOldSpec: true,\n        virama: 0x0A4D,\n        basePos: \"Last\",\n        rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Sub,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Gujarati: {\n        hasOldSpec: true,\n        virama: 0x0ACD,\n        basePos: \"Last\",\n        rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Before_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Oriya: {\n        hasOldSpec: true,\n        virama: 0x0B4D,\n        basePos: \"Last\",\n        rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Tamil: {\n        hasOldSpec: true,\n        virama: 0x0BCD,\n        basePos: \"Last\",\n        rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    Telugu: {\n        hasOldSpec: true,\n        virama: 0x0C4D,\n        basePos: \"Last\",\n        rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Explicit\",\n        blwfMode: \"Post_Only\"\n    },\n    Kannada: {\n        hasOldSpec: true,\n        virama: 0x0CCD,\n        basePos: \"Last\",\n        rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Post,\n        rephMode: \"Implicit\",\n        blwfMode: \"Post_Only\"\n    },\n    Malayalam: {\n        hasOldSpec: true,\n        virama: 0x0D4D,\n        basePos: \"Last\",\n        rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.After_Main,\n        rephMode: \"Log_Repha\",\n        blwfMode: \"Pre_And_Post\"\n    },\n    // Handled by UniversalShaper\n    // Sinhala: {\n    //   hasOldSpec: false,\n    //   virama: 0x0DCA,\n    //   basePos: 'Last_Sinhala',\n    //   rephPos: POSITIONS.After_Main,\n    //   rephMode: 'Explicit',\n    //   blwfMode: 'Pre_And_Post'\n    // },\n    Khmer: {\n        hasOldSpec: false,\n        virama: 0x17D2,\n        basePos: \"First\",\n        rephPos: $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0.Ra_To_Become_Reph,\n        rephMode: \"Vis_Repha\",\n        blwfMode: \"Pre_And_Post\"\n    }\n};\nconst $90a9d3398ee54fe5$export$f647c9cfdd77d95a = {\n    // Khmer\n    0x17BE: [\n        0x17C1,\n        0x17BE\n    ],\n    0x17BF: [\n        0x17C1,\n        0x17BF\n    ],\n    0x17C0: [\n        0x17C1,\n        0x17C0\n    ],\n    0x17C4: [\n        0x17C1,\n        0x17C4\n    ],\n    0x17C5: [\n        0x17C1,\n        0x17C5\n    ]\n};\n\n\n\nconst { decompositions: $7826f90f6f0cecc9$var$decompositions  } = (0, (/*@__PURE__*/$parcel$interopDefault($aa333a9607471296$exports)));\nconst $7826f90f6f0cecc9$var$trie = new (0, $6uUbQ$unicodetrie)((0, $12727730ddfc8bfe$export$94fdf11bafc8de6b)(\"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\"));\nconst $7826f90f6f0cecc9$var$stateMachine = new (0, $6uUbQ$dfa)((0, (/*@__PURE__*/$parcel$interopDefault($4b0735ca6c692ea5$exports))));\nclass $7826f90f6f0cecc9$export$2e2bcd8739ae039 extends (0, $649970d87335b30f$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.addStage($7826f90f6f0cecc9$var$setupSyllables);\n        plan.addStage([\n            \"locl\",\n            \"ccmp\"\n        ]);\n        plan.addStage($7826f90f6f0cecc9$var$initialReordering);\n        plan.addStage(\"nukt\");\n        plan.addStage(\"akhn\");\n        plan.addStage(\"rphf\", false);\n        plan.addStage(\"rkrf\");\n        plan.addStage(\"pref\", false);\n        plan.addStage(\"blwf\", false);\n        plan.addStage(\"abvf\", false);\n        plan.addStage(\"half\", false);\n        plan.addStage(\"pstf\", false);\n        plan.addStage(\"vatu\");\n        plan.addStage(\"cjct\");\n        plan.addStage(\"cfar\", false);\n        plan.addStage($7826f90f6f0cecc9$var$finalReordering);\n        plan.addStage({\n            local: [\n                \"init\"\n            ],\n            global: [\n                \"pres\",\n                \"abvs\",\n                \"blws\",\n                \"psts\",\n                \"haln\",\n                \"dist\",\n                \"abvm\",\n                \"blwm\",\n                \"calt\",\n                \"clig\"\n            ]\n        });\n        // Setup the indic config for the selected script\n        plan.unicodeScript = $130d1a642ebcd2b7$export$ce50e82f12a827a4(plan.script);\n        plan.indicConfig = (0, $90a9d3398ee54fe5$export$e99d119da76a0fc5)[plan.unicodeScript] || (0, $90a9d3398ee54fe5$export$e99d119da76a0fc5).Default;\n        plan.isOldSpec = plan.indicConfig.hasOldSpec && plan.script[plan.script.length - 1] !== \"2\";\n    // TODO: turn off kern (Khmer) and liga features.\n    }\n    static assignFeatures(plan, glyphs) {\n        // Decompose split matras\n        // TODO: do this in a more general unicode normalizer\n        for(let i = glyphs.length - 1; i >= 0; i--){\n            let codepoint = glyphs[i].codePoints[0];\n            let d = (0, $90a9d3398ee54fe5$export$f647c9cfdd77d95a)[codepoint] || $7826f90f6f0cecc9$var$decompositions[codepoint];\n            if (d) {\n                let decomposed = d.map((c)=>{\n                    let g = plan.font.glyphForCodePoint(c);\n                    return new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(plan.font, g.id, [\n                        c\n                    ], glyphs[i].features);\n                });\n                glyphs.splice(i, 1, ...decomposed);\n            }\n        }\n    }\n}\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($7826f90f6f0cecc9$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"NONE\");\nfunction $7826f90f6f0cecc9$var$indicCategory(glyph) {\n    return $7826f90f6f0cecc9$var$trie.get(glyph.codePoints[0]) >> 8;\n}\nfunction $7826f90f6f0cecc9$var$indicPosition(glyph) {\n    return 1 << ($7826f90f6f0cecc9$var$trie.get(glyph.codePoints[0]) & 0xff);\n}\nclass $7826f90f6f0cecc9$var$IndicInfo {\n    constructor(category, position, syllableType, syllable){\n        this.category = category;\n        this.position = position;\n        this.syllableType = syllableType;\n        this.syllable = syllable;\n    }\n}\nfunction $7826f90f6f0cecc9$var$setupSyllables(font, glyphs) {\n    let syllable = 0;\n    let last = 0;\n    for (let [start, end, tags] of $7826f90f6f0cecc9$var$stateMachine.match(glyphs.map($7826f90f6f0cecc9$var$indicCategory))){\n        if (start > last) {\n            ++syllable;\n            for(let i = last; i < start; i++)glyphs[i].shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).X, (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n        }\n        ++syllable;\n        // Create shaper info\n        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo(1 << $7826f90f6f0cecc9$var$indicCategory(glyphs[i]), $7826f90f6f0cecc9$var$indicPosition(glyphs[i]), tags[0], syllable);\n        last = end + 1;\n    }\n    if (last < glyphs.length) {\n        ++syllable;\n        for(let i = last; i < glyphs.length; i++)glyphs[i].shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).X, (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).End, \"non_indic_cluster\", syllable);\n    }\n}\nfunction $7826f90f6f0cecc9$var$isConsonant(glyph) {\n    return glyph.shaperInfo.category & (0, $90a9d3398ee54fe5$export$8519deaa7de2b07);\n}\nfunction $7826f90f6f0cecc9$var$isJoiner(glyph) {\n    return glyph.shaperInfo.category & (0, $90a9d3398ee54fe5$export$bbcd928767338e0d);\n}\nfunction $7826f90f6f0cecc9$var$isHalantOrCoeng(glyph) {\n    return glyph.shaperInfo.category & (0, $90a9d3398ee54fe5$export$ca9599b2a300afc);\n}\nfunction $7826f90f6f0cecc9$var$wouldSubstitute(glyphs, feature) {\n    for (let glyph of glyphs)glyph.features = {\n        [feature]: true\n    };\n    let GSUB = glyphs[0]._font._layoutEngine.engine.GSUBProcessor;\n    GSUB.applyFeatures([\n        feature\n    ], glyphs);\n    return glyphs.length === 1;\n}\nfunction $7826f90f6f0cecc9$var$consonantPosition(font, consonant, virama) {\n    let glyphs = [\n        virama,\n        consonant,\n        virama\n    ];\n    if ($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0, 2), \"blwf\") || $7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1, 3), \"blwf\")) return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C;\n    else if ($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0, 2), \"pstf\") || $7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1, 3), \"pstf\")) return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C;\n    else if ($7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(0, 2), \"pref\") || $7826f90f6f0cecc9$var$wouldSubstitute(glyphs.slice(1, 3), \"pref\")) return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C;\n    return (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C;\n}\nfunction $7826f90f6f0cecc9$var$initialReordering(font, glyphs, plan) {\n    let indicConfig = plan.indicConfig;\n    let features = font._layoutEngine.engine.GSUBProcessor.features;\n    let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n    let virama = font.glyphForCodePoint(indicConfig.virama).id;\n    if (virama) {\n        let info = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, virama, [\n            indicConfig.virama\n        ]);\n        for(let i = 0; i < glyphs.length; i++)if (glyphs[i].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) glyphs[i].shaperInfo.position = $7826f90f6f0cecc9$var$consonantPosition(font, glyphs[i].copy(), info);\n    }\n    for(let start = 0, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, start)){\n        let { category: category , syllableType: syllableType  } = glyphs[start].shaperInfo;\n        if (syllableType === \"symbol_cluster\" || syllableType === \"non_indic_cluster\") continue;\n        if (syllableType === \"broken_cluster\" && dottedCircle) {\n            let g = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, dottedCircle, [\n                0x25cc\n            ]);\n            g.shaperInfo = new $7826f90f6f0cecc9$var$IndicInfo(1 << $7826f90f6f0cecc9$var$indicCategory(g), $7826f90f6f0cecc9$var$indicPosition(g), glyphs[start].shaperInfo.syllableType, glyphs[start].shaperInfo.syllable);\n            // Insert after possible Repha.\n            let i = start;\n            while(i < end && glyphs[i].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha)i++;\n            glyphs.splice(i++, 0, g);\n            end++;\n        }\n        // 1. Find base consonant:\n        //\n        // The shaping engine finds the base consonant of the syllable, using the\n        // following algorithm: starting from the end of the syllable, move backwards\n        // until a consonant is found that does not have a below-base or post-base\n        // form (post-base forms have to follow below-base forms), or that is not a\n        // pre-base reordering Ra, or arrive at the first consonant. The consonant\n        // stopped at will be the base.\n        let base = end;\n        let limit = start;\n        let hasReph = false;\n        // If the syllable starts with Ra + Halant (in a script that has Reph)\n        // and has more than one consonant, Ra is excluded from candidates for\n        // base consonants.\n        if (indicConfig.rephPos !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && features.rphf && start + 3 <= end && (indicConfig.rephMode === \"Implicit\" && !$7826f90f6f0cecc9$var$isJoiner(glyphs[start + 2]) || indicConfig.rephMode === \"Explicit\" && glyphs[start + 2].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ)) {\n            // See if it matches the 'rphf' feature.\n            let g = [\n                glyphs[start].copy(),\n                glyphs[start + 1].copy(),\n                glyphs[start + 2].copy()\n            ];\n            if ($7826f90f6f0cecc9$var$wouldSubstitute(g.slice(0, 2), \"rphf\") || indicConfig.rephMode === \"Explicit\" && $7826f90f6f0cecc9$var$wouldSubstitute(g, \"rphf\")) {\n                limit += 2;\n                while(limit < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[limit]))limit++;\n                base = start;\n                hasReph = true;\n            }\n        } else if (indicConfig.rephMode === \"Log_Repha\" && glyphs[start].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha) {\n            limit++;\n            while(limit < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[limit]))limit++;\n            base = start;\n            hasReph = true;\n        }\n        switch(indicConfig.basePos){\n            case \"Last\":\n                {\n                    // starting from the end of the syllable, move backwards\n                    let i = end;\n                    let seenBelow = false;\n                    do {\n                        let info = glyphs[--i].shaperInfo;\n                        // until a consonant is found\n                        if ($7826f90f6f0cecc9$var$isConsonant(glyphs[i])) {\n                            // that does not have a below-base or post-base form\n                            // (post-base forms have to follow below-base forms),\n                            if (info.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C && (info.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C || seenBelow)) {\n                                base = i;\n                                break;\n                            }\n                            // or that is not a pre-base reordering Ra,\n                            //\n                            // IMPLEMENTATION NOTES:\n                            //\n                            // Our pre-base reordering Ra's are marked POS_POST_C, so will be skipped\n                            // by the logic above already.\n                            //\n                            // or arrive at the first consonant. The consonant stopped at will\n                            // be the base.\n                            if (info.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C) seenBelow = true;\n                            base = i;\n                        } else if (start < i && info.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ && glyphs[i - 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H) break;\n                    }while (i > limit);\n                    break;\n                }\n            case \"First\":\n                // The first consonant is always the base.\n                base = start;\n                // Mark all subsequent consonants as below.\n                for(let i = base + 1; i < end; i++)if ($7826f90f6f0cecc9$var$isConsonant(glyphs[i])) glyphs[i].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C;\n        }\n        // If the syllable starts with Ra + Halant (in a script that has Reph)\n        // and has more than one consonant, Ra is excluded from candidates for\n        // base consonants.\n        //\n        //  Only do this for unforced Reph. (ie. not for Ra,H,ZWJ)\n        if (hasReph && base === start && limit - base <= 2) hasReph = false;\n        // 2. Decompose and reorder Matras:\n        //\n        // Each matra and any syllable modifier sign in the cluster are moved to the\n        // appropriate position relative to the consonant(s) in the cluster. The\n        // shaping engine decomposes two- or three-part matras into their constituent\n        // parts before any repositioning. Matra characters are classified by which\n        // consonant in a conjunct they have affinity for and are reordered to the\n        // following positions:\n        //\n        //   o Before first half form in the syllable\n        //   o After subjoined consonants\n        //   o After post-form consonant\n        //   o After main consonant (for above marks)\n        //\n        // IMPLEMENTATION NOTES:\n        //\n        // The normalize() routine has already decomposed matras for us, so we don't\n        // need to worry about that.\n        // 3.  Reorder marks to canonical order:\n        //\n        // Adjacent nukta and halant or nukta and vedic sign are always repositioned\n        // if necessary, so that the nukta is first.\n        //\n        // IMPLEMENTATION NOTES:\n        //\n        // We don't need to do this: the normalize() routine already did this for us.\n        // Reorder characters\n        for(let i1 = start; i1 < base; i1++){\n            let info = glyphs[i1].shaperInfo;\n            info.position = Math.min((0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_C, info.position);\n        }\n        if (base < end) glyphs[base].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C;\n        // Mark final consonants.  A final consonant is one appearing after a matra,\n        // like in Khmer.\n        for(let i2 = base + 1; i2 < end; i2++)if (glyphs[i2].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) {\n            for(let j = i2 + 1; j < end; j++)if ($7826f90f6f0cecc9$var$isConsonant(glyphs[j])) {\n                glyphs[j].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Final_C;\n                break;\n            }\n            break;\n        }\n        // Handle beginning Ra\n        if (hasReph) glyphs[start].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph;\n        // For old-style Indic script tags, move the first post-base Halant after\n        // last consonant.\n        //\n        // Reports suggest that in some scripts Uniscribe does this only if there\n        // is *not* a Halant after last consonant already (eg. Kannada), while it\n        // does it unconditionally in other scripts (eg. Malayalam).  We don't\n        // currently know about other scripts, so we single out Malayalam for now.\n        //\n        // Kannada test case:\n        // U+0C9A,U+0CCD,U+0C9A,U+0CCD\n        // With some versions of Lohit Kannada.\n        // https://bugs.freedesktop.org/show_bug.cgi?id=59118\n        //\n        // Malayalam test case:\n        // U+0D38,U+0D4D,U+0D31,U+0D4D,U+0D31,U+0D4D\n        // With lohit-ttf-20121122/Lohit-Malayalam.ttf\n        if (plan.isOldSpec) {\n            let disallowDoubleHalants = plan.unicodeScript !== \"Malayalam\";\n            for(let i = base + 1; i < end; i++)if (glyphs[i].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H) {\n                let j;\n                for(j = end - 1; j > i; j--){\n                    if ($7826f90f6f0cecc9$var$isConsonant(glyphs[j]) || disallowDoubleHalants && glyphs[j].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H) break;\n                }\n                if (glyphs[j].shaperInfo.category !== (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H && j > i) {\n                    // Move Halant to after last consonant.\n                    let t = glyphs[i];\n                    glyphs.splice(i, 0, ...glyphs.splice(i + 1, j - i));\n                    glyphs[j] = t;\n                }\n                break;\n            }\n        }\n        // Attach misc marks to previous char to move with them.\n        let lastPos = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Start;\n        for(let i3 = start; i3 < end; i3++){\n            let info = glyphs[i3].shaperInfo;\n            if (info.category & ((0, $90a9d3398ee54fe5$export$bbcd928767338e0d) | (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).N | (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).RS | (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).CM | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc) & info.category)) {\n                info.position = lastPos;\n                if (info.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H && info.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n                    // Uniscribe doesn't move the Halant with Left Matra.\n                    // TEST: U+092B,U+093F,U+094DE\n                    // We follow.  This is important for the Sinhala\n                    // U+0DDA split matra since it decomposes to U+0DD9,U+0DCA\n                    // where U+0DD9 is a left matra and U+0DCA is the virama.\n                    // We don't want to move the virama with the left matra.\n                    // TEST: U+0D9A,U+0DDA\n                    for(let j = i3; j > start; j--)if (glyphs[j - 1].shaperInfo.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n                        info.position = glyphs[j - 1].shaperInfo.position;\n                        break;\n                    }\n                }\n            } else if (info.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD) lastPos = info.position;\n        }\n        // For post-base consonants let them own anything before them\n        // since the last consonant or matra.\n        let last = base;\n        for(let i4 = base + 1; i4 < end; i4++){\n            if ($7826f90f6f0cecc9$var$isConsonant(glyphs[i4])) {\n                for(let j = last + 1; j < i4; j++)if (glyphs[j].shaperInfo.position < (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD) glyphs[j].shaperInfo.position = glyphs[i4].shaperInfo.position;\n                last = i4;\n            } else if (glyphs[i4].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) last = i4;\n        }\n        let arr = glyphs.slice(start, end);\n        arr.sort((a, b)=>a.shaperInfo.position - b.shaperInfo.position);\n        glyphs.splice(start, arr.length, ...arr);\n        // Find base again\n        for(let i5 = start; i5 < end; i5++)if (glyphs[i5].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) {\n            base = i5;\n            break;\n        }\n        // Setup features now\n        // Reph\n        for(let i6 = start; i6 < end && glyphs[i6].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph; i6++)glyphs[i6].features.rphf = true;\n        // Pre-base\n        let blwf = !plan.isOldSpec && indicConfig.blwfMode === \"Pre_And_Post\";\n        for(let i7 = start; i7 < base; i7++){\n            glyphs[i7].features.half = true;\n            if (blwf) glyphs[i7].features.blwf = true;\n        }\n        // Post-base\n        for(let i8 = base + 1; i8 < end; i8++){\n            glyphs[i8].features.abvf = true;\n            glyphs[i8].features.pstf = true;\n            glyphs[i8].features.blwf = true;\n        }\n        if (plan.isOldSpec && plan.unicodeScript === \"Devanagari\") {\n            // Old-spec eye-lash Ra needs special handling.  From the\n            // spec:\n            //\n            // \"The feature 'below-base form' is applied to consonants\n            // having below-base forms and following the base consonant.\n            // The exception is vattu, which may appear below half forms\n            // as well as below the base glyph. The feature 'below-base\n            // form' will be applied to all such occurrences of Ra as well.\"\n            //\n            // Test case: U+0924,U+094D,U+0930,U+094d,U+0915\n            // with Sanskrit 2003 font.\n            //\n            // However, note that Ra,Halant,ZWJ is the correct way to\n            // request eyelash form of Ra, so we wouldbn't inhibit it\n            // in that sequence.\n            //\n            // Test case: U+0924,U+094D,U+0930,U+094d,U+200D,U+0915\n            for(let i = start; i + 1 < base; i++)if (glyphs[i].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Ra && glyphs[i + 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).H && (i + 1 === base || glyphs[i + 2].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ)) {\n                glyphs[i].features.blwf = true;\n                glyphs[i + 1].features.blwf = true;\n            }\n        }\n        let prefLen = 2;\n        if (features.pref && base + prefLen < end) // Find a Halant,Ra sequence and mark it for pre-base reordering processing.\n        for(let i9 = base + 1; i9 + prefLen - 1 < end; i9++){\n            let g = [\n                glyphs[i9].copy(),\n                glyphs[i9 + 1].copy()\n            ];\n            if ($7826f90f6f0cecc9$var$wouldSubstitute(g, \"pref\")) {\n                for(let j = 0; j < prefLen; j++)glyphs[i9++].features.pref = true;\n                // Mark the subsequent stuff with 'cfar'.  Used in Khmer.\n                // Read the feature spec.\n                // This allows distinguishing the following cases with MS Khmer fonts:\n                // U+1784,U+17D2,U+179A,U+17D2,U+1782\n                // U+1784,U+17D2,U+1782,U+17D2,U+179A\n                if (features.cfar) for(; i9 < end; i9++)glyphs[i9].features.cfar = true;\n                break;\n            }\n        }\n        // Apply ZWJ/ZWNJ effects\n        for(let i10 = start + 1; i10 < end; i10++)if ($7826f90f6f0cecc9$var$isJoiner(glyphs[i10])) {\n            let nonJoiner = glyphs[i10].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWNJ;\n            let j = i10;\n            do {\n                j--;\n                // ZWJ/ZWNJ should disable CJCT.  They do that by simply\n                // being there, since we don't skip them for the CJCT\n                // feature (ie. F_MANUAL_ZWJ)\n                // A ZWNJ disables HALF.\n                if (nonJoiner) delete glyphs[j].features.half;\n            }while (j > start && !$7826f90f6f0cecc9$var$isConsonant(glyphs[j]));\n        }\n    }\n}\nfunction $7826f90f6f0cecc9$var$finalReordering(font, glyphs, plan) {\n    let indicConfig = plan.indicConfig;\n    let features = font._layoutEngine.engine.GSUBProcessor.features;\n    for(let start = 0, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $7826f90f6f0cecc9$var$nextSyllable(glyphs, start)){\n        // 4. Final reordering:\n        //\n        // After the localized forms and basic shaping forms GSUB features have been\n        // applied (see below), the shaping engine performs some final glyph\n        // reordering before applying all the remaining font features to the entire\n        // cluster.\n        let tryPref = !!features.pref;\n        // Find base again\n        let base = start;\n        for(; base < end; base++)if (glyphs[base].shaperInfo.position >= (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) {\n            if (tryPref && base + 1 < end) {\n                for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {\n                    if (!(glyphs[i].substituted && glyphs[i].isLigated && !glyphs[i].isMultiplied)) {\n                        // Ok, this was a 'pref' candidate but didn't form any.\n                        // Base is around here...\n                        base = i;\n                        while(base < end && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[base]))base++;\n                        glyphs[base].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).BASE_C;\n                        tryPref = false;\n                    }\n                    break;\n                }\n            }\n            // For Malayalam, skip over unformed below- (but NOT post-) forms.\n            if (plan.unicodeScript === \"Malayalam\") for(let i = base + 1; i < end; i++){\n                while(i < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[i]))i++;\n                if (i === end || !$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[i])) break;\n                i++; // Skip halant.\n                while(i < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[i]))i++;\n                if (i < end && $7826f90f6f0cecc9$var$isConsonant(glyphs[i]) && glyphs[i].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Below_C) {\n                    base = i;\n                    glyphs[base].shaperInfo.position = (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C;\n                }\n            }\n            if (start < base && glyphs[base].shaperInfo.position > (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Base_C) base--;\n            break;\n        }\n        if (base === end && start < base && glyphs[base - 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).ZWJ) base--;\n        if (base < end) while(start < base && glyphs[base].shaperInfo.category & ((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).N | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc)))base--;\n        // o Reorder matras:\n        //\n        // If a pre-base matra character had been reordered before applying basic\n        // features, the glyph can be moved closer to the main consonant based on\n        // whether half-forms had been formed. Actual position for the matra is\n        // defined as “after last standalone halant glyph, after initial matra\n        // position and before the main consonant”. If ZWJ or ZWNJ follow this\n        // halant, position is moved after it.\n        //\n        if (start + 1 < end && start < base) {\n            // If we lost track of base, alas, position before last thingy.\n            let newPos = base === end ? base - 2 : base - 1;\n            // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n            // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n            // We want to position matra after them.\n            if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n                while(newPos > start && !(glyphs[newPos].shaperInfo.category & ((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc))))newPos--;\n                // If we found no Halant we are done.\n                // Otherwise only proceed if the Halant does\n                // not belong to the Matra itself!\n                if ($7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newPos]) && glyphs[newPos].shaperInfo.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) // If ZWJ or ZWNJ follow this halant, position is moved after it.\n                {\n                    if (newPos + 1 < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[newPos + 1])) newPos++;\n                } else newPos = start; // No move.\n            }\n            if (start < newPos && glyphs[newPos].shaperInfo.position !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n                // Now go see if there's actually any matras...\n                for(let i = newPos; i > start; i--)if (glyphs[i - 1].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M) {\n                    let oldPos = i - 1;\n                    if (oldPos < base && base <= newPos) base--;\n                    let tmp = glyphs[oldPos];\n                    glyphs.splice(oldPos, 0, ...glyphs.splice(oldPos + 1, newPos - oldPos));\n                    glyphs[newPos] = tmp;\n                    newPos--;\n                }\n            }\n        }\n        // o Reorder reph:\n        //\n        // Reph’s original position is always at the beginning of the syllable,\n        // (i.e. it is not reordered at the character reordering stage). However,\n        // it will be reordered according to the basic-forms shaping results.\n        // Possible positions for reph, depending on the script, are; after main,\n        // before post-base consonant forms, and after post-base consonant forms.\n        // Two cases:\n        //\n        // - If repha is encoded as a sequence of characters (Ra,H or Ra,H,ZWJ), then\n        //   we should only move it if the sequence ligated to the repha form.\n        //\n        // - If repha is encoded separately and in the logical position, we should only\n        //   move it if it did NOT ligate.  If it ligated, it's probably the font trying\n        //   to make it work without the reordering.\n        if (start + 1 < end && glyphs[start].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Ra_To_Become_Reph && glyphs[start].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).Repha !== (glyphs[start].isLigated && !glyphs[start].isMultiplied)) {\n            let newRephPos;\n            let rephPos = indicConfig.rephPos;\n            let found = false;\n            // 1. If reph should be positioned after post-base consonant forms,\n            //    proceed to step 5.\n            if (rephPos !== (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Post) {\n                //  2. If the reph repositioning class is not after post-base: target\n                //     position is after the first explicit halant glyph between the\n                //     first post-reph consonant and last main consonant. If ZWJ or ZWNJ\n                //     are following this halant, position is moved after it. If such\n                //     position is found, this is the target position. Otherwise,\n                //     proceed to the next step.\n                //\n                //     Note: in old-implementation fonts, where classifications were\n                //     fixed in shaping engine, there was no case where reph position\n                //     will be found on this step.\n                newRephPos = start + 1;\n                while(newRephPos < base && !$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;\n                if (newRephPos < base && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n                    if (newRephPos + 1 < base && $7826f90f6f0cecc9$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n                    found = true;\n                }\n                // 3. If reph should be repositioned after the main consonant: find the\n                //    first consonant not ligated with main, or find the first\n                //    consonant that is not a potential pre-base reordering Ra.\n                if (!found && rephPos === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Main) {\n                    newRephPos = base;\n                    while(newRephPos + 1 < end && glyphs[newRephPos + 1].shaperInfo.position <= (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Main)newRephPos++;\n                    found = newRephPos < end;\n                }\n                // 4. If reph should be positioned before post-base consonant, find\n                //    first post-base classified consonant not ligated with main. If no\n                //    consonant is found, the target position should be before the\n                //    first matra, syllable modifier sign or vedic sign.\n                //\n                // This is our take on what step 4 is trying to say (and failing, BADLY).\n                if (!found && rephPos === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Sub) {\n                    newRephPos = base;\n                    while(newRephPos + 1 < end && !(glyphs[newRephPos + 1].shaperInfo.position & ((0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Post_C | (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).After_Post | (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD)))newRephPos++;\n                    found = newRephPos < end;\n                }\n            }\n            //  5. If no consonant is found in steps 3 or 4, move reph to a position\n            //     immediately before the first post-base matra, syllable modifier\n            //     sign or vedic sign that has a reordering class after the intended\n            //     reph position. For example, if the reordering position for reph\n            //     is post-main, it will skip above-base matras that also have a\n            //     post-main position.\n            if (!found) {\n                // Copied from step 2.\n                newRephPos = start + 1;\n                while(newRephPos < base && !$7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos]))newRephPos++;\n                if (newRephPos < base && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    // ->If ZWJ or ZWNJ are following this halant, position is moved after it.\n                    if (newRephPos + 1 < base && $7826f90f6f0cecc9$var$isJoiner(glyphs[newRephPos + 1])) newRephPos++;\n                    found = true;\n                }\n            }\n            // 6. Otherwise, reorder reph to the end of the syllable.\n            if (!found) {\n                newRephPos = end - 1;\n                while(newRephPos > start && glyphs[newRephPos].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).SMVD)newRephPos--;\n                // If the Reph is to be ending up after a Matra,Halant sequence,\n                // position it before that Halant so it can interact with the Matra.\n                // However, if it's a plain Consonant,Halant we shouldn't do that.\n                // Uniscribe doesn't do this.\n                // TEST: U+0930,U+094D,U+0915,U+094B,U+094D\n                if ($7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newRephPos])) {\n                    for(let i = base + 1; i < newRephPos; i++)if (glyphs[i].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) newRephPos--;\n                }\n            }\n            let reph = glyphs[start];\n            glyphs.splice(start, 0, ...glyphs.splice(start + 1, newRephPos - start));\n            glyphs[newRephPos] = reph;\n            if (start < base && base <= newRephPos) base--;\n        }\n        // o Reorder pre-base reordering consonants:\n        //\n        // If a pre-base reordering consonant is found, reorder it according to\n        // the following rules:\n        if (tryPref && base + 1 < end) {\n            for(let i = base + 1; i < end; i++)if (glyphs[i].features.pref) {\n                // 1. Only reorder a glyph produced by substitution during application\n                //    of the <pref> feature. (Note that a font may shape a Ra consonant with\n                //    the feature generally but block it in certain contexts.)\n                // Note: We just check that something got substituted.  We don't check that\n                // the <pref> feature actually did it...\n                //\n                // Reorder pref only if it ligated.\n                if (glyphs[i].isLigated && !glyphs[i].isMultiplied) {\n                    // 2. Try to find a target position the same way as for pre-base matra.\n                    //    If it is found, reorder pre-base consonant glyph.\n                    //\n                    // 3. If position is not found, reorder immediately before main\n                    //    consonant.\n                    let newPos = base;\n                    // Malayalam / Tamil do not have \"half\" forms or explicit virama forms.\n                    // The glyphs formed by 'half' are Chillus or ligated explicit viramas.\n                    // We want to position matra after them.\n                    if (plan.unicodeScript !== \"Malayalam\" && plan.unicodeScript !== \"Tamil\") {\n                        while(newPos > start && !(glyphs[newPos - 1].shaperInfo.category & ((0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M | (0, $90a9d3398ee54fe5$export$ca9599b2a300afc))))newPos--;\n                        // In Khmer coeng model, a H,Ra can go *after* matras.  If it goes after a\n                        // split matra, it should be reordered to *before* the left part of such matra.\n                        if (newPos > start && glyphs[newPos - 1].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) {\n                            let oldPos = i;\n                            for(let j = base + 1; j < oldPos; j++)if (glyphs[j].shaperInfo.category === (0, $90a9d3398ee54fe5$export$a513ea61a7bee91c).M) {\n                                newPos--;\n                                break;\n                            }\n                        }\n                    }\n                    if (newPos > start && $7826f90f6f0cecc9$var$isHalantOrCoeng(glyphs[newPos - 1])) // -> If ZWJ or ZWNJ follow this halant, position is moved after it.\n                    {\n                        if (newPos < end && $7826f90f6f0cecc9$var$isJoiner(glyphs[newPos])) newPos++;\n                    }\n                    let oldPos = i;\n                    let tmp = glyphs[oldPos];\n                    glyphs.splice(newPos + 1, 0, ...glyphs.splice(newPos, oldPos - newPos));\n                    glyphs[newPos] = tmp;\n                    if (newPos <= base && base < oldPos) base++;\n                }\n                break;\n            }\n        }\n        // Apply 'init' to the Left Matra if it's a word start.\n        if (glyphs[start].shaperInfo.position === (0, $90a9d3398ee54fe5$export$1a1f61c9c4dd9df0).Pre_M && (!start || !/Cf|Mn/.test((0, $6uUbQ$getCategory)(glyphs[start - 1].codePoints[0])))) glyphs[start].features.init = true;\n    }\n}\nfunction $7826f90f6f0cecc9$var$nextSyllable(glyphs, start) {\n    if (start >= glyphs.length) return start;\n    let syllable = glyphs[start].shaperInfo.syllable;\n    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n    return start;\n}\n\n\n\n\n\n\n\n\n\nconst { categories: $7ab494fe977143c6$var$categories , decompositions: $7ab494fe977143c6$var$decompositions  } = (0, (/*@__PURE__*/$parcel$interopDefault($aa333a9607471296$exports)));\nconst $7ab494fe977143c6$var$trie = new (0, $6uUbQ$unicodetrie)((0, $12727730ddfc8bfe$export$94fdf11bafc8de6b)(\"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\"));\nconst $7ab494fe977143c6$var$stateMachine = new (0, $6uUbQ$dfa)((0, (/*@__PURE__*/$parcel$interopDefault($aa333a9607471296$exports))));\nclass $7ab494fe977143c6$export$2e2bcd8739ae039 extends (0, $649970d87335b30f$export$2e2bcd8739ae039) {\n    static planFeatures(plan) {\n        plan.addStage($7ab494fe977143c6$var$setupSyllables);\n        // Default glyph pre-processing group\n        plan.addStage([\n            \"locl\",\n            \"ccmp\",\n            \"nukt\",\n            \"akhn\"\n        ]);\n        // Reordering group\n        plan.addStage($7ab494fe977143c6$var$clearSubstitutionFlags);\n        plan.addStage([\n            \"rphf\"\n        ], false);\n        plan.addStage($7ab494fe977143c6$var$recordRphf);\n        plan.addStage($7ab494fe977143c6$var$clearSubstitutionFlags);\n        plan.addStage([\n            \"pref\"\n        ]);\n        plan.addStage($7ab494fe977143c6$var$recordPref);\n        // Orthographic unit shaping group\n        plan.addStage([\n            \"rkrf\",\n            \"abvf\",\n            \"blwf\",\n            \"half\",\n            \"pstf\",\n            \"vatu\",\n            \"cjct\"\n        ]);\n        plan.addStage($7ab494fe977143c6$var$reorder);\n        // Topographical features\n        // Scripts that need this are handled by the Arabic shaper, not implemented here for now.\n        // plan.addStage(['isol', 'init', 'medi', 'fina', 'med2', 'fin2', 'fin3'], false);\n        // Standard topographic presentation and positional feature application\n        plan.addStage([\n            \"abvs\",\n            \"blws\",\n            \"pres\",\n            \"psts\",\n            \"dist\",\n            \"abvm\",\n            \"blwm\"\n        ]);\n    }\n    static assignFeatures(plan, glyphs) {\n        // Decompose split vowels\n        // TODO: do this in a more general unicode normalizer\n        for(let i = glyphs.length - 1; i >= 0; i--){\n            let codepoint = glyphs[i].codePoints[0];\n            if ($7ab494fe977143c6$var$decompositions[codepoint]) {\n                let decomposed = $7ab494fe977143c6$var$decompositions[codepoint].map((c)=>{\n                    let g = plan.font.glyphForCodePoint(c);\n                    return new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(plan.font, g.id, [\n                        c\n                    ], glyphs[i].features);\n                });\n                glyphs.splice(i, 1, ...decomposed);\n            }\n        }\n    }\n}\n(0, $6uUbQ$swchelperssrc_define_propertymjs)($7ab494fe977143c6$export$2e2bcd8739ae039, \"zeroMarkWidths\", \"BEFORE_GPOS\");\nfunction $7ab494fe977143c6$var$useCategory(glyph) {\n    return $7ab494fe977143c6$var$trie.get(glyph.codePoints[0]);\n}\nclass $7ab494fe977143c6$var$USEInfo {\n    constructor(category, syllableType, syllable){\n        this.category = category;\n        this.syllableType = syllableType;\n        this.syllable = syllable;\n    }\n}\nfunction $7ab494fe977143c6$var$setupSyllables(font, glyphs) {\n    let syllable = 0;\n    for (let [start, end, tags] of $7ab494fe977143c6$var$stateMachine.match(glyphs.map($7ab494fe977143c6$var$useCategory))){\n        ++syllable;\n        // Create shaper info\n        for(let i = start; i <= end; i++)glyphs[i].shaperInfo = new $7ab494fe977143c6$var$USEInfo($7ab494fe977143c6$var$categories[$7ab494fe977143c6$var$useCategory(glyphs[i])], tags[0], syllable);\n        // Assign rphf feature\n        let limit = glyphs[start].shaperInfo.category === \"R\" ? 1 : Math.min(3, end - start);\n        for(let i1 = start; i1 < start + limit; i1++)glyphs[i1].features.rphf = true;\n    }\n}\nfunction $7ab494fe977143c6$var$clearSubstitutionFlags(font, glyphs) {\n    for (let glyph of glyphs)glyph.substituted = false;\n}\nfunction $7ab494fe977143c6$var$recordRphf(font, glyphs) {\n    for (let glyph of glyphs)if (glyph.substituted && glyph.features.rphf) // Mark a substituted repha.\n    glyph.shaperInfo.category = \"R\";\n}\nfunction $7ab494fe977143c6$var$recordPref(font, glyphs) {\n    for (let glyph of glyphs)if (glyph.substituted) // Mark a substituted pref as VPre, as they behave the same way.\n    glyph.shaperInfo.category = \"VPre\";\n}\nfunction $7ab494fe977143c6$var$reorder(font, glyphs) {\n    let dottedCircle = font.glyphForCodePoint(0x25cc).id;\n    for(let start = 0, end = $7ab494fe977143c6$var$nextSyllable(glyphs, 0); start < glyphs.length; start = end, end = $7ab494fe977143c6$var$nextSyllable(glyphs, start)){\n        let i, j;\n        let info = glyphs[start].shaperInfo;\n        let type = info.syllableType;\n        // Only a few syllable types need reordering.\n        if (type !== \"virama_terminated_cluster\" && type !== \"standard_cluster\" && type !== \"broken_cluster\") continue;\n        // Insert a dotted circle glyph in broken clusters.\n        if (type === \"broken_cluster\" && dottedCircle) {\n            let g = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(font, dottedCircle, [\n                0x25cc\n            ]);\n            g.shaperInfo = info;\n            // Insert after possible Repha.\n            for(i = start; i < end && glyphs[i].shaperInfo.category === \"R\"; i++);\n            glyphs.splice(++i, 0, g);\n            end++;\n        }\n        // Move things forward.\n        if (info.category === \"R\" && end - start > 1) // Got a repha. Reorder it to after first base, before first halant.\n        for(i = start + 1; i < end; i++){\n            info = glyphs[i].shaperInfo;\n            if ($7ab494fe977143c6$var$isBase(info) || $7ab494fe977143c6$var$isHalant(glyphs[i])) {\n                // If we hit a halant, move before it; otherwise it's a base: move to it's\n                // place, and shift things in between backward.\n                if ($7ab494fe977143c6$var$isHalant(glyphs[i])) i--;\n                glyphs.splice(start, 0, ...glyphs.splice(start + 1, i - start), glyphs[i]);\n                break;\n            }\n        }\n        // Move things back.\n        for(i = start, j = end; i < end; i++){\n            info = glyphs[i].shaperInfo;\n            if ($7ab494fe977143c6$var$isBase(info) || $7ab494fe977143c6$var$isHalant(glyphs[i])) // If we hit a halant, move after it; otherwise it's a base: move to it's\n            // place, and shift things in between backward.\n            j = $7ab494fe977143c6$var$isHalant(glyphs[i]) ? i + 1 : i;\n            else if ((info.category === \"VPre\" || info.category === \"VMPre\") && j < i) glyphs.splice(j, 1, glyphs[i], ...glyphs.splice(j, i - j));\n        }\n    }\n}\nfunction $7ab494fe977143c6$var$nextSyllable(glyphs, start) {\n    if (start >= glyphs.length) return start;\n    let syllable = glyphs[start].shaperInfo.syllable;\n    while(++start < glyphs.length && glyphs[start].shaperInfo.syllable === syllable);\n    return start;\n}\nfunction $7ab494fe977143c6$var$isHalant(glyph) {\n    return glyph.shaperInfo.category === \"H\" && !glyph.isLigated;\n}\nfunction $7ab494fe977143c6$var$isBase(info) {\n    return info.category === \"B\" || info.category === \"GB\";\n}\n\n\nconst $102b6fe50f1d50b4$var$SHAPERS = {\n    arab: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n    mong: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n    syrc: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n    \"nko \": (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n    phag: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n    mand: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n    mani: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n    phlp: (0, $764eb544bbe1ccf0$export$2e2bcd8739ae039),\n    hang: (0, $e1c6bbc8cb416f8c$export$2e2bcd8739ae039),\n    bng2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    beng: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    dev2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    deva: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    gjr2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    gujr: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    guru: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    gur2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    knda: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    knd2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    mlm2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    mlym: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    ory2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    orya: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    taml: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    tml2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    telu: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    tel2: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    khmr: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    bali: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    batk: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    brah: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    bugi: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    buhd: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    cakm: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    cham: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    dupl: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    egyp: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    gran: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    hano: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    java: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    kthi: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    kali: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    khar: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    khoj: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    sind: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    lepc: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    limb: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    mahj: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    // mand: UniversalShaper, // Mandaic\n    // mani: UniversalShaper, // Manichaean\n    mtei: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    modi: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    // mong: UniversalShaper, // Mongolian\n    // 'nko ': UniversalShaper, // N’Ko\n    hmng: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    // phag: UniversalShaper, // Phags-pa\n    // phlp: UniversalShaper, // Psalter Pahlavi\n    rjng: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    saur: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    shrd: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    sidd: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    sinh: (0, $7826f90f6f0cecc9$export$2e2bcd8739ae039),\n    sund: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    sylo: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    tglg: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    tagb: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    tale: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    lana: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    tavt: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    takr: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    tibt: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    tfng: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    tirh: (0, $7ab494fe977143c6$export$2e2bcd8739ae039),\n    latn: (0, $649970d87335b30f$export$2e2bcd8739ae039),\n    DFLT: (0, $649970d87335b30f$export$2e2bcd8739ae039 // Default\n    )\n};\nfunction $102b6fe50f1d50b4$export$7877a478dd30fd3d(script) {\n    if (!Array.isArray(script)) script = [\n        script\n    ];\n    for (let s of script){\n        let shaper = $102b6fe50f1d50b4$var$SHAPERS[s];\n        if (shaper) return shaper;\n    }\n    return 0, $649970d87335b30f$export$2e2bcd8739ae039;\n}\n\n\n\n\n\nclass $0a876c45f1f7c41c$export$2e2bcd8739ae039 extends (0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039) {\n    applyLookup(lookupType, table) {\n        switch(lookupType){\n            case 1:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    let glyph = this.glyphIterator.cur;\n                    switch(table.version){\n                        case 1:\n                            glyph.id = glyph.id + table.deltaGlyphID & 0xffff;\n                            break;\n                        case 2:\n                            glyph.id = table.substitute.get(index);\n                            break;\n                    }\n                    return true;\n                }\n            case 2:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index !== -1) {\n                        let sequence = table.sequences.get(index);\n                        if (sequence.length === 0) {\n                            // If the sequence length is zero, delete the glyph.\n                            // The OpenType spec disallows this, but seems like Harfbuzz and Uniscribe allow it.\n                            this.glyphs.splice(this.glyphIterator.index, 1);\n                            return true;\n                        }\n                        this.glyphIterator.cur.id = sequence[0];\n                        this.glyphIterator.cur.ligatureComponent = 0;\n                        let features = this.glyphIterator.cur.features;\n                        let curGlyph = this.glyphIterator.cur;\n                        let replacement = sequence.slice(1).map((gid, i)=>{\n                            let glyph = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(this.font, gid, undefined, features);\n                            glyph.shaperInfo = curGlyph.shaperInfo;\n                            glyph.isLigated = curGlyph.isLigated;\n                            glyph.ligatureComponent = i + 1;\n                            glyph.substituted = true;\n                            glyph.isMultiplied = true;\n                            return glyph;\n                        });\n                        this.glyphs.splice(this.glyphIterator.index + 1, 0, ...replacement);\n                        return true;\n                    }\n                    return false;\n                }\n            case 3:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index !== -1) {\n                        let USER_INDEX = 0; // TODO\n                        this.glyphIterator.cur.id = table.alternateSet.get(index)[USER_INDEX];\n                        return true;\n                    }\n                    return false;\n                }\n            case 4:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    for (let ligature of table.ligatureSets.get(index)){\n                        let matched = this.sequenceMatchIndices(1, ligature.components);\n                        if (!matched) continue;\n                        let curGlyph = this.glyphIterator.cur;\n                        // Concatenate all of the characters the new ligature will represent\n                        let characters = curGlyph.codePoints.slice();\n                        for (let index of matched)characters.push(...this.glyphs[index].codePoints);\n                        // Create the replacement ligature glyph\n                        let ligatureGlyph = new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(this.font, ligature.glyph, characters, curGlyph.features);\n                        ligatureGlyph.shaperInfo = curGlyph.shaperInfo;\n                        ligatureGlyph.isLigated = true;\n                        ligatureGlyph.substituted = true;\n                        // From Harfbuzz:\n                        // - If it *is* a mark ligature, we don't allocate a new ligature id, and leave\n                        //   the ligature to keep its old ligature id.  This will allow it to attach to\n                        //   a base ligature in GPOS.  Eg. if the sequence is: LAM,LAM,SHADDA,FATHA,HEH,\n                        //   and LAM,LAM,HEH for a ligature, they will leave SHADDA and FATHA with a\n                        //   ligature id and component value of 2.  Then if SHADDA,FATHA form a ligature\n                        //   later, we don't want them to lose their ligature id/component, otherwise\n                        //   GPOS will fail to correctly position the mark ligature on top of the\n                        //   LAM,LAM,HEH ligature. See https://bugzilla.gnome.org/show_bug.cgi?id=676343\n                        //\n                        // - If a ligature is formed of components that some of which are also ligatures\n                        //   themselves, and those ligature components had marks attached to *their*\n                        //   components, we have to attach the marks to the new ligature component\n                        //   positions!  Now *that*'s tricky!  And these marks may be following the\n                        //   last component of the whole sequence, so we should loop forward looking\n                        //   for them and update them.\n                        //\n                        //   Eg. the sequence is LAM,LAM,SHADDA,FATHA,HEH, and the font first forms a\n                        //   'calt' ligature of LAM,HEH, leaving the SHADDA and FATHA with a ligature\n                        //   id and component == 1.  Now, during 'liga', the LAM and the LAM-HEH ligature\n                        //   form a LAM-LAM-HEH ligature.  We need to reassign the SHADDA and FATHA to\n                        //   the new ligature with a component value of 2.\n                        //\n                        //   This in fact happened to a font...  See https://bugzilla.gnome.org/show_bug.cgi?id=437633\n                        let isMarkLigature = curGlyph.isMark;\n                        for(let i = 0; i < matched.length && isMarkLigature; i++)isMarkLigature = this.glyphs[matched[i]].isMark;\n                        ligatureGlyph.ligatureID = isMarkLigature ? null : this.ligatureID++;\n                        let lastLigID = curGlyph.ligatureID;\n                        let lastNumComps = curGlyph.codePoints.length;\n                        let curComps = lastNumComps;\n                        let idx = this.glyphIterator.index + 1;\n                        // Set ligatureID and ligatureComponent on glyphs that were skipped in the matched sequence.\n                        // This allows GPOS to attach marks to the correct ligature components.\n                        for (let matchIndex of matched){\n                            // Don't assign new ligature components for mark ligatures (see above)\n                            if (isMarkLigature) idx = matchIndex;\n                            else while(idx < matchIndex){\n                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[idx].ligatureComponent || 1, lastNumComps);\n                                this.glyphs[idx].ligatureID = ligatureGlyph.ligatureID;\n                                this.glyphs[idx].ligatureComponent = ligatureComponent;\n                                idx++;\n                            }\n                            lastLigID = this.glyphs[idx].ligatureID;\n                            lastNumComps = this.glyphs[idx].codePoints.length;\n                            curComps += lastNumComps;\n                            idx++; // skip base glyph\n                        }\n                        // Adjust ligature components for any marks following\n                        if (lastLigID && !isMarkLigature) for(let i1 = idx; i1 < this.glyphs.length; i1++){\n                            if (this.glyphs[i1].ligatureID === lastLigID) {\n                                var ligatureComponent = curComps - lastNumComps + Math.min(this.glyphs[i1].ligatureComponent || 1, lastNumComps);\n                                this.glyphs[i1].ligatureComponent = ligatureComponent;\n                            } else break;\n                        }\n                        // Delete the matched glyphs, and replace the current glyph with the ligature glyph\n                        for(let i2 = matched.length - 1; i2 >= 0; i2--)this.glyphs.splice(matched[i2], 1);\n                        this.glyphs[this.glyphIterator.index] = ligatureGlyph;\n                        return true;\n                    }\n                    return false;\n                }\n            case 5:\n                return this.applyContext(table);\n            case 6:\n                return this.applyChainingContext(table);\n            case 7:\n                return this.applyLookup(table.lookupType, table.extension);\n            default:\n                throw new Error(`GSUB lookupType ${lookupType} is not supported`);\n        }\n    }\n}\n\n\n\nclass $c96c93587d49c14d$export$2e2bcd8739ae039 extends (0, $a83b9c36aaa94fd3$export$2e2bcd8739ae039) {\n    applyPositionValue(sequenceIndex, value) {\n        let position = this.positions[this.glyphIterator.peekIndex(sequenceIndex)];\n        if (value.xAdvance != null) position.xAdvance += value.xAdvance;\n        if (value.yAdvance != null) position.yAdvance += value.yAdvance;\n        if (value.xPlacement != null) position.xOffset += value.xPlacement;\n        if (value.yPlacement != null) position.yOffset += value.yPlacement;\n        // Adjustments for font variations\n        let variationProcessor = this.font._variationProcessor;\n        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n        if (variationProcessor && variationStore) {\n            if (value.xPlaDevice) position.xOffset += variationProcessor.getDelta(variationStore, value.xPlaDevice.a, value.xPlaDevice.b);\n            if (value.yPlaDevice) position.yOffset += variationProcessor.getDelta(variationStore, value.yPlaDevice.a, value.yPlaDevice.b);\n            if (value.xAdvDevice) position.xAdvance += variationProcessor.getDelta(variationStore, value.xAdvDevice.a, value.xAdvDevice.b);\n            if (value.yAdvDevice) position.yAdvance += variationProcessor.getDelta(variationStore, value.yAdvDevice.a, value.yAdvDevice.b);\n        }\n    // TODO: device tables\n    }\n    applyLookup(lookupType, table) {\n        switch(lookupType){\n            case 1:\n                {\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    switch(table.version){\n                        case 1:\n                            this.applyPositionValue(0, table.value);\n                            break;\n                        case 2:\n                            this.applyPositionValue(0, table.values.get(index));\n                            break;\n                    }\n                    return true;\n                }\n            case 2:\n                {\n                    let nextGlyph = this.glyphIterator.peek();\n                    if (!nextGlyph) return false;\n                    let index = this.coverageIndex(table.coverage);\n                    if (index === -1) return false;\n                    switch(table.version){\n                        case 1:\n                            let set = table.pairSets.get(index);\n                            for (let pair of set)if (pair.secondGlyph === nextGlyph.id) {\n                                this.applyPositionValue(0, pair.value1);\n                                this.applyPositionValue(1, pair.value2);\n                                return true;\n                            }\n                            return false;\n                        case 2:\n                            let class1 = this.getClassID(this.glyphIterator.cur.id, table.classDef1);\n                            let class2 = this.getClassID(nextGlyph.id, table.classDef2);\n                            if (class1 === -1 || class2 === -1) return false;\n                            var pair1 = table.classRecords.get(class1).get(class2);\n                            this.applyPositionValue(0, pair1.value1);\n                            this.applyPositionValue(1, pair1.value2);\n                            return true;\n                    }\n                }\n            case 3:\n                {\n                    let nextIndex = this.glyphIterator.peekIndex();\n                    let nextGlyph = this.glyphs[nextIndex];\n                    if (!nextGlyph) return false;\n                    let curRecord = table.entryExitRecords[this.coverageIndex(table.coverage)];\n                    if (!curRecord || !curRecord.exitAnchor) return false;\n                    let nextRecord = table.entryExitRecords[this.coverageIndex(table.coverage, nextGlyph.id)];\n                    if (!nextRecord || !nextRecord.entryAnchor) return false;\n                    let entry = this.getAnchor(nextRecord.entryAnchor);\n                    let exit = this.getAnchor(curRecord.exitAnchor);\n                    let cur = this.positions[this.glyphIterator.index];\n                    let next = this.positions[nextIndex];\n                    let d;\n                    switch(this.direction){\n                        case \"ltr\":\n                            cur.xAdvance = exit.x + cur.xOffset;\n                            d = entry.x + next.xOffset;\n                            next.xAdvance -= d;\n                            next.xOffset -= d;\n                            break;\n                        case \"rtl\":\n                            d = exit.x + cur.xOffset;\n                            cur.xAdvance -= d;\n                            cur.xOffset -= d;\n                            next.xAdvance = entry.x + next.xOffset;\n                            break;\n                    }\n                    if (this.glyphIterator.flags.rightToLeft) {\n                        this.glyphIterator.cur.cursiveAttachment = nextIndex;\n                        cur.yOffset = entry.y - exit.y;\n                    } else {\n                        nextGlyph.cursiveAttachment = this.glyphIterator.index;\n                        cur.yOffset = exit.y - entry.y;\n                    }\n                    return true;\n                }\n            case 4:\n                {\n                    let markIndex = this.coverageIndex(table.markCoverage);\n                    if (markIndex === -1) return false;\n                    // search backward for a base glyph\n                    let baseGlyphIndex = this.glyphIterator.index;\n                    while(--baseGlyphIndex >= 0 && (this.glyphs[baseGlyphIndex].isMark || this.glyphs[baseGlyphIndex].ligatureComponent > 0));\n                    if (baseGlyphIndex < 0) return false;\n                    let baseIndex = this.coverageIndex(table.baseCoverage, this.glyphs[baseGlyphIndex].id);\n                    if (baseIndex === -1) return false;\n                    let markRecord = table.markArray[markIndex];\n                    let baseAnchor = table.baseArray[baseIndex][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n                    return true;\n                }\n            case 5:\n                {\n                    let markIndex = this.coverageIndex(table.markCoverage);\n                    if (markIndex === -1) return false;\n                    // search backward for a base glyph\n                    let baseGlyphIndex = this.glyphIterator.index;\n                    while(--baseGlyphIndex >= 0 && this.glyphs[baseGlyphIndex].isMark);\n                    if (baseGlyphIndex < 0) return false;\n                    let ligIndex = this.coverageIndex(table.ligatureCoverage, this.glyphs[baseGlyphIndex].id);\n                    if (ligIndex === -1) return false;\n                    let ligAttach = table.ligatureArray[ligIndex];\n                    let markGlyph = this.glyphIterator.cur;\n                    let ligGlyph = this.glyphs[baseGlyphIndex];\n                    let compIndex = ligGlyph.ligatureID && ligGlyph.ligatureID === markGlyph.ligatureID && markGlyph.ligatureComponent > 0 ? Math.min(markGlyph.ligatureComponent, ligGlyph.codePoints.length) - 1 : ligGlyph.codePoints.length - 1;\n                    let markRecord = table.markArray[markIndex];\n                    let baseAnchor = ligAttach[compIndex][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, baseGlyphIndex);\n                    return true;\n                }\n            case 6:\n                {\n                    let mark1Index = this.coverageIndex(table.mark1Coverage);\n                    if (mark1Index === -1) return false;\n                    // get the previous mark to attach to\n                    let prevIndex = this.glyphIterator.peekIndex(-1);\n                    let prev = this.glyphs[prevIndex];\n                    if (!prev || !prev.isMark) return false;\n                    let cur = this.glyphIterator.cur;\n                    // The following logic was borrowed from Harfbuzz\n                    let good = false;\n                    if (cur.ligatureID === prev.ligatureID) {\n                        if (!cur.ligatureID) good = true;\n                        else if (cur.ligatureComponent === prev.ligatureComponent) good = true;\n                    } else // If ligature ids don't match, it may be the case that one of the marks\n                    // itself is a ligature, in which case match.\n                    if (cur.ligatureID && !cur.ligatureComponent || prev.ligatureID && !prev.ligatureComponent) good = true;\n                    if (!good) return false;\n                    let mark2Index = this.coverageIndex(table.mark2Coverage, prev.id);\n                    if (mark2Index === -1) return false;\n                    let markRecord = table.mark1Array[mark1Index];\n                    let baseAnchor = table.mark2Array[mark2Index][markRecord.class];\n                    this.applyAnchor(markRecord, baseAnchor, prevIndex);\n                    return true;\n                }\n            case 7:\n                return this.applyContext(table);\n            case 8:\n                return this.applyChainingContext(table);\n            case 9:\n                return this.applyLookup(table.lookupType, table.extension);\n            default:\n                throw new Error(`Unsupported GPOS table: ${lookupType}`);\n        }\n    }\n    applyAnchor(markRecord, baseAnchor, baseGlyphIndex) {\n        let baseCoords = this.getAnchor(baseAnchor);\n        let markCoords = this.getAnchor(markRecord.markAnchor);\n        let basePos = this.positions[baseGlyphIndex];\n        let markPos = this.positions[this.glyphIterator.index];\n        markPos.xOffset = baseCoords.x - markCoords.x;\n        markPos.yOffset = baseCoords.y - markCoords.y;\n        this.glyphIterator.cur.markAttachment = baseGlyphIndex;\n    }\n    getAnchor(anchor) {\n        // TODO: contour point, device tables\n        let x = anchor.xCoordinate;\n        let y = anchor.yCoordinate;\n        // Adjustments for font variations\n        let variationProcessor = this.font._variationProcessor;\n        let variationStore = this.font.GDEF && this.font.GDEF.itemVariationStore;\n        if (variationProcessor && variationStore) {\n            if (anchor.xDeviceTable) x += variationProcessor.getDelta(variationStore, anchor.xDeviceTable.a, anchor.xDeviceTable.b);\n            if (anchor.yDeviceTable) y += variationProcessor.getDelta(variationStore, anchor.yDeviceTable.a, anchor.yDeviceTable.b);\n        }\n        return {\n            x: x,\n            y: y\n        };\n    }\n    applyFeatures(userFeatures, glyphs, advances) {\n        super.applyFeatures(userFeatures, glyphs, advances);\n        for(var i = 0; i < this.glyphs.length; i++)this.fixCursiveAttachment(i);\n        this.fixMarkAttachment();\n    }\n    fixCursiveAttachment(i) {\n        let glyph = this.glyphs[i];\n        if (glyph.cursiveAttachment != null) {\n            let j = glyph.cursiveAttachment;\n            glyph.cursiveAttachment = null;\n            this.fixCursiveAttachment(j);\n            this.positions[i].yOffset += this.positions[j].yOffset;\n        }\n    }\n    fixMarkAttachment() {\n        for(let i = 0; i < this.glyphs.length; i++){\n            let glyph = this.glyphs[i];\n            if (glyph.markAttachment != null) {\n                let j = glyph.markAttachment;\n                this.positions[i].xOffset += this.positions[j].xOffset;\n                this.positions[i].yOffset += this.positions[j].yOffset;\n                if (this.direction === \"ltr\") for(let k = j; k < i; k++){\n                    this.positions[i].xOffset -= this.positions[k].xAdvance;\n                    this.positions[i].yOffset -= this.positions[k].yAdvance;\n                }\n                else for(let k1 = j + 1; k1 < i + 1; k1++){\n                    this.positions[i].xOffset += this.positions[k1].xAdvance;\n                    this.positions[i].yOffset += this.positions[k1].yAdvance;\n                }\n            }\n        }\n    }\n}\n\n\nclass $a62492810de27e3d$export$2e2bcd8739ae039 {\n    setup(glyphRun) {\n        // Map glyphs to GlyphInfo objects so data can be passed between\n        // GSUB and GPOS without mutating the real (shared) Glyph objects.\n        this.glyphInfos = glyphRun.glyphs.map((glyph)=>new (0, $10e7b257e1a9a756$export$2e2bcd8739ae039)(this.font, glyph.id, [\n                ...glyph.codePoints\n            ]));\n        // Select a script based on what is available in GSUB/GPOS.\n        let script = null;\n        if (this.GPOSProcessor) script = this.GPOSProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n        if (this.GSUBProcessor) script = this.GSUBProcessor.selectScript(glyphRun.script, glyphRun.language, glyphRun.direction);\n        // Choose a shaper based on the script, and setup a shaping plan.\n        // This determines which features to apply to which glyphs.\n        this.shaper = $102b6fe50f1d50b4$export$7877a478dd30fd3d(script);\n        this.plan = new (0, $94d7a73bd2edfc9a$export$2e2bcd8739ae039)(this.font, script, glyphRun.direction);\n        this.shaper.plan(this.plan, this.glyphInfos, glyphRun.features);\n        // Assign chosen features to output glyph run\n        for(let key in this.plan.allFeatures)glyphRun.features[key] = true;\n    }\n    substitute(glyphRun) {\n        if (this.GSUBProcessor) {\n            this.plan.process(this.GSUBProcessor, this.glyphInfos);\n            // Map glyph infos back to normal Glyph objects\n            glyphRun.glyphs = this.glyphInfos.map((glyphInfo)=>this.font.getGlyph(glyphInfo.id, glyphInfo.codePoints));\n        }\n    }\n    position(glyphRun) {\n        if (this.shaper.zeroMarkWidths === \"BEFORE_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n        if (this.GPOSProcessor) this.plan.process(this.GPOSProcessor, this.glyphInfos, glyphRun.positions);\n        if (this.shaper.zeroMarkWidths === \"AFTER_GPOS\") this.zeroMarkAdvances(glyphRun.positions);\n        // Reverse the glyphs and positions if the script is right-to-left\n        if (glyphRun.direction === \"rtl\") {\n            glyphRun.glyphs.reverse();\n            glyphRun.positions.reverse();\n        }\n        return this.GPOSProcessor && this.GPOSProcessor.features;\n    }\n    zeroMarkAdvances(positions) {\n        for(let i = 0; i < this.glyphInfos.length; i++)if (this.glyphInfos[i].isMark) {\n            positions[i].xAdvance = 0;\n            positions[i].yAdvance = 0;\n        }\n    }\n    cleanup() {\n        this.glyphInfos = null;\n        this.plan = null;\n        this.shaper = null;\n    }\n    getAvailableFeatures(script, language) {\n        let features = [];\n        if (this.GSUBProcessor) {\n            this.GSUBProcessor.selectScript(script, language);\n            features.push(...Object.keys(this.GSUBProcessor.features));\n        }\n        if (this.GPOSProcessor) {\n            this.GPOSProcessor.selectScript(script, language);\n            features.push(...Object.keys(this.GPOSProcessor.features));\n        }\n        return features;\n    }\n    constructor(font){\n        this.font = font;\n        this.glyphInfos = null;\n        this.plan = null;\n        this.GSUBProcessor = null;\n        this.GPOSProcessor = null;\n        this.fallbackPosition = true;\n        if (font.GSUB) this.GSUBProcessor = new (0, $0a876c45f1f7c41c$export$2e2bcd8739ae039)(font, font.GSUB);\n        if (font.GPOS) this.GPOSProcessor = new (0, $c96c93587d49c14d$export$2e2bcd8739ae039)(font, font.GPOS);\n    }\n}\n\n\nclass $4c0a7fa5df7a9ab1$export$2e2bcd8739ae039 {\n    layout(string, features, script, language, direction) {\n        // Make the features parameter optional\n        if (typeof features === \"string\") {\n            direction = language;\n            language = script;\n            script = features;\n            features = [];\n        }\n        // Map string to glyphs if needed\n        if (typeof string === \"string\") {\n            // Attempt to detect the script from the string if not provided.\n            if (script == null) script = $130d1a642ebcd2b7$export$e5cb25e204fb8450(string);\n            var glyphs = this.font.glyphsForString(string);\n        } else {\n            // Attempt to detect the script from the glyph code points if not provided.\n            if (script == null) {\n                let codePoints = [];\n                for (let glyph of string)codePoints.push(...glyph.codePoints);\n                script = $130d1a642ebcd2b7$export$16fab0757cfc223d(codePoints);\n            }\n            var glyphs = string;\n        }\n        let glyphRun = new (0, $be07b3e97a42687a$export$2e2bcd8739ae039)(glyphs, features, script, language, direction);\n        // Return early if there are no glyphs\n        if (glyphs.length === 0) {\n            glyphRun.positions = [];\n            return glyphRun;\n        }\n        // Setup the advanced layout engine\n        if (this.engine && this.engine.setup) this.engine.setup(glyphRun);\n        // Substitute and position the glyphs\n        this.substitute(glyphRun);\n        this.position(glyphRun);\n        this.hideDefaultIgnorables(glyphRun.glyphs, glyphRun.positions);\n        // Let the layout engine clean up any state it might have\n        if (this.engine && this.engine.cleanup) this.engine.cleanup();\n        return glyphRun;\n    }\n    substitute(glyphRun) {\n        // Call the advanced layout engine to make substitutions\n        if (this.engine && this.engine.substitute) this.engine.substitute(glyphRun);\n    }\n    position(glyphRun) {\n        // Get initial glyph positions\n        glyphRun.positions = glyphRun.glyphs.map((glyph)=>new (0, $1ac75d9a55b67f01$export$2e2bcd8739ae039)(glyph.advanceWidth));\n        let positioned = null;\n        // Call the advanced layout engine. Returns the features applied.\n        if (this.engine && this.engine.position) positioned = this.engine.position(glyphRun);\n        // if there is no GPOS table, use unicode properties to position marks.\n        if (!positioned && (!this.engine || this.engine.fallbackPosition)) {\n            if (!this.unicodeLayoutEngine) this.unicodeLayoutEngine = new (0, $0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039)(this.font);\n            this.unicodeLayoutEngine.positionGlyphs(glyphRun.glyphs, glyphRun.positions);\n        }\n        // if kerning is not supported by GPOS, do kerning with the TrueType/AAT kern table\n        if ((!positioned || !positioned.kern) && glyphRun.features.kern !== false && this.font.kern) {\n            if (!this.kernProcessor) this.kernProcessor = new (0, $0bba3a9db57637f3$export$2e2bcd8739ae039)(this.font);\n            this.kernProcessor.process(glyphRun.glyphs, glyphRun.positions);\n            glyphRun.features.kern = true;\n        }\n    }\n    hideDefaultIgnorables(glyphs, positions) {\n        let space = this.font.glyphForCodePoint(0x20);\n        for(let i = 0; i < glyphs.length; i++)if (this.isDefaultIgnorable(glyphs[i].codePoints[0])) {\n            glyphs[i] = space;\n            positions[i].xAdvance = 0;\n            positions[i].yAdvance = 0;\n        }\n    }\n    isDefaultIgnorable(ch) {\n        // From DerivedCoreProperties.txt in the Unicode database,\n        // minus U+115F, U+1160, U+3164 and U+FFA0, which is what\n        // Harfbuzz and Uniscribe do.\n        let plane = ch >> 16;\n        if (plane === 0) // BMP\n        switch(ch >> 8){\n            case 0x00:\n                return ch === 0x00AD;\n            case 0x03:\n                return ch === 0x034F;\n            case 0x06:\n                return ch === 0x061C;\n            case 0x17:\n                return 0x17B4 <= ch && ch <= 0x17B5;\n            case 0x18:\n                return 0x180B <= ch && ch <= 0x180E;\n            case 0x20:\n                return 0x200B <= ch && ch <= 0x200F || 0x202A <= ch && ch <= 0x202E || 0x2060 <= ch && ch <= 0x206F;\n            case 0xFE:\n                return 0xFE00 <= ch && ch <= 0xFE0F || ch === 0xFEFF;\n            case 0xFF:\n                return 0xFFF0 <= ch && ch <= 0xFFF8;\n            default:\n                return false;\n        }\n        else // Other planes\n        switch(plane){\n            case 0x01:\n                return 0x1BCA0 <= ch && ch <= 0x1BCA3 || 0x1D173 <= ch && ch <= 0x1D17A;\n            case 0x0E:\n                return 0xE0000 <= ch && ch <= 0xE0FFF;\n            default:\n                return false;\n        }\n    }\n    getAvailableFeatures(script, language) {\n        let features = [];\n        if (this.engine) features.push(...this.engine.getAvailableFeatures(script, language));\n        if (this.font.kern && features.indexOf(\"kern\") === -1) features.push(\"kern\");\n        return features;\n    }\n    stringsForGlyph(gid) {\n        let result = new Set;\n        let codePoints = this.font._cmapProcessor.codePointsForGlyph(gid);\n        for (let codePoint of codePoints)result.add(String.fromCodePoint(codePoint));\n        if (this.engine && this.engine.stringsForGlyph) for (let string of this.engine.stringsForGlyph(gid))result.add(string);\n        return Array.from(result);\n    }\n    constructor(font){\n        this.font = font;\n        this.unicodeLayoutEngine = null;\n        this.kernProcessor = null;\n        // Choose an advanced layout engine. We try the AAT morx table first since more\n        // scripts are currently supported because the shaping logic is built into the font.\n        if (this.font.morx) this.engine = new (0, $ba6dd74203be8728$export$2e2bcd8739ae039)(this.font);\n        else if (this.font.GSUB || this.font.GPOS) this.engine = new (0, $a62492810de27e3d$export$2e2bcd8739ae039)(this.font);\n    }\n}\n\n\n\n\n\n\nconst $f43aec954cdfdf21$var$SVG_COMMANDS = {\n    moveTo: \"M\",\n    lineTo: \"L\",\n    quadraticCurveTo: \"Q\",\n    bezierCurveTo: \"C\",\n    closePath: \"Z\"\n};\nclass $f43aec954cdfdf21$export$2e2bcd8739ae039 {\n    /**\n   * Compiles the path to a JavaScript function that can be applied with\n   * a graphics context in order to render the path.\n   * @return {string}\n   */ toFunction() {\n        return (ctx)=>{\n            this.commands.forEach((c)=>{\n                return ctx[c.command].apply(ctx, c.args);\n            });\n        };\n    }\n    /**\n   * Converts the path to an SVG path data string\n   * @return {string}\n   */ toSVG() {\n        let cmds = this.commands.map((c)=>{\n            let args = c.args.map((arg)=>Math.round(arg * 100) / 100);\n            return `${$f43aec954cdfdf21$var$SVG_COMMANDS[c.command]}${args.join(\" \")}`;\n        });\n        return cmds.join(\"\");\n    }\n    /**\n   * Gets the \"control box\" of a path.\n   * This is like the bounding box, but it includes all points including\n   * control points of bezier segments and is much faster to compute than\n   * the real bounding box.\n   * @type {BBox}\n   */ get cbox() {\n        if (!this._cbox) {\n            let cbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039);\n            for (let command1 of this.commands)for(let i = 0; i < command1.args.length; i += 2)cbox.addPoint(command1.args[i], command1.args[i + 1]);\n            this._cbox = Object.freeze(cbox);\n        }\n        return this._cbox;\n    }\n    /**\n   * Gets the exact bounding box of the path by evaluating curve segments.\n   * Slower to compute than the control box, but more accurate.\n   * @type {BBox}\n   */ get bbox() {\n        if (this._bbox) return this._bbox;\n        let bbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039);\n        let cx = 0, cy = 0;\n        let f = (t)=>Math.pow(1 - t, 3) * p0[i] + 3 * Math.pow(1 - t, 2) * t * p1[i] + 3 * (1 - t) * Math.pow(t, 2) * p2[i] + Math.pow(t, 3) * p3[i];\n        for (let c of this.commands)switch(c.command){\n            case \"moveTo\":\n            case \"lineTo\":\n                let [x, y] = c.args;\n                bbox.addPoint(x, y);\n                cx = x;\n                cy = y;\n                break;\n            case \"quadraticCurveTo\":\n            case \"bezierCurveTo\":\n                if (c.command === \"quadraticCurveTo\") {\n                    // http://fontforge.org/bezier.html\n                    var [qp1x, qp1y, p3x, p3y] = c.args;\n                    var cp1x = cx + 2 / 3 * (qp1x - cx); // CP1 = QP0 + 2/3 * (QP1-QP0)\n                    var cp1y = cy + 2 / 3 * (qp1y - cy);\n                    var cp2x = p3x + 2 / 3 * (qp1x - p3x); // CP2 = QP2 + 2/3 * (QP1-QP2)\n                    var cp2y = p3y + 2 / 3 * (qp1y - p3y);\n                } else var [cp1x, cp1y, cp2x, cp2y, p3x, p3y] = c.args;\n                // http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n                bbox.addPoint(p3x, p3y);\n                var p0 = [\n                    cx,\n                    cy\n                ];\n                var p1 = [\n                    cp1x,\n                    cp1y\n                ];\n                var p2 = [\n                    cp2x,\n                    cp2y\n                ];\n                var p3 = [\n                    p3x,\n                    p3y\n                ];\n                for(var i = 0; i <= 1; i++){\n                    let b = 6 * p0[i] - 12 * p1[i] + 6 * p2[i];\n                    let a = -3 * p0[i] + 9 * p1[i] - 9 * p2[i] + 3 * p3[i];\n                    c = 3 * p1[i] - 3 * p0[i];\n                    if (a === 0) {\n                        if (b === 0) continue;\n                        let t = -c / b;\n                        if (0 < t && t < 1) {\n                            if (i === 0) bbox.addPoint(f(t), bbox.maxY);\n                            else if (i === 1) bbox.addPoint(bbox.maxX, f(t));\n                        }\n                        continue;\n                    }\n                    let b2ac = Math.pow(b, 2) - 4 * c * a;\n                    if (b2ac < 0) continue;\n                    let t1 = (-b + Math.sqrt(b2ac)) / (2 * a);\n                    if (0 < t1 && t1 < 1) {\n                        if (i === 0) bbox.addPoint(f(t1), bbox.maxY);\n                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t1));\n                    }\n                    let t2 = (-b - Math.sqrt(b2ac)) / (2 * a);\n                    if (0 < t2 && t2 < 1) {\n                        if (i === 0) bbox.addPoint(f(t2), bbox.maxY);\n                        else if (i === 1) bbox.addPoint(bbox.maxX, f(t2));\n                    }\n                }\n                cx = p3x;\n                cy = p3y;\n                break;\n        }\n        return this._bbox = Object.freeze(bbox);\n    }\n    /**\n   * Applies a mapping function to each point in the path.\n   * @param {function} fn\n   * @return {Path}\n   */ mapPoints(fn) {\n        let path = new $f43aec954cdfdf21$export$2e2bcd8739ae039;\n        for (let c of this.commands){\n            let args = [];\n            for(let i = 0; i < c.args.length; i += 2){\n                let [x, y] = fn(c.args[i], c.args[i + 1]);\n                args.push(x, y);\n            }\n            path[c.command](...args);\n        }\n        return path;\n    }\n    /**\n   * Transforms the path by the given matrix.\n   */ transform(m0, m1, m2, m3, m4, m5) {\n        return this.mapPoints((x, y)=>{\n            const tx = m0 * x + m2 * y + m4;\n            const ty = m1 * x + m3 * y + m5;\n            return [\n                tx,\n                ty\n            ];\n        });\n    }\n    /**\n   * Translates the path by the given offset.\n   */ translate(x, y) {\n        return this.transform(1, 0, 0, 1, x, y);\n    }\n    /**\n   * Rotates the path by the given angle (in radians).\n   */ rotate(angle) {\n        let cos = Math.cos(angle);\n        let sin = Math.sin(angle);\n        return this.transform(cos, sin, -sin, cos, 0, 0);\n    }\n    /**\n   * Scales the path.\n   */ scale(scaleX, scaleY = scaleX) {\n        return this.transform(scaleX, 0, 0, scaleY, 0, 0);\n    }\n    constructor(){\n        this.commands = [];\n        this._bbox = null;\n        this._cbox = null;\n    }\n}\nfor (let command of [\n    \"moveTo\",\n    \"lineTo\",\n    \"quadraticCurveTo\",\n    \"bezierCurveTo\",\n    \"closePath\"\n])$f43aec954cdfdf21$export$2e2bcd8739ae039.prototype[command] = function(...args) {\n    this._bbox = this._cbox = null;\n    this.commands.push({\n        command: command,\n        args: args\n    });\n    return this;\n};\n\n\n\nvar $7713b9b7b438dff8$export$2e2bcd8739ae039 = [\n    \".notdef\",\n    \".null\",\n    \"nonmarkingreturn\",\n    \"space\",\n    \"exclam\",\n    \"quotedbl\",\n    \"numbersign\",\n    \"dollar\",\n    \"percent\",\n    \"ampersand\",\n    \"quotesingle\",\n    \"parenleft\",\n    \"parenright\",\n    \"asterisk\",\n    \"plus\",\n    \"comma\",\n    \"hyphen\",\n    \"period\",\n    \"slash\",\n    \"zero\",\n    \"one\",\n    \"two\",\n    \"three\",\n    \"four\",\n    \"five\",\n    \"six\",\n    \"seven\",\n    \"eight\",\n    \"nine\",\n    \"colon\",\n    \"semicolon\",\n    \"less\",\n    \"equal\",\n    \"greater\",\n    \"question\",\n    \"at\",\n    \"A\",\n    \"B\",\n    \"C\",\n    \"D\",\n    \"E\",\n    \"F\",\n    \"G\",\n    \"H\",\n    \"I\",\n    \"J\",\n    \"K\",\n    \"L\",\n    \"M\",\n    \"N\",\n    \"O\",\n    \"P\",\n    \"Q\",\n    \"R\",\n    \"S\",\n    \"T\",\n    \"U\",\n    \"V\",\n    \"W\",\n    \"X\",\n    \"Y\",\n    \"Z\",\n    \"bracketleft\",\n    \"backslash\",\n    \"bracketright\",\n    \"asciicircum\",\n    \"underscore\",\n    \"grave\",\n    \"a\",\n    \"b\",\n    \"c\",\n    \"d\",\n    \"e\",\n    \"f\",\n    \"g\",\n    \"h\",\n    \"i\",\n    \"j\",\n    \"k\",\n    \"l\",\n    \"m\",\n    \"n\",\n    \"o\",\n    \"p\",\n    \"q\",\n    \"r\",\n    \"s\",\n    \"t\",\n    \"u\",\n    \"v\",\n    \"w\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"braceleft\",\n    \"bar\",\n    \"braceright\",\n    \"asciitilde\",\n    \"Adieresis\",\n    \"Aring\",\n    \"Ccedilla\",\n    \"Eacute\",\n    \"Ntilde\",\n    \"Odieresis\",\n    \"Udieresis\",\n    \"aacute\",\n    \"agrave\",\n    \"acircumflex\",\n    \"adieresis\",\n    \"atilde\",\n    \"aring\",\n    \"ccedilla\",\n    \"eacute\",\n    \"egrave\",\n    \"ecircumflex\",\n    \"edieresis\",\n    \"iacute\",\n    \"igrave\",\n    \"icircumflex\",\n    \"idieresis\",\n    \"ntilde\",\n    \"oacute\",\n    \"ograve\",\n    \"ocircumflex\",\n    \"odieresis\",\n    \"otilde\",\n    \"uacute\",\n    \"ugrave\",\n    \"ucircumflex\",\n    \"udieresis\",\n    \"dagger\",\n    \"degree\",\n    \"cent\",\n    \"sterling\",\n    \"section\",\n    \"bullet\",\n    \"paragraph\",\n    \"germandbls\",\n    \"registered\",\n    \"copyright\",\n    \"trademark\",\n    \"acute\",\n    \"dieresis\",\n    \"notequal\",\n    \"AE\",\n    \"Oslash\",\n    \"infinity\",\n    \"plusminus\",\n    \"lessequal\",\n    \"greaterequal\",\n    \"yen\",\n    \"mu\",\n    \"partialdiff\",\n    \"summation\",\n    \"product\",\n    \"pi\",\n    \"integral\",\n    \"ordfeminine\",\n    \"ordmasculine\",\n    \"Omega\",\n    \"ae\",\n    \"oslash\",\n    \"questiondown\",\n    \"exclamdown\",\n    \"logicalnot\",\n    \"radical\",\n    \"florin\",\n    \"approxequal\",\n    \"Delta\",\n    \"guillemotleft\",\n    \"guillemotright\",\n    \"ellipsis\",\n    \"nonbreakingspace\",\n    \"Agrave\",\n    \"Atilde\",\n    \"Otilde\",\n    \"OE\",\n    \"oe\",\n    \"endash\",\n    \"emdash\",\n    \"quotedblleft\",\n    \"quotedblright\",\n    \"quoteleft\",\n    \"quoteright\",\n    \"divide\",\n    \"lozenge\",\n    \"ydieresis\",\n    \"Ydieresis\",\n    \"fraction\",\n    \"currency\",\n    \"guilsinglleft\",\n    \"guilsinglright\",\n    \"fi\",\n    \"fl\",\n    \"daggerdbl\",\n    \"periodcentered\",\n    \"quotesinglbase\",\n    \"quotedblbase\",\n    \"perthousand\",\n    \"Acircumflex\",\n    \"Ecircumflex\",\n    \"Aacute\",\n    \"Edieresis\",\n    \"Egrave\",\n    \"Iacute\",\n    \"Icircumflex\",\n    \"Idieresis\",\n    \"Igrave\",\n    \"Oacute\",\n    \"Ocircumflex\",\n    \"apple\",\n    \"Ograve\",\n    \"Uacute\",\n    \"Ucircumflex\",\n    \"Ugrave\",\n    \"dotlessi\",\n    \"circumflex\",\n    \"tilde\",\n    \"macron\",\n    \"breve\",\n    \"dotaccent\",\n    \"ring\",\n    \"cedilla\",\n    \"hungarumlaut\",\n    \"ogonek\",\n    \"caron\",\n    \"Lslash\",\n    \"lslash\",\n    \"Scaron\",\n    \"scaron\",\n    \"Zcaron\",\n    \"zcaron\",\n    \"brokenbar\",\n    \"Eth\",\n    \"eth\",\n    \"Yacute\",\n    \"yacute\",\n    \"Thorn\",\n    \"thorn\",\n    \"minus\",\n    \"multiply\",\n    \"onesuperior\",\n    \"twosuperior\",\n    \"threesuperior\",\n    \"onehalf\",\n    \"onequarter\",\n    \"threequarters\",\n    \"franc\",\n    \"Gbreve\",\n    \"gbreve\",\n    \"Idotaccent\",\n    \"Scedilla\",\n    \"scedilla\",\n    \"Cacute\",\n    \"cacute\",\n    \"Ccaron\",\n    \"ccaron\",\n    \"dcroat\"\n];\n\n\nclass $f92906be28e61769$export$2e2bcd8739ae039 {\n    _getPath() {\n        return new (0, $f43aec954cdfdf21$export$2e2bcd8739ae039)();\n    }\n    _getCBox() {\n        return this.path.cbox;\n    }\n    _getBBox() {\n        return this.path.bbox;\n    }\n    _getTableMetrics(table) {\n        if (this.id < table.metrics.length) return table.metrics.get(this.id);\n        let metric = table.metrics.get(table.metrics.length - 1);\n        let res = {\n            advance: metric ? metric.advance : 0,\n            bearing: table.bearings.get(this.id - table.metrics.length) || 0\n        };\n        return res;\n    }\n    _getMetrics(cbox) {\n        if (this._metrics) return this._metrics;\n        let { advance: advanceWidth , bearing: leftBearing  } = this._getTableMetrics(this._font.hmtx);\n        // For vertical metrics, use vmtx if available, or fall back to global data from OS/2 or hhea\n        if (this._font.vmtx) var { advance: advanceHeight , bearing: topBearing  } = this._getTableMetrics(this._font.vmtx);\n        else {\n            let os2;\n            if (typeof cbox === \"undefined\" || cbox === null) ({ cbox: cbox  } = this);\n            if ((os2 = this._font[\"OS/2\"]) && os2.version > 0) {\n                var advanceHeight = Math.abs(os2.typoAscender - os2.typoDescender);\n                var topBearing = os2.typoAscender - cbox.maxY;\n            } else {\n                let { hhea: hhea  } = this._font;\n                var advanceHeight = Math.abs(hhea.ascent - hhea.descent);\n                var topBearing = hhea.ascent - cbox.maxY;\n            }\n        }\n        if (this._font._variationProcessor && this._font.HVAR) advanceWidth += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR);\n        return this._metrics = {\n            advanceWidth: advanceWidth,\n            advanceHeight: advanceHeight,\n            leftBearing: leftBearing,\n            topBearing: topBearing\n        };\n    }\n    /**\n   * The glyph’s control box.\n   * This is often the same as the bounding box, but is faster to compute.\n   * Because of the way bezier curves are defined, some of the control points\n   * can be outside of the bounding box. Where `bbox` takes this into account,\n   * `cbox` does not. Thus, cbox is less accurate, but faster to compute.\n   * See [here](http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html#section-2)\n   * for a more detailed description.\n   *\n   * @type {BBox}\n   */ get cbox() {\n        return this._getCBox();\n    }\n    /**\n   * The glyph’s bounding box, i.e. the rectangle that encloses the\n   * glyph outline as tightly as possible.\n   * @type {BBox}\n   */ get bbox() {\n        return this._getBBox();\n    }\n    /**\n   * A vector Path object representing the glyph outline.\n   * @type {Path}\n   */ get path() {\n        // Cache the path so we only decode it once\n        // Decoding is actually performed by subclasses\n        return this._getPath();\n    }\n    /**\n   * Returns a path scaled to the given font size.\n   * @param {number} size\n   * @return {Path}\n   */ getScaledPath(size) {\n        let scale = 1 / this._font.unitsPerEm * size;\n        return this.path.scale(scale);\n    }\n    /**\n   * The glyph's advance width.\n   * @type {number}\n   */ get advanceWidth() {\n        return this._getMetrics().advanceWidth;\n    }\n    /**\n   * The glyph's advance height.\n   * @type {number}\n   */ get advanceHeight() {\n        return this._getMetrics().advanceHeight;\n    }\n    get ligatureCaretPositions() {}\n    _getName() {\n        let { post: post  } = this._font;\n        if (!post) return null;\n        switch(post.version){\n            case 1:\n                return (0, $7713b9b7b438dff8$export$2e2bcd8739ae039)[this.id];\n            case 2:\n                let id = post.glyphNameIndex[this.id];\n                if (id < (0, $7713b9b7b438dff8$export$2e2bcd8739ae039).length) return (0, $7713b9b7b438dff8$export$2e2bcd8739ae039)[id];\n                return post.names[id - (0, $7713b9b7b438dff8$export$2e2bcd8739ae039).length];\n            case 2.5:\n                return (0, $7713b9b7b438dff8$export$2e2bcd8739ae039)[this.id + post.offsets[this.id]];\n            case 4:\n                return String.fromCharCode(post.map[this.id]);\n        }\n    }\n    /**\n   * The glyph's name\n   * @type {string}\n   */ get name() {\n        return this._getName();\n    }\n    /**\n   * Renders the glyph to the given graphics context, at the specified font size.\n   * @param {CanvasRenderingContext2d} ctx\n   * @param {number} size\n   */ render(ctx, size) {\n        ctx.save();\n        let scale = 1 / this._font.head.unitsPerEm * size;\n        ctx.scale(scale, scale);\n        let fn = this.path.toFunction();\n        fn(ctx);\n        ctx.fill();\n        ctx.restore();\n    }\n    constructor(id, codePoints, font){\n        /**\n     * The glyph id in the font\n     * @type {number}\n     */ this.id = id;\n        /**\n     * An array of unicode code points that are represented by this glyph.\n     * There can be multiple code points in the case of ligatures and other glyphs\n     * that represent multiple visual characters.\n     * @type {number[]}\n     */ this.codePoints = codePoints;\n        this._font = font;\n        // TODO: get this info from GDEF if available\n        this.isMark = this.codePoints.length > 0 && this.codePoints.every((0, $6uUbQ$isMark));\n        this.isLigature = this.codePoints.length > 1;\n    }\n}\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"cbox\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"path\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"advanceWidth\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"advanceHeight\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $f92906be28e61769$export$2e2bcd8739ae039.prototype, \"name\", null);\n\n\n\n\n\n// The header for both simple and composite glyphs\nlet $69aac16029968692$var$GlyfHeader = new $6uUbQ$Struct({\n    numberOfContours: $6uUbQ$int16,\n    xMin: $6uUbQ$int16,\n    yMin: $6uUbQ$int16,\n    xMax: $6uUbQ$int16,\n    yMax: $6uUbQ$int16\n});\n// Flags for simple glyphs\nconst $69aac16029968692$var$ON_CURVE = 1;\nconst $69aac16029968692$var$X_SHORT_VECTOR = 2;\nconst $69aac16029968692$var$Y_SHORT_VECTOR = 4;\nconst $69aac16029968692$var$REPEAT = 8;\nconst $69aac16029968692$var$SAME_X = 16;\nconst $69aac16029968692$var$SAME_Y = 32;\n// Flags for composite glyphs\nconst $69aac16029968692$var$ARG_1_AND_2_ARE_WORDS = 1;\nconst $69aac16029968692$var$ARGS_ARE_XY_VALUES = 2;\nconst $69aac16029968692$var$ROUND_XY_TO_GRID = 4;\nconst $69aac16029968692$var$WE_HAVE_A_SCALE = 8;\nconst $69aac16029968692$var$MORE_COMPONENTS = 32;\nconst $69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE = 64;\nconst $69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO = 128;\nconst $69aac16029968692$var$WE_HAVE_INSTRUCTIONS = 256;\nconst $69aac16029968692$var$USE_MY_METRICS = 512;\nconst $69aac16029968692$var$OVERLAP_COMPOUND = 1024;\nconst $69aac16029968692$var$SCALED_COMPONENT_OFFSET = 2048;\nconst $69aac16029968692$var$UNSCALED_COMPONENT_OFFSET = 4096;\nclass $69aac16029968692$export$baf26146a414f24a {\n    copy() {\n        return new $69aac16029968692$export$baf26146a414f24a(this.onCurve, this.endContour, this.x, this.y);\n    }\n    constructor(onCurve, endContour, x = 0, y = 0){\n        this.onCurve = onCurve;\n        this.endContour = endContour;\n        this.x = x;\n        this.y = y;\n    }\n}\n// Represents a component in a composite glyph\nclass $69aac16029968692$var$Component {\n    constructor(glyphID, dx, dy){\n        this.glyphID = glyphID;\n        this.dx = dx;\n        this.dy = dy;\n        this.pos = 0;\n        this.scaleX = this.scaleY = 1;\n        this.scale01 = this.scale10 = 0;\n    }\n}\nclass $69aac16029968692$export$2e2bcd8739ae039 extends (0, $f92906be28e61769$export$2e2bcd8739ae039) {\n    // Parses just the glyph header and returns the bounding box\n    _getCBox(internal) {\n        // We need to decode the glyph if variation processing is requested,\n        // so it's easier just to recompute the path's cbox after decoding.\n        if (this._font._variationProcessor && !internal) return this.path.cbox;\n        let stream = this._font._getTableStream(\"glyf\");\n        stream.pos += this._font.loca.offsets[this.id];\n        let glyph = $69aac16029968692$var$GlyfHeader.decode(stream);\n        let cbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)(glyph.xMin, glyph.yMin, glyph.xMax, glyph.yMax);\n        return Object.freeze(cbox);\n    }\n    // Parses a single glyph coordinate\n    _parseGlyphCoord(stream, prev, short, same) {\n        if (short) {\n            var val = stream.readUInt8();\n            if (!same) val = -val;\n            val += prev;\n        } else if (same) var val = prev;\n        else var val = prev + stream.readInt16BE();\n        return val;\n    }\n    // Decodes the glyph data into points for simple glyphs,\n    // or components for composite glyphs\n    _decode() {\n        let glyfPos = this._font.loca.offsets[this.id];\n        let nextPos = this._font.loca.offsets[this.id + 1];\n        // Nothing to do if there is no data for this glyph\n        if (glyfPos === nextPos) return null;\n        let stream = this._font._getTableStream(\"glyf\");\n        stream.pos += glyfPos;\n        let startPos = stream.pos;\n        let glyph = $69aac16029968692$var$GlyfHeader.decode(stream);\n        if (glyph.numberOfContours > 0) this._decodeSimple(glyph, stream);\n        else if (glyph.numberOfContours < 0) this._decodeComposite(glyph, stream, startPos);\n        return glyph;\n    }\n    _decodeSimple(glyph, stream) {\n        // this is a simple glyph\n        glyph.points = [];\n        let endPtsOfContours = new $6uUbQ$Array($6uUbQ$uint16, glyph.numberOfContours).decode(stream);\n        glyph.instructions = new $6uUbQ$Array($6uUbQ$uint8, $6uUbQ$uint16).decode(stream);\n        let flags = [];\n        let numCoords = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n        while(flags.length < numCoords){\n            var flag = stream.readUInt8();\n            flags.push(flag);\n            // check for repeat flag\n            if (flag & $69aac16029968692$var$REPEAT) {\n                let count = stream.readUInt8();\n                for(let j = 0; j < count; j++)flags.push(flag);\n            }\n        }\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            let point = new $69aac16029968692$export$baf26146a414f24a(!!(flag & $69aac16029968692$var$ON_CURVE), endPtsOfContours.indexOf(i) >= 0, 0, 0);\n            glyph.points.push(point);\n        }\n        let px = 0;\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            glyph.points[i].x = px = this._parseGlyphCoord(stream, px, flag & $69aac16029968692$var$X_SHORT_VECTOR, flag & $69aac16029968692$var$SAME_X);\n        }\n        let py = 0;\n        for(var i = 0; i < flags.length; i++){\n            var flag = flags[i];\n            glyph.points[i].y = py = this._parseGlyphCoord(stream, py, flag & $69aac16029968692$var$Y_SHORT_VECTOR, flag & $69aac16029968692$var$SAME_Y);\n        }\n        if (this._font._variationProcessor) {\n            let points = glyph.points.slice();\n            points.push(...this._getPhantomPoints(glyph));\n            this._font._variationProcessor.transformPoints(this.id, points);\n            glyph.phantomPoints = points.slice(-4);\n        }\n        return;\n    }\n    _decodeComposite(glyph, stream, offset = 0) {\n        // this is a composite glyph\n        glyph.components = [];\n        let haveInstructions = false;\n        let flags = $69aac16029968692$var$MORE_COMPONENTS;\n        while(flags & $69aac16029968692$var$MORE_COMPONENTS){\n            flags = stream.readUInt16BE();\n            let gPos = stream.pos - offset;\n            let glyphID = stream.readUInt16BE();\n            if (!haveInstructions) haveInstructions = (flags & $69aac16029968692$var$WE_HAVE_INSTRUCTIONS) !== 0;\n            if (flags & $69aac16029968692$var$ARG_1_AND_2_ARE_WORDS) {\n                var dx = stream.readInt16BE();\n                var dy = stream.readInt16BE();\n            } else {\n                var dx = stream.readInt8();\n                var dy = stream.readInt8();\n            }\n            var component = new $69aac16029968692$var$Component(glyphID, dx, dy);\n            component.pos = gPos;\n            if (flags & $69aac16029968692$var$WE_HAVE_A_SCALE) // fixed number with 14 bits of fraction\n            component.scaleX = component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            else if (flags & $69aac16029968692$var$WE_HAVE_AN_X_AND_Y_SCALE) {\n                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            } else if (flags & $69aac16029968692$var$WE_HAVE_A_TWO_BY_TWO) {\n                component.scaleX = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scale01 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scale10 = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n                component.scaleY = (stream.readUInt8() << 24 | stream.readUInt8() << 16) / 1073741824;\n            }\n            glyph.components.push(component);\n        }\n        if (this._font._variationProcessor) {\n            let points = [];\n            for(let j = 0; j < glyph.components.length; j++){\n                var component = glyph.components[j];\n                points.push(new $69aac16029968692$export$baf26146a414f24a(true, true, component.dx, component.dy));\n            }\n            points.push(...this._getPhantomPoints(glyph));\n            this._font._variationProcessor.transformPoints(this.id, points);\n            glyph.phantomPoints = points.splice(-4, 4);\n            for(let i = 0; i < points.length; i++){\n                let point = points[i];\n                glyph.components[i].dx = point.x;\n                glyph.components[i].dy = point.y;\n            }\n        }\n        return haveInstructions;\n    }\n    _getPhantomPoints(glyph) {\n        let cbox = this._getCBox(true);\n        if (this._metrics == null) this._metrics = (0, $f92906be28e61769$export$2e2bcd8739ae039).prototype._getMetrics.call(this, cbox);\n        let { advanceWidth: advanceWidth , advanceHeight: advanceHeight , leftBearing: leftBearing , topBearing: topBearing  } = this._metrics;\n        return [\n            new $69aac16029968692$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing, 0),\n            new $69aac16029968692$export$baf26146a414f24a(false, true, glyph.xMin - leftBearing + advanceWidth, 0),\n            new $69aac16029968692$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing),\n            new $69aac16029968692$export$baf26146a414f24a(false, true, 0, glyph.yMax + topBearing + advanceHeight)\n        ];\n    }\n    // Decodes font data, resolves composite glyphs, and returns an array of contours\n    _getContours() {\n        let glyph = this._decode();\n        if (!glyph) return [];\n        let points = [];\n        if (glyph.numberOfContours < 0) // resolve composite glyphs\n        for (let component of glyph.components){\n            let contours = this._font.getGlyph(component.glyphID)._getContours();\n            for(let i = 0; i < contours.length; i++){\n                let contour = contours[i];\n                for(let j = 0; j < contour.length; j++){\n                    let point = contour[j];\n                    let x = point.x * component.scaleX + point.y * component.scale01 + component.dx;\n                    let y = point.y * component.scaleY + point.x * component.scale10 + component.dy;\n                    points.push(new $69aac16029968692$export$baf26146a414f24a(point.onCurve, point.endContour, x, y));\n                }\n            }\n        }\n        else points = glyph.points || [];\n        // Recompute and cache metrics if we performed variation processing, and don't have an HVAR table\n        if (glyph.phantomPoints && !this._font.directory.tables.HVAR) {\n            this._metrics.advanceWidth = glyph.phantomPoints[1].x - glyph.phantomPoints[0].x;\n            this._metrics.advanceHeight = glyph.phantomPoints[3].y - glyph.phantomPoints[2].y;\n            this._metrics.leftBearing = glyph.xMin - glyph.phantomPoints[0].x;\n            this._metrics.topBearing = glyph.phantomPoints[2].y - glyph.yMax;\n        }\n        let contours = [];\n        let cur = [];\n        for(let k = 0; k < points.length; k++){\n            var point = points[k];\n            cur.push(point);\n            if (point.endContour) {\n                contours.push(cur);\n                cur = [];\n            }\n        }\n        return contours;\n    }\n    _getMetrics() {\n        if (this._metrics) return this._metrics;\n        let cbox = this._getCBox(true);\n        super._getMetrics(cbox);\n        if (this._font._variationProcessor && !this._font.HVAR) // No HVAR table, decode the glyph. This triggers recomputation of metrics.\n        this.path;\n        return this._metrics;\n    }\n    // Converts contours to a Path object that can be rendered\n    _getPath() {\n        let contours = this._getContours();\n        let path = new (0, $f43aec954cdfdf21$export$2e2bcd8739ae039);\n        for(let i = 0; i < contours.length; i++){\n            let contour = contours[i];\n            let firstPt = contour[0];\n            let lastPt = contour[contour.length - 1];\n            let start = 0;\n            if (firstPt.onCurve) {\n                // The first point will be consumed by the moveTo command, so skip in the loop\n                var curvePt = null;\n                start = 1;\n            } else {\n                if (lastPt.onCurve) // Start at the last point if the first point is off curve and the last point is on curve\n                firstPt = lastPt;\n                else // Start at the middle if both the first and last points are off curve\n                firstPt = new $69aac16029968692$export$baf26146a414f24a(false, false, (firstPt.x + lastPt.x) / 2, (firstPt.y + lastPt.y) / 2);\n                var curvePt = firstPt;\n            }\n            path.moveTo(firstPt.x, firstPt.y);\n            for(let j = start; j < contour.length; j++){\n                let pt = contour[j];\n                let prevPt = j === 0 ? firstPt : contour[j - 1];\n                if (prevPt.onCurve && pt.onCurve) path.lineTo(pt.x, pt.y);\n                else if (prevPt.onCurve && !pt.onCurve) var curvePt = pt;\n                else if (!prevPt.onCurve && !pt.onCurve) {\n                    let midX = (prevPt.x + pt.x) / 2;\n                    let midY = (prevPt.y + pt.y) / 2;\n                    path.quadraticCurveTo(prevPt.x, prevPt.y, midX, midY);\n                    var curvePt = pt;\n                } else if (!prevPt.onCurve && pt.onCurve) {\n                    path.quadraticCurveTo(curvePt.x, curvePt.y, pt.x, pt.y);\n                    var curvePt = null;\n                } else throw new Error(\"Unknown TTF path state\");\n            }\n            // Connect the first and last points\n            if (curvePt) path.quadraticCurveTo(curvePt.x, curvePt.y, firstPt.x, firstPt.y);\n            path.closePath();\n        }\n        return path;\n    }\n    constructor(...args){\n        super(...args);\n        (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"TTF\");\n    }\n}\n\n\n\n\n\nclass $62cc5109c6101893$export$2e2bcd8739ae039 extends (0, $f92906be28e61769$export$2e2bcd8739ae039) {\n    _getName() {\n        if (this._font.CFF2) return super._getName();\n        return this._font[\"CFF \"].getGlyphName(this.id);\n    }\n    bias(s) {\n        if (s.length < 1240) return 107;\n        else if (s.length < 33900) return 1131;\n        else return 32768;\n    }\n    _getPath() {\n        let cff = this._font.CFF2 || this._font[\"CFF \"];\n        let { stream: stream  } = cff;\n        let str = cff.topDict.CharStrings[this.id];\n        let end = str.offset + str.length;\n        stream.pos = str.offset;\n        let path = new (0, $f43aec954cdfdf21$export$2e2bcd8739ae039);\n        let stack = [];\n        let trans = [];\n        let width = null;\n        let nStems = 0;\n        let x1 = 0, y1 = 0;\n        let usedGsubrs;\n        let usedSubrs;\n        let open = false;\n        this._usedGsubrs = usedGsubrs = {};\n        this._usedSubrs = usedSubrs = {};\n        let gsubrs = cff.globalSubrIndex || [];\n        let gsubrsBias = this.bias(gsubrs);\n        let privateDict = cff.privateDictForGlyph(this.id) || {};\n        let subrs = privateDict.Subrs || [];\n        let subrsBias = this.bias(subrs);\n        let vstore = cff.topDict.vstore && cff.topDict.vstore.itemVariationStore;\n        let vsindex = privateDict.vsindex;\n        let variationProcessor = this._font._variationProcessor;\n        function checkWidth() {\n            if (width == null) width = stack.shift() + privateDict.nominalWidthX;\n        }\n        function parseStems() {\n            if (stack.length % 2 !== 0) checkWidth();\n            nStems += stack.length >> 1;\n            return stack.length = 0;\n        }\n        function moveTo(x, y) {\n            if (open) path.closePath();\n            path.moveTo(x, y);\n            open = true;\n        }\n        let parse = function() {\n            while(stream.pos < end){\n                let op = stream.readUInt8();\n                if (op < 32) {\n                    let index, subr, phase;\n                    switch(op){\n                        case 1:\n                        case 3:\n                        case 18:\n                        case 23:\n                            parseStems();\n                            break;\n                        case 4:\n                            if (stack.length > 1) checkWidth();\n                            y1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 5:\n                            while(stack.length >= 2){\n                                x1 += stack.shift();\n                                y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                            }\n                            break;\n                        case 6:\n                        case 7:\n                            phase = op === 6;\n                            while(stack.length >= 1){\n                                if (phase) x1 += stack.shift();\n                                else y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                                phase = !phase;\n                            }\n                            break;\n                        case 8:\n                            while(stack.length > 0){\n                                var c1x = x1 + stack.shift();\n                                var c1y = y1 + stack.shift();\n                                var c2x = c1x + stack.shift();\n                                var c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 10:\n                            index = stack.pop() + subrsBias;\n                            subr = subrs[index];\n                            if (subr) {\n                                usedSubrs[index] = true;\n                                var p = stream.pos;\n                                var e = end;\n                                stream.pos = subr.offset;\n                                end = subr.offset + subr.length;\n                                parse();\n                                stream.pos = p;\n                                end = e;\n                            }\n                            break;\n                        case 11:\n                            if (cff.version >= 2) break;\n                            return;\n                        case 14:\n                            if (cff.version >= 2) break;\n                            if (stack.length > 0) checkWidth();\n                            if (open) {\n                                path.closePath();\n                                open = false;\n                            }\n                            break;\n                        case 15:\n                            if (cff.version < 2) throw new Error(\"vsindex operator not supported in CFF v1\");\n                            vsindex = stack.pop();\n                            break;\n                        case 16:\n                            {\n                                if (cff.version < 2) throw new Error(\"blend operator not supported in CFF v1\");\n                                if (!variationProcessor) throw new Error(\"blend operator in non-variation font\");\n                                let blendVector = variationProcessor.getBlendVector(vstore, vsindex);\n                                let numBlends = stack.pop();\n                                let numOperands = numBlends * blendVector.length;\n                                let delta = stack.length - numOperands;\n                                let base = delta - numBlends;\n                                for(let i = 0; i < numBlends; i++){\n                                    let sum = stack[base + i];\n                                    for(let j = 0; j < blendVector.length; j++)sum += blendVector[j] * stack[delta++];\n                                    stack[base + i] = sum;\n                                }\n                                while(numOperands--)stack.pop();\n                                break;\n                            }\n                        case 19:\n                        case 20:\n                            parseStems();\n                            stream.pos += nStems + 7 >> 3;\n                            break;\n                        case 21:\n                            if (stack.length > 2) checkWidth();\n                            x1 += stack.shift();\n                            y1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 22:\n                            if (stack.length > 1) checkWidth();\n                            x1 += stack.shift();\n                            moveTo(x1, y1);\n                            break;\n                        case 24:\n                            while(stack.length >= 8){\n                                var c1x = x1 + stack.shift();\n                                var c1y = y1 + stack.shift();\n                                var c2x = c1x + stack.shift();\n                                var c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            x1 += stack.shift();\n                            y1 += stack.shift();\n                            path.lineTo(x1, y1);\n                            break;\n                        case 25:\n                            while(stack.length >= 8){\n                                x1 += stack.shift();\n                                y1 += stack.shift();\n                                path.lineTo(x1, y1);\n                            }\n                            var c1x = x1 + stack.shift();\n                            var c1y = y1 + stack.shift();\n                            var c2x = c1x + stack.shift();\n                            var c2y = c1y + stack.shift();\n                            x1 = c2x + stack.shift();\n                            y1 = c2y + stack.shift();\n                            path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            break;\n                        case 26:\n                            if (stack.length % 2) x1 += stack.shift();\n                            while(stack.length >= 4){\n                                c1x = x1;\n                                c1y = y1 + stack.shift();\n                                c2x = c1x + stack.shift();\n                                c2y = c1y + stack.shift();\n                                x1 = c2x;\n                                y1 = c2y + stack.shift();\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 27:\n                            if (stack.length % 2) y1 += stack.shift();\n                            while(stack.length >= 4){\n                                c1x = x1 + stack.shift();\n                                c1y = y1;\n                                c2x = c1x + stack.shift();\n                                c2y = c1y + stack.shift();\n                                x1 = c2x + stack.shift();\n                                y1 = c2y;\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                            }\n                            break;\n                        case 28:\n                            stack.push(stream.readInt16BE());\n                            break;\n                        case 29:\n                            index = stack.pop() + gsubrsBias;\n                            subr = gsubrs[index];\n                            if (subr) {\n                                usedGsubrs[index] = true;\n                                var p = stream.pos;\n                                var e = end;\n                                stream.pos = subr.offset;\n                                end = subr.offset + subr.length;\n                                parse();\n                                stream.pos = p;\n                                end = e;\n                            }\n                            break;\n                        case 30:\n                        case 31:\n                            phase = op === 31;\n                            while(stack.length >= 4){\n                                if (phase) {\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1;\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    y1 = c2y + stack.shift();\n                                    x1 = c2x + (stack.length === 1 ? stack.shift() : 0);\n                                } else {\n                                    c1x = x1;\n                                    c1y = y1 + stack.shift();\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    x1 = c2x + stack.shift();\n                                    y1 = c2y + (stack.length === 1 ? stack.shift() : 0);\n                                }\n                                path.bezierCurveTo(c1x, c1y, c2x, c2y, x1, y1);\n                                phase = !phase;\n                            }\n                            break;\n                        case 12:\n                            op = stream.readUInt8();\n                            switch(op){\n                                case 3:\n                                    let a = stack.pop();\n                                    let b = stack.pop();\n                                    stack.push(a && b ? 1 : 0);\n                                    break;\n                                case 4:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a || b ? 1 : 0);\n                                    break;\n                                case 5:\n                                    a = stack.pop();\n                                    stack.push(a ? 0 : 1);\n                                    break;\n                                case 9:\n                                    a = stack.pop();\n                                    stack.push(Math.abs(a));\n                                    break;\n                                case 10:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a + b);\n                                    break;\n                                case 11:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a - b);\n                                    break;\n                                case 12:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a / b);\n                                    break;\n                                case 14:\n                                    a = stack.pop();\n                                    stack.push(-a);\n                                    break;\n                                case 15:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a === b ? 1 : 0);\n                                    break;\n                                case 18:\n                                    stack.pop();\n                                    break;\n                                case 20:\n                                    let val = stack.pop();\n                                    let idx = stack.pop();\n                                    trans[idx] = val;\n                                    break;\n                                case 21:\n                                    idx = stack.pop();\n                                    stack.push(trans[idx] || 0);\n                                    break;\n                                case 22:\n                                    let s1 = stack.pop();\n                                    let s2 = stack.pop();\n                                    let v1 = stack.pop();\n                                    let v2 = stack.pop();\n                                    stack.push(v1 <= v2 ? s1 : s2);\n                                    break;\n                                case 23:\n                                    stack.push(Math.random());\n                                    break;\n                                case 24:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(a * b);\n                                    break;\n                                case 26:\n                                    a = stack.pop();\n                                    stack.push(Math.sqrt(a));\n                                    break;\n                                case 27:\n                                    a = stack.pop();\n                                    stack.push(a, a);\n                                    break;\n                                case 28:\n                                    a = stack.pop();\n                                    b = stack.pop();\n                                    stack.push(b, a);\n                                    break;\n                                case 29:\n                                    idx = stack.pop();\n                                    if (idx < 0) idx = 0;\n                                    else if (idx > stack.length - 1) idx = stack.length - 1;\n                                    stack.push(stack[idx]);\n                                    break;\n                                case 30:\n                                    let n = stack.pop();\n                                    let j = stack.pop();\n                                    if (j >= 0) while(j > 0){\n                                        var t = stack[n - 1];\n                                        for(let i = n - 2; i >= 0; i--)stack[i + 1] = stack[i];\n                                        stack[0] = t;\n                                        j--;\n                                    }\n                                    else while(j < 0){\n                                        var t = stack[0];\n                                        for(let i = 0; i <= n; i++)stack[i] = stack[i + 1];\n                                        stack[n - 1] = t;\n                                        j++;\n                                    }\n                                    break;\n                                case 34:\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1;\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    let c3x = c2x + stack.shift();\n                                    let c3y = c2y;\n                                    let c4x = c3x + stack.shift();\n                                    let c4y = c3y;\n                                    let c5x = c4x + stack.shift();\n                                    let c5y = c4y;\n                                    let c6x = c5x + stack.shift();\n                                    let c6y = c5y;\n                                    x1 = c6x;\n                                    y1 = c6y;\n                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                                    break;\n                                case 35:\n                                    let pts = [];\n                                    for(let i = 0; i <= 5; i++){\n                                        x1 += stack.shift();\n                                        y1 += stack.shift();\n                                        pts.push(x1, y1);\n                                    }\n                                    path.bezierCurveTo(...pts.slice(0, 6));\n                                    path.bezierCurveTo(...pts.slice(6));\n                                    stack.shift(); // fd\n                                    break;\n                                case 36:\n                                    c1x = x1 + stack.shift();\n                                    c1y = y1 + stack.shift();\n                                    c2x = c1x + stack.shift();\n                                    c2y = c1y + stack.shift();\n                                    c3x = c2x + stack.shift();\n                                    c3y = c2y;\n                                    c4x = c3x + stack.shift();\n                                    c4y = c3y;\n                                    c5x = c4x + stack.shift();\n                                    c5y = c4y + stack.shift();\n                                    c6x = c5x + stack.shift();\n                                    c6y = c5y;\n                                    x1 = c6x;\n                                    y1 = c6y;\n                                    path.bezierCurveTo(c1x, c1y, c2x, c2y, c3x, c3y);\n                                    path.bezierCurveTo(c4x, c4y, c5x, c5y, c6x, c6y);\n                                    break;\n                                case 37:\n                                    let startx = x1;\n                                    let starty = y1;\n                                    pts = [];\n                                    for(let i1 = 0; i1 <= 4; i1++){\n                                        x1 += stack.shift();\n                                        y1 += stack.shift();\n                                        pts.push(x1, y1);\n                                    }\n                                    if (Math.abs(x1 - startx) > Math.abs(y1 - starty)) {\n                                        x1 += stack.shift();\n                                        y1 = starty;\n                                    } else {\n                                        x1 = startx;\n                                        y1 += stack.shift();\n                                    }\n                                    pts.push(x1, y1);\n                                    path.bezierCurveTo(...pts.slice(0, 6));\n                                    path.bezierCurveTo(...pts.slice(6));\n                                    break;\n                                default:\n                                    throw new Error(`Unknown op: 12 ${op}`);\n                            }\n                            break;\n                        default:\n                            throw new Error(`Unknown op: ${op}`);\n                    }\n                } else if (op < 247) stack.push(op - 139);\n                else if (op < 251) {\n                    var b1 = stream.readUInt8();\n                    stack.push((op - 247) * 256 + b1 + 108);\n                } else if (op < 255) {\n                    var b1 = stream.readUInt8();\n                    stack.push(-(op - 251) * 256 - b1 - 108);\n                } else stack.push(stream.readInt32BE() / 65536);\n            }\n        };\n        parse();\n        if (open) path.closePath();\n        return path;\n    }\n    constructor(...args){\n        super(...args);\n        (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"CFF\");\n    }\n}\n\n\n\n\n\nlet $25d8f049c222084c$var$SBIXImage = new $6uUbQ$Struct({\n    originX: $6uUbQ$uint16,\n    originY: $6uUbQ$uint16,\n    type: new $6uUbQ$String(4),\n    data: new $6uUbQ$Buffer((t)=>t.parent.buflen - t._currentOffset)\n});\nclass $25d8f049c222084c$export$2e2bcd8739ae039 extends (0, $69aac16029968692$export$2e2bcd8739ae039) {\n    /**\n   * Returns an object representing a glyph image at the given point size.\n   * The object has a data property with a Buffer containing the actual image data,\n   * along with the image type, and origin.\n   *\n   * @param {number} size\n   * @return {object}\n   */ getImageForSize(size) {\n        for(let i = 0; i < this._font.sbix.imageTables.length; i++){\n            var table = this._font.sbix.imageTables[i];\n            if (table.ppem >= size) break;\n        }\n        let offsets = table.imageOffsets;\n        let start = offsets[this.id];\n        let end = offsets[this.id + 1];\n        if (start === end) return null;\n        this._font.stream.pos = start;\n        return $25d8f049c222084c$var$SBIXImage.decode(this._font.stream, {\n            buflen: end - start\n        });\n    }\n    render(ctx, size) {\n        let img = this.getImageForSize(size);\n        if (img != null) {\n            let scale = size / this._font.unitsPerEm;\n            ctx.image(img.data, {\n                height: size,\n                x: img.originX,\n                y: (this.bbox.minY - img.originY) * scale\n            });\n        }\n        if (this._font.sbix.flags.renderOutlines) super.render(ctx, size);\n    }\n    constructor(...args){\n        super(...args);\n        (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"SBIX\");\n    }\n}\n\n\n\n\n\nclass $0d411f0165859681$var$COLRLayer {\n    constructor(glyph, color){\n        this.glyph = glyph;\n        this.color = color;\n    }\n}\nclass $0d411f0165859681$export$2e2bcd8739ae039 extends (0, $f92906be28e61769$export$2e2bcd8739ae039) {\n    _getBBox() {\n        let bbox = new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039);\n        for(let i = 0; i < this.layers.length; i++){\n            let layer = this.layers[i];\n            let b = layer.glyph.bbox;\n            bbox.addPoint(b.minX, b.minY);\n            bbox.addPoint(b.maxX, b.maxY);\n        }\n        return bbox;\n    }\n    /**\n   * Returns an array of objects containing the glyph and color for\n   * each layer in the composite color glyph.\n   * @type {object[]}\n   */ get layers() {\n        let cpal = this._font.CPAL;\n        let colr = this._font.COLR;\n        let low = 0;\n        let high = colr.baseGlyphRecord.length - 1;\n        while(low <= high){\n            let mid = low + high >> 1;\n            var rec = colr.baseGlyphRecord[mid];\n            if (this.id < rec.gid) high = mid - 1;\n            else if (this.id > rec.gid) low = mid + 1;\n            else {\n                var baseLayer = rec;\n                break;\n            }\n        }\n        // if base glyph not found in COLR table,\n        // default to normal glyph from glyf or CFF\n        if (baseLayer == null) {\n            var g = this._font._getBaseGlyph(this.id);\n            var color = {\n                red: 0,\n                green: 0,\n                blue: 0,\n                alpha: 255\n            };\n            return [\n                new $0d411f0165859681$var$COLRLayer(g, color)\n            ];\n        }\n        // otherwise, return an array of all the layers\n        let layers = [];\n        for(let i = baseLayer.firstLayerIndex; i < baseLayer.firstLayerIndex + baseLayer.numLayers; i++){\n            var rec = colr.layerRecords[i];\n            var color = cpal.colorRecords[rec.paletteIndex];\n            var g = this._font._getBaseGlyph(rec.gid);\n            layers.push(new $0d411f0165859681$var$COLRLayer(g, color));\n        }\n        return layers;\n    }\n    render(ctx, size) {\n        for (let { glyph: glyph , color: color  } of this.layers){\n            ctx.fillColor([\n                color.red,\n                color.green,\n                color.blue\n            ], color.alpha / 255 * 100);\n            glyph.render(ctx, size);\n        }\n        return;\n    }\n    constructor(...args){\n        super(...args);\n        (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"COLR\");\n    }\n}\n\n\nconst $0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS = 0x8000;\nconst $0bb840cac04e911b$var$TUPLE_COUNT_MASK = 0x0fff;\nconst $0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD = 0x8000;\nconst $0bb840cac04e911b$var$INTERMEDIATE_TUPLE = 0x4000;\nconst $0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS = 0x2000;\nconst $0bb840cac04e911b$var$TUPLE_INDEX_MASK = 0x0fff;\nconst $0bb840cac04e911b$var$POINTS_ARE_WORDS = 0x80;\nconst $0bb840cac04e911b$var$POINT_RUN_COUNT_MASK = 0x7f;\nconst $0bb840cac04e911b$var$DELTAS_ARE_ZERO = 0x80;\nconst $0bb840cac04e911b$var$DELTAS_ARE_WORDS = 0x40;\nconst $0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK = 0x3f;\nclass $0bb840cac04e911b$export$2e2bcd8739ae039 {\n    normalizeCoords(coords) {\n        // the default mapping is linear along each axis, in two segments:\n        // from the minValue to defaultValue, and from defaultValue to maxValue.\n        let normalized = [];\n        for(var i = 0; i < this.font.fvar.axis.length; i++){\n            let axis = this.font.fvar.axis[i];\n            if (coords[i] < axis.defaultValue) normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.defaultValue - axis.minValue + Number.EPSILON));\n            else normalized.push((coords[i] - axis.defaultValue + Number.EPSILON) / (axis.maxValue - axis.defaultValue + Number.EPSILON));\n        }\n        // if there is an avar table, the normalized value is calculated\n        // by interpolating between the two nearest mapped values.\n        if (this.font.avar) for(var i = 0; i < this.font.avar.segment.length; i++){\n            let segment = this.font.avar.segment[i];\n            for(let j = 0; j < segment.correspondence.length; j++){\n                let pair = segment.correspondence[j];\n                if (j >= 1 && normalized[i] < pair.fromCoord) {\n                    let prev = segment.correspondence[j - 1];\n                    normalized[i] = ((normalized[i] - prev.fromCoord) * (pair.toCoord - prev.toCoord) + Number.EPSILON) / (pair.fromCoord - prev.fromCoord + Number.EPSILON) + prev.toCoord;\n                    break;\n                }\n            }\n        }\n        return normalized;\n    }\n    transformPoints(gid, glyphPoints) {\n        if (!this.font.fvar || !this.font.gvar) return;\n        let { gvar: gvar  } = this.font;\n        if (gid >= gvar.glyphCount) return;\n        let offset = gvar.offsets[gid];\n        if (offset === gvar.offsets[gid + 1]) return;\n        // Read the gvar data for this glyph\n        let { stream: stream  } = this.font;\n        stream.pos = offset;\n        if (stream.pos >= stream.length) return;\n        let tupleCount = stream.readUInt16BE();\n        let offsetToData = offset + stream.readUInt16BE();\n        if (tupleCount & $0bb840cac04e911b$var$TUPLES_SHARE_POINT_NUMBERS) {\n            var here = stream.pos;\n            stream.pos = offsetToData;\n            var sharedPoints = this.decodePoints();\n            offsetToData = stream.pos;\n            stream.pos = here;\n        }\n        let origPoints = glyphPoints.map((pt)=>pt.copy());\n        tupleCount &= $0bb840cac04e911b$var$TUPLE_COUNT_MASK;\n        for(let i = 0; i < tupleCount; i++){\n            let tupleDataSize = stream.readUInt16BE();\n            let tupleIndex = stream.readUInt16BE();\n            if (tupleIndex & $0bb840cac04e911b$var$EMBEDDED_TUPLE_COORD) {\n                var tupleCoords = [];\n                for(let a = 0; a < gvar.axisCount; a++)tupleCoords.push(stream.readInt16BE() / 16384);\n            } else {\n                if ((tupleIndex & $0bb840cac04e911b$var$TUPLE_INDEX_MASK) >= gvar.globalCoordCount) throw new Error(\"Invalid gvar table\");\n                var tupleCoords = gvar.globalCoords[tupleIndex & $0bb840cac04e911b$var$TUPLE_INDEX_MASK];\n            }\n            if (tupleIndex & $0bb840cac04e911b$var$INTERMEDIATE_TUPLE) {\n                var startCoords = [];\n                for(let a = 0; a < gvar.axisCount; a++)startCoords.push(stream.readInt16BE() / 16384);\n                var endCoords = [];\n                for(let a1 = 0; a1 < gvar.axisCount; a1++)endCoords.push(stream.readInt16BE() / 16384);\n            }\n            // Get the factor at which to apply this tuple\n            let factor = this.tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords);\n            if (factor === 0) {\n                offsetToData += tupleDataSize;\n                continue;\n            }\n            var here = stream.pos;\n            stream.pos = offsetToData;\n            if (tupleIndex & $0bb840cac04e911b$var$PRIVATE_POINT_NUMBERS) var points = this.decodePoints();\n            else var points = sharedPoints;\n            // points.length = 0 means there are deltas for all points\n            let nPoints = points.length === 0 ? glyphPoints.length : points.length;\n            let xDeltas = this.decodeDeltas(nPoints);\n            let yDeltas = this.decodeDeltas(nPoints);\n            if (points.length === 0) for(let i = 0; i < glyphPoints.length; i++){\n                var point = glyphPoints[i];\n                point.x += Math.round(xDeltas[i] * factor);\n                point.y += Math.round(yDeltas[i] * factor);\n            }\n            else {\n                let outPoints = origPoints.map((pt)=>pt.copy());\n                let hasDelta = glyphPoints.map(()=>false);\n                for(let i = 0; i < points.length; i++){\n                    let idx = points[i];\n                    if (idx < glyphPoints.length) {\n                        let point = outPoints[idx];\n                        hasDelta[idx] = true;\n                        point.x += Math.round(xDeltas[i] * factor);\n                        point.y += Math.round(yDeltas[i] * factor);\n                    }\n                }\n                this.interpolateMissingDeltas(outPoints, origPoints, hasDelta);\n                for(let i1 = 0; i1 < glyphPoints.length; i1++){\n                    let deltaX = outPoints[i1].x - origPoints[i1].x;\n                    let deltaY = outPoints[i1].y - origPoints[i1].y;\n                    glyphPoints[i1].x += deltaX;\n                    glyphPoints[i1].y += deltaY;\n                }\n            }\n            offsetToData += tupleDataSize;\n            stream.pos = here;\n        }\n    }\n    decodePoints() {\n        let stream = this.font.stream;\n        let count = stream.readUInt8();\n        if (count & $0bb840cac04e911b$var$POINTS_ARE_WORDS) count = (count & $0bb840cac04e911b$var$POINT_RUN_COUNT_MASK) << 8 | stream.readUInt8();\n        let points = new Uint16Array(count);\n        let i = 0;\n        let point = 0;\n        while(i < count){\n            let run = stream.readUInt8();\n            let runCount = (run & $0bb840cac04e911b$var$POINT_RUN_COUNT_MASK) + 1;\n            let fn = run & $0bb840cac04e911b$var$POINTS_ARE_WORDS ? stream.readUInt16 : stream.readUInt8;\n            for(let j = 0; j < runCount && i < count; j++){\n                point += fn.call(stream);\n                points[i++] = point;\n            }\n        }\n        return points;\n    }\n    decodeDeltas(count) {\n        let stream = this.font.stream;\n        let i = 0;\n        let deltas = new Int16Array(count);\n        while(i < count){\n            let run = stream.readUInt8();\n            let runCount = (run & $0bb840cac04e911b$var$DELTA_RUN_COUNT_MASK) + 1;\n            if (run & $0bb840cac04e911b$var$DELTAS_ARE_ZERO) i += runCount;\n            else {\n                let fn = run & $0bb840cac04e911b$var$DELTAS_ARE_WORDS ? stream.readInt16BE : stream.readInt8;\n                for(let j = 0; j < runCount && i < count; j++)deltas[i++] = fn.call(stream);\n            }\n        }\n        return deltas;\n    }\n    tupleFactor(tupleIndex, tupleCoords, startCoords, endCoords) {\n        let normalized = this.normalizedCoords;\n        let { gvar: gvar  } = this.font;\n        let factor = 1;\n        for(let i = 0; i < gvar.axisCount; i++){\n            if (tupleCoords[i] === 0) continue;\n            if (normalized[i] === 0) return 0;\n            if ((tupleIndex & $0bb840cac04e911b$var$INTERMEDIATE_TUPLE) === 0) {\n                if (normalized[i] < Math.min(0, tupleCoords[i]) || normalized[i] > Math.max(0, tupleCoords[i])) return 0;\n                factor = (factor * normalized[i] + Number.EPSILON) / (tupleCoords[i] + Number.EPSILON);\n            } else {\n                if (normalized[i] < startCoords[i] || normalized[i] > endCoords[i]) return 0;\n                else if (normalized[i] < tupleCoords[i]) factor = factor * (normalized[i] - startCoords[i] + Number.EPSILON) / (tupleCoords[i] - startCoords[i] + Number.EPSILON);\n                else factor = factor * (endCoords[i] - normalized[i] + Number.EPSILON) / (endCoords[i] - tupleCoords[i] + Number.EPSILON);\n            }\n        }\n        return factor;\n    }\n    // Interpolates points without delta values.\n    // Needed for the Ø and Q glyphs in Skia.\n    // Algorithm from Freetype.\n    interpolateMissingDeltas(points, inPoints, hasDelta) {\n        if (points.length === 0) return;\n        let point = 0;\n        while(point < points.length){\n            let firstPoint = point;\n            // find the end point of the contour\n            let endPoint = point;\n            let pt = points[endPoint];\n            while(!pt.endContour)pt = points[++endPoint];\n            // find the first point that has a delta\n            while(point <= endPoint && !hasDelta[point])point++;\n            if (point > endPoint) continue;\n            let firstDelta = point;\n            let curDelta = point;\n            point++;\n            while(point <= endPoint){\n                // find the next point with a delta, and interpolate intermediate points\n                if (hasDelta[point]) {\n                    this.deltaInterpolate(curDelta + 1, point - 1, curDelta, point, inPoints, points);\n                    curDelta = point;\n                }\n                point++;\n            }\n            // shift contour if we only have a single delta\n            if (curDelta === firstDelta) this.deltaShift(firstPoint, endPoint, curDelta, inPoints, points);\n            else {\n                // otherwise, handle the remaining points at the end and beginning of the contour\n                this.deltaInterpolate(curDelta + 1, endPoint, curDelta, firstDelta, inPoints, points);\n                if (firstDelta > 0) this.deltaInterpolate(firstPoint, firstDelta - 1, curDelta, firstDelta, inPoints, points);\n            }\n            point = endPoint + 1;\n        }\n    }\n    deltaInterpolate(p1, p2, ref1, ref2, inPoints, outPoints) {\n        if (p1 > p2) return;\n        let iterable = [\n            \"x\",\n            \"y\"\n        ];\n        for(let i = 0; i < iterable.length; i++){\n            let k = iterable[i];\n            if (inPoints[ref1][k] > inPoints[ref2][k]) {\n                var p = ref1;\n                ref1 = ref2;\n                ref2 = p;\n            }\n            let in1 = inPoints[ref1][k];\n            let in2 = inPoints[ref2][k];\n            let out1 = outPoints[ref1][k];\n            let out2 = outPoints[ref2][k];\n            // If the reference points have the same coordinate but different\n            // delta, inferred delta is zero.  Otherwise interpolate.\n            if (in1 !== in2 || out1 === out2) {\n                let scale = in1 === in2 ? 0 : (out2 - out1) / (in2 - in1);\n                for(let p = p1; p <= p2; p++){\n                    let out = inPoints[p][k];\n                    if (out <= in1) out += out1 - in1;\n                    else if (out >= in2) out += out2 - in2;\n                    else out = out1 + (out - in1) * scale;\n                    outPoints[p][k] = out;\n                }\n            }\n        }\n    }\n    deltaShift(p1, p2, ref, inPoints, outPoints) {\n        let deltaX = outPoints[ref].x - inPoints[ref].x;\n        let deltaY = outPoints[ref].y - inPoints[ref].y;\n        if (deltaX === 0 && deltaY === 0) return;\n        for(let p = p1; p <= p2; p++)if (p !== ref) {\n            outPoints[p].x += deltaX;\n            outPoints[p].y += deltaY;\n        }\n    }\n    getAdvanceAdjustment(gid, table) {\n        let outerIndex, innerIndex;\n        if (table.advanceWidthMapping) {\n            let idx = gid;\n            if (idx >= table.advanceWidthMapping.mapCount) idx = table.advanceWidthMapping.mapCount - 1;\n            let entryFormat = table.advanceWidthMapping.entryFormat;\n            ({ outerIndex: outerIndex , innerIndex: innerIndex  } = table.advanceWidthMapping.mapData[idx]);\n        } else {\n            outerIndex = 0;\n            innerIndex = gid;\n        }\n        return this.getDelta(table.itemVariationStore, outerIndex, innerIndex);\n    }\n    // See pseudo code from `Font Variations Overview'\n    // in the OpenType specification.\n    getDelta(itemStore, outerIndex, innerIndex) {\n        if (outerIndex >= itemStore.itemVariationData.length) return 0;\n        let varData = itemStore.itemVariationData[outerIndex];\n        if (innerIndex >= varData.deltaSets.length) return 0;\n        let deltaSet = varData.deltaSets[innerIndex];\n        let blendVector = this.getBlendVector(itemStore, outerIndex);\n        let netAdjustment = 0;\n        for(let master = 0; master < varData.regionIndexCount; master++)netAdjustment += deltaSet.deltas[master] * blendVector[master];\n        return netAdjustment;\n    }\n    getBlendVector(itemStore, outerIndex) {\n        let varData = itemStore.itemVariationData[outerIndex];\n        if (this.blendVectors.has(varData)) return this.blendVectors.get(varData);\n        let normalizedCoords = this.normalizedCoords;\n        let blendVector = [];\n        // outer loop steps through master designs to be blended\n        for(let master = 0; master < varData.regionIndexCount; master++){\n            let scalar = 1;\n            let regionIndex = varData.regionIndexes[master];\n            let axes = itemStore.variationRegionList.variationRegions[regionIndex];\n            // inner loop steps through axes in this region\n            for(let j = 0; j < axes.length; j++){\n                let axis = axes[j];\n                let axisScalar;\n                // compute the scalar contribution of this axis\n                // ignore invalid ranges\n                if (axis.startCoord > axis.peakCoord || axis.peakCoord > axis.endCoord) axisScalar = 1;\n                else if (axis.startCoord < 0 && axis.endCoord > 0 && axis.peakCoord !== 0) axisScalar = 1;\n                else if (axis.peakCoord === 0) axisScalar = 1;\n                else if (normalizedCoords[j] < axis.startCoord || normalizedCoords[j] > axis.endCoord) axisScalar = 0;\n                else {\n                    if (normalizedCoords[j] === axis.peakCoord) axisScalar = 1;\n                    else if (normalizedCoords[j] < axis.peakCoord) axisScalar = (normalizedCoords[j] - axis.startCoord + Number.EPSILON) / (axis.peakCoord - axis.startCoord + Number.EPSILON);\n                    else axisScalar = (axis.endCoord - normalizedCoords[j] + Number.EPSILON) / (axis.endCoord - axis.peakCoord + Number.EPSILON);\n                }\n                // take product of all the axis scalars\n                scalar *= axisScalar;\n            }\n            blendVector[master] = scalar;\n        }\n        this.blendVectors.set(varData, blendVector);\n        return blendVector;\n    }\n    constructor(font, coords){\n        this.font = font;\n        this.normalizedCoords = this.normalizeCoords(coords);\n        this.blendVectors = new Map;\n    }\n}\n\n\n\n\nconst $5cc7476da92df375$var$resolved = Promise.resolve();\nclass $5cc7476da92df375$export$2e2bcd8739ae039 {\n    includeGlyph(glyph) {\n        if (typeof glyph === \"object\") glyph = glyph.id;\n        if (this.mapping[glyph] == null) {\n            this.glyphs.push(glyph);\n            this.mapping[glyph] = this.glyphs.length - 1;\n        }\n        return this.mapping[glyph];\n    }\n    constructor(font){\n        this.font = font;\n        this.glyphs = [];\n        this.mapping = {};\n        // always include the missing glyph\n        this.includeGlyph(0);\n    }\n}\n\n\n\n\n\n// Flags for simple glyphs\nconst $807e58506be70005$var$ON_CURVE = 1;\nconst $807e58506be70005$var$X_SHORT_VECTOR = 2;\nconst $807e58506be70005$var$Y_SHORT_VECTOR = 4;\nconst $807e58506be70005$var$REPEAT = 8;\nconst $807e58506be70005$var$SAME_X = 16;\nconst $807e58506be70005$var$SAME_Y = 32;\nclass $807e58506be70005$var$Point {\n    static size(val) {\n        return val >= 0 && val <= 255 ? 1 : 2;\n    }\n    static encode(stream, value) {\n        if (value >= 0 && value <= 255) stream.writeUInt8(value);\n        else stream.writeInt16BE(value);\n    }\n}\nlet $807e58506be70005$var$Glyf = new $6uUbQ$Struct({\n    numberOfContours: $6uUbQ$int16,\n    xMin: $6uUbQ$int16,\n    yMin: $6uUbQ$int16,\n    xMax: $6uUbQ$int16,\n    yMax: $6uUbQ$int16,\n    endPtsOfContours: new $6uUbQ$Array($6uUbQ$uint16, \"numberOfContours\"),\n    instructions: new $6uUbQ$Array($6uUbQ$uint8, $6uUbQ$uint16),\n    flags: new $6uUbQ$Array($6uUbQ$uint8, 0),\n    xPoints: new $6uUbQ$Array($807e58506be70005$var$Point, 0),\n    yPoints: new $6uUbQ$Array($807e58506be70005$var$Point, 0)\n});\nclass $807e58506be70005$export$2e2bcd8739ae039 {\n    encodeSimple(path, instructions = []) {\n        let endPtsOfContours = [];\n        let xPoints = [];\n        let yPoints = [];\n        let flags = [];\n        let same = 0;\n        let lastX = 0, lastY = 0, lastFlag = 0;\n        let pointCount = 0;\n        for(let i = 0; i < path.commands.length; i++){\n            let c = path.commands[i];\n            for(let j = 0; j < c.args.length; j += 2){\n                let x = c.args[j];\n                let y = c.args[j + 1];\n                let flag = 0;\n                // If the ending point of a quadratic curve is the midpoint\n                // between the control point and the control point of the next\n                // quadratic curve, we can omit the ending point.\n                if (c.command === \"quadraticCurveTo\" && j === 2) {\n                    let next = path.commands[i + 1];\n                    if (next && next.command === \"quadraticCurveTo\") {\n                        let midX = (lastX + next.args[0]) / 2;\n                        let midY = (lastY + next.args[1]) / 2;\n                        if (x === midX && y === midY) continue;\n                    }\n                }\n                // All points except control points are on curve.\n                if (!(c.command === \"quadraticCurveTo\" && j === 0)) flag |= $807e58506be70005$var$ON_CURVE;\n                flag = this._encodePoint(x, lastX, xPoints, flag, $807e58506be70005$var$X_SHORT_VECTOR, $807e58506be70005$var$SAME_X);\n                flag = this._encodePoint(y, lastY, yPoints, flag, $807e58506be70005$var$Y_SHORT_VECTOR, $807e58506be70005$var$SAME_Y);\n                if (flag === lastFlag && same < 255) {\n                    flags[flags.length - 1] |= $807e58506be70005$var$REPEAT;\n                    same++;\n                } else {\n                    if (same > 0) {\n                        flags.push(same);\n                        same = 0;\n                    }\n                    flags.push(flag);\n                    lastFlag = flag;\n                }\n                lastX = x;\n                lastY = y;\n                pointCount++;\n            }\n            if (c.command === \"closePath\") endPtsOfContours.push(pointCount - 1);\n        }\n        // Close the path if the last command didn't already\n        if (path.commands.length > 1 && path.commands[path.commands.length - 1].command !== \"closePath\") endPtsOfContours.push(pointCount - 1);\n        let bbox = path.bbox;\n        let glyf = {\n            numberOfContours: endPtsOfContours.length,\n            xMin: bbox.minX,\n            yMin: bbox.minY,\n            xMax: bbox.maxX,\n            yMax: bbox.maxY,\n            endPtsOfContours: endPtsOfContours,\n            instructions: instructions,\n            flags: flags,\n            xPoints: xPoints,\n            yPoints: yPoints\n        };\n        let size = $807e58506be70005$var$Glyf.size(glyf);\n        let tail = 4 - size % 4;\n        let stream = new $6uUbQ$EncodeStream(size + tail);\n        $807e58506be70005$var$Glyf.encode(stream, glyf);\n        // Align to 4-byte length\n        if (tail !== 0) stream.fill(0, tail);\n        return stream.buffer;\n    }\n    _encodePoint(value, last, points, flag, shortFlag, sameFlag) {\n        let diff = value - last;\n        if (value === last) flag |= sameFlag;\n        else {\n            if (-255 <= diff && diff <= 255) {\n                flag |= shortFlag;\n                if (diff < 0) diff = -diff;\n                else flag |= sameFlag;\n            }\n            points.push(diff);\n        }\n        return flag;\n    }\n}\n\n\nclass $4abbb6a5dbdc441a$export$2e2bcd8739ae039 extends (0, $5cc7476da92df375$export$2e2bcd8739ae039) {\n    _addGlyph(gid) {\n        let glyph = this.font.getGlyph(gid);\n        let glyf = glyph._decode();\n        // get the offset to the glyph from the loca table\n        let curOffset = this.font.loca.offsets[gid];\n        let nextOffset = this.font.loca.offsets[gid + 1];\n        let stream = this.font._getTableStream(\"glyf\");\n        stream.pos += curOffset;\n        let buffer = stream.readBuffer(nextOffset - curOffset);\n        // if it is a compound glyph, include its components\n        if (glyf && glyf.numberOfContours < 0) {\n            buffer = new Uint8Array(buffer);\n            let view = new DataView(buffer.buffer);\n            for (let component of glyf.components){\n                gid = this.includeGlyph(component.glyphID);\n                view.setUint16(component.pos, gid);\n            }\n        } else if (glyf && this.font._variationProcessor) // If this is a TrueType variation glyph, re-encode the path\n        buffer = this.glyphEncoder.encodeSimple(glyph.path, glyf.instructions);\n        this.glyf.push(buffer);\n        this.loca.offsets.push(this.offset);\n        this.hmtx.metrics.push({\n            advance: glyph.advanceWidth,\n            bearing: glyph._getMetrics().leftBearing\n        });\n        this.offset += buffer.length;\n        return this.glyf.length - 1;\n    }\n    encode() {\n        // tables required by PDF spec:\n        //   head, hhea, loca, maxp, cvt , prep, glyf, hmtx, fpgm\n        //\n        // additional tables required for standalone fonts:\n        //   name, cmap, OS/2, post\n        this.glyf = [];\n        this.offset = 0;\n        this.loca = {\n            offsets: [],\n            version: this.font.loca.version\n        };\n        this.hmtx = {\n            metrics: [],\n            bearings: []\n        };\n        // include all the glyphs\n        // not using a for loop because we need to support adding more\n        // glyphs to the array as we go, and CoffeeScript caches the length.\n        let i = 0;\n        while(i < this.glyphs.length)this._addGlyph(this.glyphs[i++]);\n        let maxp = (0, $6uUbQ$clone)(this.font.maxp);\n        maxp.numGlyphs = this.glyf.length;\n        this.loca.offsets.push(this.offset);\n        let head = (0, $6uUbQ$clone)(this.font.head);\n        head.indexToLocFormat = this.loca.version;\n        let hhea = (0, $6uUbQ$clone)(this.font.hhea);\n        hhea.numberOfMetrics = this.hmtx.metrics.length;\n        // map = []\n        // for index in [0...256]\n        //     if index < @numGlyphs\n        //         map[index] = index\n        //     else\n        //         map[index] = 0\n        //\n        // cmapTable =\n        //     version: 0\n        //     length: 262\n        //     language: 0\n        //     codeMap: map\n        //\n        // cmap =\n        //     version: 0\n        //     numSubtables: 1\n        //     tables: [\n        //         platformID: 1\n        //         encodingID: 0\n        //         table: cmapTable\n        //     ]\n        // TODO: subset prep, cvt, fpgm?\n        return (0, $816c07a04b6dba87$export$2e2bcd8739ae039).toBuffer({\n            tables: {\n                head: head,\n                hhea: hhea,\n                loca: this.loca,\n                maxp: maxp,\n                \"cvt \": this.font[\"cvt \"],\n                prep: this.font.prep,\n                glyf: this.glyf,\n                hmtx: this.hmtx,\n                fpgm: this.font.fpgm\n            }\n        });\n    }\n    constructor(font){\n        super(font);\n        this.glyphEncoder = new (0, $807e58506be70005$export$2e2bcd8739ae039);\n    }\n}\n\n\n\n\n\n\nclass $001d739428a71d5a$export$2e2bcd8739ae039 extends (0, $5cc7476da92df375$export$2e2bcd8739ae039) {\n    subsetCharstrings() {\n        this.charstrings = [];\n        let gsubrs = {};\n        for (let gid of this.glyphs){\n            this.charstrings.push(this.cff.getCharString(gid));\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedGsubrs)gsubrs[subr] = true;\n        }\n        this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, gsubrs);\n    }\n    subsetSubrs(subrs, used) {\n        let res = [];\n        for(let i = 0; i < subrs.length; i++){\n            let subr = subrs[i];\n            if (used[i]) {\n                this.cff.stream.pos = subr.offset;\n                res.push(this.cff.stream.readBuffer(subr.length));\n            } else res.push(new Uint8Array([\n                11\n            ])); // return\n        }\n        return res;\n    }\n    subsetFontdict(topDict) {\n        topDict.FDArray = [];\n        topDict.FDSelect = {\n            version: 0,\n            fds: []\n        };\n        let used_fds = {};\n        let used_subrs = [];\n        let fd_select = {};\n        for (let gid of this.glyphs){\n            let fd = this.cff.fdForGlyph(gid);\n            if (fd == null) continue;\n            if (!used_fds[fd]) {\n                topDict.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[fd]));\n                used_subrs.push({});\n                fd_select[fd] = topDict.FDArray.length - 1;\n            }\n            used_fds[fd] = true;\n            topDict.FDSelect.fds.push(fd_select[fd]);\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedSubrs)used_subrs[fd_select[fd]][subr] = true;\n        }\n        for(let i = 0; i < topDict.FDArray.length; i++){\n            let dict = topDict.FDArray[i];\n            delete dict.FontName;\n            if (dict.Private && dict.Private.Subrs) {\n                dict.Private = Object.assign({}, dict.Private);\n                dict.Private.Subrs = this.subsetSubrs(dict.Private.Subrs, used_subrs[i]);\n            }\n        }\n        return;\n    }\n    createCIDFontdict(topDict) {\n        let used_subrs = {};\n        for (let gid of this.glyphs){\n            let glyph = this.font.getGlyph(gid);\n            let path = glyph.path; // this causes the glyph to be parsed\n            for(let subr in glyph._usedSubrs)used_subrs[subr] = true;\n        }\n        let privateDict = Object.assign({}, this.cff.topDict.Private);\n        if (this.cff.topDict.Private && this.cff.topDict.Private.Subrs) privateDict.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, used_subrs);\n        topDict.FDArray = [\n            {\n                Private: privateDict\n            }\n        ];\n        return topDict.FDSelect = {\n            version: 3,\n            nRanges: 1,\n            ranges: [\n                {\n                    first: 0,\n                    fd: 0\n                }\n            ],\n            sentinel: this.charstrings.length\n        };\n    }\n    addString(string) {\n        if (!string) return null;\n        if (!this.strings) this.strings = [];\n        this.strings.push(string);\n        return (0, $229224aec43783c5$export$2e2bcd8739ae039).length + this.strings.length - 1;\n    }\n    encode() {\n        this.subsetCharstrings();\n        let charset = {\n            version: this.charstrings.length > 255 ? 2 : 1,\n            ranges: [\n                {\n                    first: 1,\n                    nLeft: this.charstrings.length - 2\n                }\n            ]\n        };\n        let topDict = Object.assign({}, this.cff.topDict);\n        topDict.Private = null;\n        topDict.charset = charset;\n        topDict.Encoding = null;\n        topDict.CharStrings = this.charstrings;\n        for (let key of [\n            \"version\",\n            \"Notice\",\n            \"Copyright\",\n            \"FullName\",\n            \"FamilyName\",\n            \"Weight\",\n            \"PostScript\",\n            \"BaseFontName\",\n            \"FontName\"\n        ])topDict[key] = this.addString(this.cff.string(topDict[key]));\n        topDict.ROS = [\n            this.addString(\"Adobe\"),\n            this.addString(\"Identity\"),\n            0\n        ];\n        topDict.CIDCount = this.charstrings.length;\n        if (this.cff.isCIDFont) this.subsetFontdict(topDict);\n        else this.createCIDFontdict(topDict);\n        let top = {\n            version: 1,\n            hdrSize: this.cff.hdrSize,\n            offSize: 4,\n            header: this.cff.header,\n            nameIndex: [\n                this.cff.postscriptName\n            ],\n            topDictIndex: [\n                topDict\n            ],\n            stringIndex: this.strings,\n            globalSubrIndex: this.gsubrs\n        };\n        return (0, $b84fd3dd9d8eddb2$export$2e2bcd8739ae039).toBuffer(top);\n    }\n    constructor(font){\n        super(font);\n        this.cff = this.font[\"CFF \"];\n        if (!this.cff) throw new Error(\"Not a CFF Font\");\n    }\n}\n\n\n\n\nclass $4c1709dee528ea76$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        let format = (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4));\n        return format === \"true\" || format === \"OTTO\" || format === String.fromCharCode(0, 1, 0, 0);\n    }\n    setDefaultLanguage(lang = null) {\n        this.defaultLanguage = lang;\n    }\n    _getTable(table) {\n        if (!(table.tag in this._tables)) try {\n            this._tables[table.tag] = this._decodeTable(table);\n        } catch (e) {\n            if ($d636bc798e7178db$export$bd5c5d8b8dcafd78) {\n                console.error(`Error decoding table ${table.tag}`);\n                console.error(e.stack);\n            }\n        }\n        return this._tables[table.tag];\n    }\n    _getTableStream(tag) {\n        let table = this.directory.tables[tag];\n        if (table) {\n            this.stream.pos = table.offset;\n            return this.stream;\n        }\n        return null;\n    }\n    _decodeDirectory() {\n        return this.directory = (0, $816c07a04b6dba87$export$2e2bcd8739ae039).decode(this.stream, {\n            _startOffset: 0\n        });\n    }\n    _decodeTable(table) {\n        let pos = this.stream.pos;\n        let stream = this._getTableStream(table.tag);\n        let result = (0, $c3395722bea751e2$export$2e2bcd8739ae039)[table.tag].decode(stream, this, table.length);\n        this.stream.pos = pos;\n        return result;\n    }\n    /**\n   * Gets a string from the font's `name` table\n   * `lang` is a BCP-47 language code.\n   * @return {string}\n   */ getName(key, lang = this.defaultLanguage || $d636bc798e7178db$export$42940898df819940) {\n        let record = this.name && this.name.records[key];\n        if (record) // Attempt to retrieve the entry, depending on which translation is available:\n        return record[lang] || record[this.defaultLanguage] || record[$d636bc798e7178db$export$42940898df819940] || record[\"en\"] || record[Object.keys(record)[0]] // Seriously, ANY language would be fine\n         || null;\n        return null;\n    }\n    /**\n   * The unique PostScript name for this font, e.g. \"Helvetica-Bold\"\n   * @type {string}\n   */ get postscriptName() {\n        return this.getName(\"postscriptName\");\n    }\n    /**\n   * The font's full name, e.g. \"Helvetica Bold\"\n   * @type {string}\n   */ get fullName() {\n        return this.getName(\"fullName\");\n    }\n    /**\n   * The font's family name, e.g. \"Helvetica\"\n   * @type {string}\n   */ get familyName() {\n        return this.getName(\"fontFamily\");\n    }\n    /**\n   * The font's sub-family, e.g. \"Bold\".\n   * @type {string}\n   */ get subfamilyName() {\n        return this.getName(\"fontSubfamily\");\n    }\n    /**\n   * The font's copyright information\n   * @type {string}\n   */ get copyright() {\n        return this.getName(\"copyright\");\n    }\n    /**\n   * The font's version number\n   * @type {string}\n   */ get version() {\n        return this.getName(\"version\");\n    }\n    /**\n   * The font’s [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))\n   * @type {number}\n   */ get ascent() {\n        return this.hhea.ascent;\n    }\n    /**\n   * The font’s [descender](https://en.wikipedia.org/wiki/Descender)\n   * @type {number}\n   */ get descent() {\n        return this.hhea.descent;\n    }\n    /**\n   * The amount of space that should be included between lines\n   * @type {number}\n   */ get lineGap() {\n        return this.hhea.lineGap;\n    }\n    /**\n   * The offset from the normal underline position that should be used\n   * @type {number}\n   */ get underlinePosition() {\n        return this.post.underlinePosition;\n    }\n    /**\n   * The weight of the underline that should be used\n   * @type {number}\n   */ get underlineThickness() {\n        return this.post.underlineThickness;\n    }\n    /**\n   * If this is an italic font, the angle the cursor should be drawn at to match the font design\n   * @type {number}\n   */ get italicAngle() {\n        return this.post.italicAngle;\n    }\n    /**\n   * The height of capital letters above the baseline.\n   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.\n   * @type {number}\n   */ get capHeight() {\n        let os2 = this[\"OS/2\"];\n        return os2 ? os2.capHeight : this.ascent;\n    }\n    /**\n   * The height of lower case letters in the font.\n   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.\n   * @type {number}\n   */ get xHeight() {\n        let os2 = this[\"OS/2\"];\n        return os2 ? os2.xHeight : 0;\n    }\n    /**\n   * The number of glyphs in the font.\n   * @type {number}\n   */ get numGlyphs() {\n        return this.maxp.numGlyphs;\n    }\n    /**\n   * The size of the font’s internal coordinate grid\n   * @type {number}\n   */ get unitsPerEm() {\n        return this.head.unitsPerEm;\n    }\n    /**\n   * The font’s bounding box, i.e. the box that encloses all glyphs in the font.\n   * @type {BBox}\n   */ get bbox() {\n        return Object.freeze(new (0, $f34600ab9d7f70d8$export$2e2bcd8739ae039)(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));\n    }\n    get _cmapProcessor() {\n        return new (0, $f08dd41ef10b694c$export$2e2bcd8739ae039)(this.cmap);\n    }\n    /**\n   * An array of all of the unicode code points supported by the font.\n   * @type {number[]}\n   */ get characterSet() {\n        return this._cmapProcessor.getCharacterSet();\n    }\n    /**\n   * Returns whether there is glyph in the font for the given unicode code point.\n   *\n   * @param {number} codePoint\n   * @return {boolean}\n   */ hasGlyphForCodePoint(codePoint) {\n        return !!this._cmapProcessor.lookup(codePoint);\n    }\n    /**\n   * Maps a single unicode code point to a Glyph object.\n   * Does not perform any advanced substitutions (there is no context to do so).\n   *\n   * @param {number} codePoint\n   * @return {Glyph}\n   */ glyphForCodePoint(codePoint) {\n        return this.getGlyph(this._cmapProcessor.lookup(codePoint), [\n            codePoint\n        ]);\n    }\n    /**\n   * Returns an array of Glyph objects for the given string.\n   * This is only a one-to-one mapping from characters to glyphs.\n   * For most uses, you should use font.layout (described below), which\n   * provides a much more advanced mapping supporting AAT and OpenType shaping.\n   *\n   * @param {string} string\n   * @return {Glyph[]}\n   */ glyphsForString(string) {\n        let glyphs = [];\n        let len = string.length;\n        let idx = 0;\n        let last = -1;\n        let state = -1;\n        while(idx <= len){\n            let code = 0;\n            let nextState = 0;\n            if (idx < len) {\n                // Decode the next codepoint from UTF 16\n                code = string.charCodeAt(idx++);\n                if (0xd800 <= code && code <= 0xdbff && idx < len) {\n                    let next = string.charCodeAt(idx);\n                    if (0xdc00 <= next && next <= 0xdfff) {\n                        idx++;\n                        code = ((code & 0x3ff) << 10) + (next & 0x3ff) + 0x10000;\n                    }\n                }\n                // Compute the next state: 1 if the next codepoint is a variation selector, 0 otherwise.\n                nextState = 0xfe00 <= code && code <= 0xfe0f || 0xe0100 <= code && code <= 0xe01ef ? 1 : 0;\n            } else idx++;\n            if (state === 0 && nextState === 1) // Variation selector following normal codepoint.\n            glyphs.push(this.getGlyph(this._cmapProcessor.lookup(last, code), [\n                last,\n                code\n            ]));\n            else if (state === 0 && nextState === 0) // Normal codepoint following normal codepoint.\n            glyphs.push(this.glyphForCodePoint(last));\n            last = code;\n            state = nextState;\n        }\n        return glyphs;\n    }\n    get _layoutEngine() {\n        return new (0, $4c0a7fa5df7a9ab1$export$2e2bcd8739ae039)(this);\n    }\n    /**\n   * Returns a GlyphRun object, which includes an array of Glyphs and GlyphPositions for the given string.\n   *\n   * @param {string} string\n   * @param {string[]} [userFeatures]\n   * @param {string} [script]\n   * @param {string} [language]\n   * @param {string} [direction]\n   * @return {GlyphRun}\n   */ layout(string, userFeatures, script, language, direction) {\n        return this._layoutEngine.layout(string, userFeatures, script, language, direction);\n    }\n    /**\n   * Returns an array of strings that map to the given glyph id.\n   * @param {number} gid - glyph id\n   */ stringsForGlyph(gid) {\n        return this._layoutEngine.stringsForGlyph(gid);\n    }\n    /**\n   * An array of all [OpenType feature tags](https://www.microsoft.com/typography/otspec/featuretags.htm)\n   * (or mapped AAT tags) supported by the font.\n   * The features parameter is an array of OpenType feature tags to be applied in addition to the default set.\n   * If this is an AAT font, the OpenType feature tags are mapped to AAT features.\n   *\n   * @type {string[]}\n   */ get availableFeatures() {\n        return this._layoutEngine.getAvailableFeatures();\n    }\n    getAvailableFeatures(script, language) {\n        return this._layoutEngine.getAvailableFeatures(script, language);\n    }\n    _getBaseGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.glyf) this._glyphs[glyph] = new (0, $69aac16029968692$export$2e2bcd8739ae039)(glyph, characters, this);\n            else if (this.directory.tables[\"CFF \"] || this.directory.tables.CFF2) this._glyphs[glyph] = new (0, $62cc5109c6101893$export$2e2bcd8739ae039)(glyph, characters, this);\n        }\n        return this._glyphs[glyph] || null;\n    }\n    /**\n   * Returns a glyph object for the given glyph id.\n   * You can pass the array of code points this glyph represents for\n   * your use later, and it will be stored in the glyph object.\n   *\n   * @param {number} glyph\n   * @param {number[]} characters\n   * @return {Glyph}\n   */ getGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.sbix) this._glyphs[glyph] = new (0, $25d8f049c222084c$export$2e2bcd8739ae039)(glyph, characters, this);\n            else if (this.directory.tables.COLR && this.directory.tables.CPAL) this._glyphs[glyph] = new (0, $0d411f0165859681$export$2e2bcd8739ae039)(glyph, characters, this);\n            else this._getBaseGlyph(glyph, characters);\n        }\n        return this._glyphs[glyph] || null;\n    }\n    /**\n   * Returns a Subset for this font.\n   * @return {Subset}\n   */ createSubset() {\n        if (this.directory.tables[\"CFF \"]) return new (0, $001d739428a71d5a$export$2e2bcd8739ae039)(this);\n        return new (0, $4abbb6a5dbdc441a$export$2e2bcd8739ae039)(this);\n    }\n    /**\n   * Returns an object describing the available variation axes\n   * that this font supports. Keys are setting tags, and values\n   * contain the axis name, range, and default value.\n   *\n   * @type {object}\n   */ get variationAxes() {\n        let res = {};\n        if (!this.fvar) return res;\n        for (let axis of this.fvar.axis)res[axis.axisTag.trim()] = {\n            name: axis.name.en,\n            min: axis.minValue,\n            default: axis.defaultValue,\n            max: axis.maxValue\n        };\n        return res;\n    }\n    /**\n   * Returns an object describing the named variation instances\n   * that the font designer has specified. Keys are variation names\n   * and values are the variation settings for this instance.\n   *\n   * @type {object}\n   */ get namedVariations() {\n        let res = {};\n        if (!this.fvar) return res;\n        for (let instance of this.fvar.instance){\n            let settings = {};\n            for(let i = 0; i < this.fvar.axis.length; i++){\n                let axis = this.fvar.axis[i];\n                settings[axis.axisTag.trim()] = instance.coord[i];\n            }\n            res[instance.name.en] = settings;\n        }\n        return res;\n    }\n    /**\n   * Returns a new font with the given variation settings applied.\n   * Settings can either be an instance name, or an object containing\n   * variation tags as specified by the `variationAxes` property.\n   *\n   * @param {object} settings\n   * @return {TTFFont}\n   */ getVariation(settings) {\n        if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2))) throw new Error(\"Variations require a font with the fvar, gvar and glyf, or CFF2 tables.\");\n        if (typeof settings === \"string\") settings = this.namedVariations[settings];\n        if (typeof settings !== \"object\") throw new Error(\"Variation settings must be either a variation name or settings object.\");\n        // normalize the coordinates\n        let coords = this.fvar.axis.map((axis, i)=>{\n            let axisTag = axis.axisTag.trim();\n            if (axisTag in settings) return Math.max(axis.minValue, Math.min(axis.maxValue, settings[axisTag]));\n            else return axis.defaultValue;\n        });\n        let stream = new $6uUbQ$DecodeStream(this.stream.buffer);\n        stream.pos = this._directoryPos;\n        let font = new $4c1709dee528ea76$export$2e2bcd8739ae039(stream, coords);\n        font._tables = this._tables;\n        return font;\n    }\n    get _variationProcessor() {\n        if (!this.fvar) return null;\n        let variationCoords = this.variationCoords;\n        // Ignore if no variation coords and not CFF2\n        if (!variationCoords && !this.CFF2) return null;\n        if (!variationCoords) variationCoords = this.fvar.axis.map((axis)=>axis.defaultValue);\n        return new (0, $0bb840cac04e911b$export$2e2bcd8739ae039)(this, variationCoords);\n    }\n    // Standardized format plugin API\n    getFont(name) {\n        return this.getVariation(name);\n    }\n    constructor(stream, variationCoords = null){\n        (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"TTF\");\n        this.defaultLanguage = null;\n        this.stream = stream;\n        this.variationCoords = variationCoords;\n        this._directoryPos = this.stream.pos;\n        this._tables = {};\n        this._glyphs = {};\n        this._decodeDirectory();\n        // define properties for each table to lazily parse\n        for(let tag in this.directory.tables){\n            let table = this.directory.tables[tag];\n            if ((0, $c3395722bea751e2$export$2e2bcd8739ae039)[tag] && table.length > 0) Object.defineProperty(this, tag, {\n                get: this._getTable.bind(this, table)\n            });\n        }\n    }\n}\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"bbox\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"_cmapProcessor\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"characterSet\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"_layoutEngine\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"variationAxes\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"namedVariations\", null);\n(0, $6uUbQ$swchelperssrc_ts_decoratemjs)([\n    (0, $e71565f2ce09cb6b$export$69a3209f1a06c04d)\n], $4c1709dee528ea76$export$2e2bcd8739ae039.prototype, \"_variationProcessor\", null);\n\n\n\n\n\n\nlet $c1726355ecc5b889$var$WOFFDirectoryEntry = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    offset: new $6uUbQ$Pointer($6uUbQ$uint32, \"void\", {\n        type: \"global\"\n    }),\n    compLength: $6uUbQ$uint32,\n    length: $6uUbQ$uint32,\n    origChecksum: $6uUbQ$uint32\n});\nlet $c1726355ecc5b889$var$WOFFDirectory = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    flavor: $6uUbQ$uint32,\n    length: $6uUbQ$uint32,\n    numTables: $6uUbQ$uint16,\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    totalSfntSize: $6uUbQ$uint32,\n    majorVersion: $6uUbQ$uint16,\n    minorVersion: $6uUbQ$uint16,\n    metaOffset: $6uUbQ$uint32,\n    metaLength: $6uUbQ$uint32,\n    metaOrigLength: $6uUbQ$uint32,\n    privOffset: $6uUbQ$uint32,\n    privLength: $6uUbQ$uint32,\n    tables: new $6uUbQ$Array($c1726355ecc5b889$var$WOFFDirectoryEntry, \"numTables\")\n});\n$c1726355ecc5b889$var$WOFFDirectory.process = function() {\n    let tables1 = {};\n    for (let table of this.tables)tables1[table.tag] = table;\n    this.tables = tables1;\n};\nvar $c1726355ecc5b889$export$2e2bcd8739ae039 = $c1726355ecc5b889$var$WOFFDirectory;\n\n\n\n\n\n\nclass $760785214b9fc52c$export$2e2bcd8739ae039 extends (0, $4c1709dee528ea76$export$2e2bcd8739ae039) {\n    static probe(buffer) {\n        return (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOFF\";\n    }\n    _decodeDirectory() {\n        this.directory = (0, $c1726355ecc5b889$export$2e2bcd8739ae039).decode(this.stream, {\n            _startOffset: 0\n        });\n    }\n    _getTableStream(tag) {\n        let table = this.directory.tables[tag];\n        if (table) {\n            this.stream.pos = table.offset;\n            if (table.compLength < table.length) {\n                this.stream.pos += 2; // skip deflate header\n                let outBuffer = new Uint8Array(table.length);\n                let buf = (0, $6uUbQ$tinyinflate)(this.stream.readBuffer(table.compLength - 2), outBuffer);\n                return new $6uUbQ$DecodeStream(buf);\n            } else return this.stream;\n        }\n        return null;\n    }\n    constructor(...args){\n        super(...args);\n        (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"WOFF\");\n    }\n}\n\n\n\n\n\n\n\n\n\nclass $8046190c9f1ad19e$export$2e2bcd8739ae039 extends (0, $69aac16029968692$export$2e2bcd8739ae039) {\n    _decode() {\n        // We have to decode in advance (in WOFF2Font), so just return the pre-decoded data.\n        return this._font._transformedGlyphs[this.id];\n    }\n    _getCBox() {\n        return this.path.bbox;\n    }\n    constructor(...args){\n        super(...args);\n        (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"WOFF2\");\n    }\n}\n\n\n\nconst $c28ec7bbb3b8de3a$var$Base128 = {\n    decode (stream) {\n        let result = 0;\n        let iterable = [\n            0,\n            1,\n            2,\n            3,\n            4\n        ];\n        for(let j = 0; j < iterable.length; j++){\n            let i = iterable[j];\n            let code = stream.readUInt8();\n            // If any of the top seven bits are set then we're about to overflow.\n            if (result & 0xe0000000) throw new Error(\"Overflow\");\n            result = result << 7 | code & 0x7f;\n            if ((code & 0x80) === 0) return result;\n        }\n        throw new Error(\"Bad base 128 number\");\n    }\n};\nlet $c28ec7bbb3b8de3a$var$knownTags = [\n    \"cmap\",\n    \"head\",\n    \"hhea\",\n    \"hmtx\",\n    \"maxp\",\n    \"name\",\n    \"OS/2\",\n    \"post\",\n    \"cvt \",\n    \"fpgm\",\n    \"glyf\",\n    \"loca\",\n    \"prep\",\n    \"CFF \",\n    \"VORG\",\n    \"EBDT\",\n    \"EBLC\",\n    \"gasp\",\n    \"hdmx\",\n    \"kern\",\n    \"LTSH\",\n    \"PCLT\",\n    \"VDMX\",\n    \"vhea\",\n    \"vmtx\",\n    \"BASE\",\n    \"GDEF\",\n    \"GPOS\",\n    \"GSUB\",\n    \"EBSC\",\n    \"JSTF\",\n    \"MATH\",\n    \"CBDT\",\n    \"CBLC\",\n    \"COLR\",\n    \"CPAL\",\n    \"SVG \",\n    \"sbix\",\n    \"acnt\",\n    \"avar\",\n    \"bdat\",\n    \"bloc\",\n    \"bsln\",\n    \"cvar\",\n    \"fdsc\",\n    \"feat\",\n    \"fmtx\",\n    \"fvar\",\n    \"gvar\",\n    \"hsty\",\n    \"just\",\n    \"lcar\",\n    \"mort\",\n    \"morx\",\n    \"opbd\",\n    \"prop\",\n    \"trak\",\n    \"Zapf\",\n    \"Silf\",\n    \"Glat\",\n    \"Gloc\",\n    \"Feat\",\n    \"Sill\"\n];\nlet $c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry = new $6uUbQ$Struct({\n    flags: $6uUbQ$uint8,\n    customTag: new $6uUbQ$Optional(new $6uUbQ$String(4), (t)=>(t.flags & 0x3f) === 0x3f),\n    tag: (t)=>t.customTag || $c28ec7bbb3b8de3a$var$knownTags[t.flags & 0x3f],\n    length: $c28ec7bbb3b8de3a$var$Base128,\n    transformVersion: (t)=>t.flags >>> 6 & 0x03,\n    transformed: (t)=>t.tag === \"glyf\" || t.tag === \"loca\" ? t.transformVersion === 0 : t.transformVersion !== 0,\n    transformLength: new $6uUbQ$Optional($c28ec7bbb3b8de3a$var$Base128, (t)=>t.transformed)\n});\nlet $c28ec7bbb3b8de3a$var$WOFF2Directory = new $6uUbQ$Struct({\n    tag: new $6uUbQ$String(4),\n    flavor: $6uUbQ$uint32,\n    length: $6uUbQ$uint32,\n    numTables: $6uUbQ$uint16,\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint16),\n    totalSfntSize: $6uUbQ$uint32,\n    totalCompressedSize: $6uUbQ$uint32,\n    majorVersion: $6uUbQ$uint16,\n    minorVersion: $6uUbQ$uint16,\n    metaOffset: $6uUbQ$uint32,\n    metaLength: $6uUbQ$uint32,\n    metaOrigLength: $6uUbQ$uint32,\n    privOffset: $6uUbQ$uint32,\n    privLength: $6uUbQ$uint32,\n    tables: new $6uUbQ$Array($c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry, \"numTables\")\n});\n$c28ec7bbb3b8de3a$var$WOFF2Directory.process = function() {\n    let tables = {};\n    for(let i = 0; i < this.tables.length; i++){\n        let table = this.tables[i];\n        tables[table.tag] = table;\n    }\n    return this.tables = tables;\n};\nvar $c28ec7bbb3b8de3a$export$2e2bcd8739ae039 = $c28ec7bbb3b8de3a$var$WOFF2Directory;\n\n\n\nclass $21ee218f84ac7f32$export$2e2bcd8739ae039 extends (0, $4c1709dee528ea76$export$2e2bcd8739ae039) {\n    static probe(buffer) {\n        return (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"wOF2\";\n    }\n    _decodeDirectory() {\n        this.directory = (0, $c28ec7bbb3b8de3a$export$2e2bcd8739ae039).decode(this.stream);\n        this._dataPos = this.stream.pos;\n    }\n    _decompress() {\n        // decompress data and setup table offsets if we haven't already\n        if (!this._decompressed) {\n            this.stream.pos = this._dataPos;\n            let buffer = this.stream.readBuffer(this.directory.totalCompressedSize);\n            let decompressedSize = 0;\n            for(let tag in this.directory.tables){\n                let entry = this.directory.tables[tag];\n                entry.offset = decompressedSize;\n                decompressedSize += entry.transformLength != null ? entry.transformLength : entry.length;\n            }\n            let decompressed = (0, $6uUbQ$brotlidecompressjs)(buffer, decompressedSize);\n            if (!decompressed) throw new Error(\"Error decoding compressed data in WOFF2\");\n            this.stream = new $6uUbQ$DecodeStream(decompressed);\n            this._decompressed = true;\n        }\n    }\n    _decodeTable(table) {\n        this._decompress();\n        return super._decodeTable(table);\n    }\n    // Override this method to get a glyph and return our\n    // custom subclass if there is a glyf table.\n    _getBaseGlyph(glyph, characters = []) {\n        if (!this._glyphs[glyph]) {\n            if (this.directory.tables.glyf && this.directory.tables.glyf.transformed) {\n                if (!this._transformedGlyphs) this._transformGlyfTable();\n                return this._glyphs[glyph] = new (0, $8046190c9f1ad19e$export$2e2bcd8739ae039)(glyph, characters, this);\n            } else return super._getBaseGlyph(glyph, characters);\n        }\n    }\n    _transformGlyfTable() {\n        this._decompress();\n        this.stream.pos = this.directory.tables.glyf.offset;\n        let table = $21ee218f84ac7f32$var$GlyfTable.decode(this.stream);\n        let glyphs = [];\n        for(let index = 0; index < table.numGlyphs; index++){\n            let glyph = {};\n            let nContours = table.nContours.readInt16BE();\n            glyph.numberOfContours = nContours;\n            if (nContours > 0) {\n                let nPoints = [];\n                let totalPoints = 0;\n                for(let i = 0; i < nContours; i++){\n                    let r1 = $21ee218f84ac7f32$var$read255UInt16(table.nPoints);\n                    totalPoints += r1;\n                    nPoints.push(totalPoints);\n                }\n                glyph.points = $21ee218f84ac7f32$var$decodeTriplet(table.flags, table.glyphs, totalPoints);\n                for(let i1 = 0; i1 < nContours; i1++)glyph.points[nPoints[i1] - 1].endContour = true;\n                var instructionSize = $21ee218f84ac7f32$var$read255UInt16(table.glyphs);\n            } else if (nContours < 0) {\n                let haveInstructions = (0, $69aac16029968692$export$2e2bcd8739ae039).prototype._decodeComposite.call({\n                    _font: this\n                }, glyph, table.composites);\n                if (haveInstructions) var instructionSize = $21ee218f84ac7f32$var$read255UInt16(table.glyphs);\n            }\n            glyphs.push(glyph);\n        }\n        this._transformedGlyphs = glyphs;\n    }\n    constructor(...args){\n        super(...args);\n        (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"WOFF2\");\n    }\n}\n// Special class that accepts a length and returns a sub-stream for that data\nclass $21ee218f84ac7f32$var$Substream {\n    decode(stream, parent) {\n        return new $6uUbQ$DecodeStream(this._buf.decode(stream, parent));\n    }\n    constructor(length){\n        this.length = length;\n        this._buf = new $6uUbQ$Buffer(length);\n    }\n}\n// This struct represents the entire glyf table\nlet $21ee218f84ac7f32$var$GlyfTable = new $6uUbQ$Struct({\n    version: $6uUbQ$uint32,\n    numGlyphs: $6uUbQ$uint16,\n    indexFormat: $6uUbQ$uint16,\n    nContourStreamSize: $6uUbQ$uint32,\n    nPointsStreamSize: $6uUbQ$uint32,\n    flagStreamSize: $6uUbQ$uint32,\n    glyphStreamSize: $6uUbQ$uint32,\n    compositeStreamSize: $6uUbQ$uint32,\n    bboxStreamSize: $6uUbQ$uint32,\n    instructionStreamSize: $6uUbQ$uint32,\n    nContours: new $21ee218f84ac7f32$var$Substream(\"nContourStreamSize\"),\n    nPoints: new $21ee218f84ac7f32$var$Substream(\"nPointsStreamSize\"),\n    flags: new $21ee218f84ac7f32$var$Substream(\"flagStreamSize\"),\n    glyphs: new $21ee218f84ac7f32$var$Substream(\"glyphStreamSize\"),\n    composites: new $21ee218f84ac7f32$var$Substream(\"compositeStreamSize\"),\n    bboxes: new $21ee218f84ac7f32$var$Substream(\"bboxStreamSize\"),\n    instructions: new $21ee218f84ac7f32$var$Substream(\"instructionStreamSize\")\n});\nconst $21ee218f84ac7f32$var$WORD_CODE = 253;\nconst $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2 = 254;\nconst $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1 = 255;\nconst $21ee218f84ac7f32$var$LOWEST_U_CODE = 253;\nfunction $21ee218f84ac7f32$var$read255UInt16(stream) {\n    let code = stream.readUInt8();\n    if (code === $21ee218f84ac7f32$var$WORD_CODE) return stream.readUInt16BE();\n    if (code === $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1) return stream.readUInt8() + $21ee218f84ac7f32$var$LOWEST_U_CODE;\n    if (code === $21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2) return stream.readUInt8() + $21ee218f84ac7f32$var$LOWEST_U_CODE * 2;\n    return code;\n}\nfunction $21ee218f84ac7f32$var$withSign(flag, baseval) {\n    return flag & 1 ? baseval : -baseval;\n}\nfunction $21ee218f84ac7f32$var$decodeTriplet(flags, glyphs, nPoints) {\n    let y;\n    let x = y = 0;\n    let res = [];\n    for(let i = 0; i < nPoints; i++){\n        let dx = 0, dy = 0;\n        let flag = flags.readUInt8();\n        let onCurve = !(flag >> 7);\n        flag &= 0x7f;\n        if (flag < 10) {\n            dx = 0;\n            dy = $21ee218f84ac7f32$var$withSign(flag, ((flag & 14) << 7) + glyphs.readUInt8());\n        } else if (flag < 20) {\n            dx = $21ee218f84ac7f32$var$withSign(flag, ((flag - 10 & 14) << 7) + glyphs.readUInt8());\n            dy = 0;\n        } else if (flag < 84) {\n            var b0 = flag - 20;\n            var b1 = glyphs.readUInt8();\n            dx = $21ee218f84ac7f32$var$withSign(flag, 1 + (b0 & 0x30) + (b1 >> 4));\n            dy = $21ee218f84ac7f32$var$withSign(flag >> 1, 1 + ((b0 & 0x0c) << 2) + (b1 & 0x0f));\n        } else if (flag < 120) {\n            var b0 = flag - 84;\n            dx = $21ee218f84ac7f32$var$withSign(flag, 1 + (b0 / 12 << 8) + glyphs.readUInt8());\n            dy = $21ee218f84ac7f32$var$withSign(flag >> 1, 1 + (b0 % 12 >> 2 << 8) + glyphs.readUInt8());\n        } else if (flag < 124) {\n            var b1 = glyphs.readUInt8();\n            let b2 = glyphs.readUInt8();\n            dx = $21ee218f84ac7f32$var$withSign(flag, (b1 << 4) + (b2 >> 4));\n            dy = $21ee218f84ac7f32$var$withSign(flag >> 1, ((b2 & 0x0f) << 8) + glyphs.readUInt8());\n        } else {\n            dx = $21ee218f84ac7f32$var$withSign(flag, glyphs.readUInt16BE());\n            dy = $21ee218f84ac7f32$var$withSign(flag >> 1, glyphs.readUInt16BE());\n        }\n        x += dx;\n        y += dy;\n        res.push(new (0, $69aac16029968692$export$baf26146a414f24a)(onCurve, false, x, y));\n    }\n    return res;\n}\n\n\n\n\n\n\n\n\nlet $cd5853a56c68fec7$var$TTCHeader = new $6uUbQ$VersionedStruct($6uUbQ$uint32, {\n    0x00010000: {\n        numFonts: $6uUbQ$uint32,\n        offsets: new $6uUbQ$Array($6uUbQ$uint32, \"numFonts\")\n    },\n    0x00020000: {\n        numFonts: $6uUbQ$uint32,\n        offsets: new $6uUbQ$Array($6uUbQ$uint32, \"numFonts\"),\n        dsigTag: $6uUbQ$uint32,\n        dsigLength: $6uUbQ$uint32,\n        dsigOffset: $6uUbQ$uint32\n    }\n});\nclass $cd5853a56c68fec7$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        return (0, $12727730ddfc8bfe$export$3d28c1996ced1f14).decode(buffer.slice(0, 4)) === \"ttcf\";\n    }\n    getFont(name) {\n        for (let offset of this.header.offsets){\n            let stream = new $6uUbQ$DecodeStream(this.stream.buffer);\n            stream.pos = offset;\n            let font = new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream);\n            if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i)=>name[i] === v)) return font;\n        }\n        return null;\n    }\n    get fonts() {\n        let fonts = [];\n        for (let offset of this.header.offsets){\n            let stream = new $6uUbQ$DecodeStream(this.stream.buffer);\n            stream.pos = offset;\n            fonts.push(new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream));\n        }\n        return fonts;\n    }\n    constructor(stream){\n        (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"TTC\");\n        this.stream = stream;\n        if (stream.readString(4) !== \"ttcf\") throw new Error(\"Not a TrueType collection\");\n        this.header = $cd5853a56c68fec7$var$TTCHeader.decode(stream);\n    }\n}\n\n\n\n\n\nlet $05f49f930186144e$var$DFontName = new $6uUbQ$String($6uUbQ$uint8);\nlet $05f49f930186144e$var$DFontData = new $6uUbQ$Struct({\n    len: $6uUbQ$uint32,\n    buf: new $6uUbQ$Buffer(\"len\")\n});\nlet $05f49f930186144e$var$Ref = new $6uUbQ$Struct({\n    id: $6uUbQ$uint16,\n    nameOffset: $6uUbQ$int16,\n    attr: $6uUbQ$uint8,\n    dataOffset: $6uUbQ$uint24,\n    handle: $6uUbQ$uint32\n});\nlet $05f49f930186144e$var$Type = new $6uUbQ$Struct({\n    name: new $6uUbQ$String(4),\n    maxTypeIndex: $6uUbQ$uint16,\n    refList: new $6uUbQ$Pointer($6uUbQ$uint16, new $6uUbQ$Array($05f49f930186144e$var$Ref, (t)=>t.maxTypeIndex + 1), {\n        type: \"parent\"\n    })\n});\nlet $05f49f930186144e$var$TypeList = new $6uUbQ$Struct({\n    length: $6uUbQ$uint16,\n    types: new $6uUbQ$Array($05f49f930186144e$var$Type, (t)=>t.length + 1)\n});\nlet $05f49f930186144e$var$DFontMap = new $6uUbQ$Struct({\n    reserved: new $6uUbQ$Reserved($6uUbQ$uint8, 24),\n    typeList: new $6uUbQ$Pointer($6uUbQ$uint16, $05f49f930186144e$var$TypeList),\n    nameListOffset: new $6uUbQ$Pointer($6uUbQ$uint16, \"void\")\n});\nlet $05f49f930186144e$var$DFontHeader = new $6uUbQ$Struct({\n    dataOffset: $6uUbQ$uint32,\n    map: new $6uUbQ$Pointer($6uUbQ$uint32, $05f49f930186144e$var$DFontMap),\n    dataLength: $6uUbQ$uint32,\n    mapLength: $6uUbQ$uint32\n});\nclass $05f49f930186144e$export$2e2bcd8739ae039 {\n    static probe(buffer) {\n        let stream = new $6uUbQ$DecodeStream(buffer);\n        try {\n            var header = $05f49f930186144e$var$DFontHeader.decode(stream);\n        } catch (e) {\n            return false;\n        }\n        for (let type of header.map.typeList.types){\n            if (type.name === \"sfnt\") return true;\n        }\n        return false;\n    }\n    getFont(name) {\n        if (!this.sfnt) return null;\n        for (let ref of this.sfnt.refList){\n            let pos = this.header.dataOffset + ref.dataOffset + 4;\n            let stream = new $6uUbQ$DecodeStream(this.stream.buffer.slice(pos));\n            let font = new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream);\n            if (font.postscriptName === name || font.postscriptName instanceof Uint8Array && name instanceof Uint8Array && font.postscriptName.every((v, i)=>name[i] === v)) return font;\n        }\n        return null;\n    }\n    get fonts() {\n        let fonts = [];\n        for (let ref of this.sfnt.refList){\n            let pos = this.header.dataOffset + ref.dataOffset + 4;\n            let stream = new $6uUbQ$DecodeStream(this.stream.buffer.slice(pos));\n            fonts.push(new (0, $4c1709dee528ea76$export$2e2bcd8739ae039)(stream));\n        }\n        return fonts;\n    }\n    constructor(stream){\n        (0, $6uUbQ$swchelperssrc_define_propertymjs)(this, \"type\", \"DFont\");\n        this.stream = stream;\n        this.header = $05f49f930186144e$var$DFontHeader.decode(this.stream);\n        for (let type of this.header.map.typeList.types){\n            for (let ref of type.refList)if (ref.nameOffset >= 0) {\n                this.stream.pos = ref.nameOffset + this.header.map.nameListOffset;\n                ref.name = $05f49f930186144e$var$DFontName.decode(this.stream);\n            } else ref.name = null;\n            if (type.name === \"sfnt\") this.sfnt = type;\n        }\n    }\n}\n\n\n\n// Register font formats\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $4c1709dee528ea76$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $760785214b9fc52c$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $21ee218f84ac7f32$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $cd5853a56c68fec7$export$2e2bcd8739ae039));\n(0, $d636bc798e7178db$export$36b2f24e97d43be)((0, $05f49f930186144e$export$2e2bcd8739ae039));\n\n\nexport {$d636bc798e7178db$export$bd5c5d8b8dcafd78 as logErrors, $d636bc798e7178db$export$36b2f24e97d43be as registerFormat, $d636bc798e7178db$export$185802fd694ee1f5 as create, $d636bc798e7178db$export$42940898df819940 as defaultLanguage, $d636bc798e7178db$export$5157e7780d44cc36 as setDefaultLanguage};\n//# sourceMappingURL=browser-module.mjs.map\n"],"names":["$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$parcel$interopDefault","a","__esModule","default","$d636bc798e7178db$exports","$d636bc798e7178db$export$bd5c5d8b8dcafd78","$d636bc798e7178db$export$36b2f24e97d43be","$d636bc798e7178db$export$185802fd694ee1f5","$d636bc798e7178db$export$42940898df819940","$d636bc798e7178db$export$5157e7780d44cc36","$d636bc798e7178db$var$formats","format","push","buffer","postscriptName","i","length","probe","font","getFont","Error","lang","$e71565f2ce09cb6b$export$69a3209f1a06c04d","target","key1","descriptor","value","call","this","fn","cache1","Map","memoized","args","key","has","result","apply","$26a62205ad06574e$var$SubHeader","firstCode","entryCount","idDelta","idRangeOffset","$26a62205ad06574e$var$CmapGroup","startCharCode","endCharCode","glyphID","$26a62205ad06574e$var$UnicodeValueRange","startUnicodeValue","additionalCount","$26a62205ad06574e$var$UVSMapping","unicodeValue","$26a62205ad06574e$var$DefaultUVS","$26a62205ad06574e$var$NonDefaultUVS","$26a62205ad06574e$var$VarSelectorRecord","varSelector","defaultUVS","type","nonDefaultUVS","$26a62205ad06574e$var$CmapSubtable","language","codeMap","subHeaderKeys","subHeaderCount","t","Math","max","subHeaders","glyphIndexArray","segCountX2","segCount","searchRange","entrySelector","rangeShift","endCode","reservedPad","startCode","_currentOffset","glyphIndices","reserved","is32","nGroups","groups","numRecords","varSelectors","$26a62205ad06574e$var$CmapEntry","platformID","encodingID","table","lazy","$26a62205ad06574e$export$2e2bcd8739ae039","version","numSubtables","tables","$f2612a29f92ac062$export$2e2bcd8739ae039","revision","checkSumAdjustment","magicNumber","flags","unitsPerEm","created","modified","xMin","yMin","xMax","yMax","macStyle","lowestRecPPEM","fontDirectionHint","indexToLocFormat","glyphDataFormat","$2c179dd593583073$export$2e2bcd8739ae039","ascent","descent","lineGap","advanceWidthMax","minLeftSideBearing","minRightSideBearing","xMaxExtent","caretSlopeRise","caretSlopeRun","caretOffset","metricDataFormat","numberOfMetrics","$bdc9060542264b85$var$HmtxEntry","advance","bearing","$bdc9060542264b85$export$2e2bcd8739ae039","metrics","parent","hhea","bearings","maxp","numGlyphs","$dbf51cb3d3fe409d$export$2e2bcd8739ae039","maxPoints","maxContours","maxComponentPoints","maxComponentContours","maxZones","maxTwilightPoints","maxStorage","maxFunctionDefs","maxInstructionDefs","maxStackElements","maxSizeOfInstructions","maxComponentElements","maxComponentDepth","$e449ad78d50845fe$export$badc544e0651b6b1","languageID","$e449ad78d50845fe$export$479e671907f486d1","$e449ad78d50845fe$export$6fef87b7618bdf0b","$e449ad78d50845fe$var$SINGLE_BYTE_ENCODINGS","Set","$e449ad78d50845fe$var$MAC_ENCODINGS","$e449ad78d50845fe$var$encodingCache","$e449ad78d50845fe$export$1dceb3c14ed68bee","encoding","cached","mapping","res","charCodeAt","decoder","TextDecoder","Uint8Array","decode","i1","$e449ad78d50845fe$export$2092376fd002e13","$2bcf221753ec8e32$var$NameRecord","nameID","string","relativeTo","ctx","stringOffset","allowNull","$2bcf221753ec8e32$var$LangTagRecord","tag","$2bcf221753ec8e32$var$NameTable","count","records","langTagCount","langTags","$2bcf221753ec8e32$export$2e2bcd8739ae039","$2bcf221753ec8e32$var$NAMES","process","stream","record","obj","preEncode","Array","isArray","val","indexOf","en","size","$84b272aa31b70606$var$OS2","header","xAvgCharWidth","usWeightClass","usWidthClass","fsType","ySubscriptXSize","ySubscriptYSize","ySubscriptXOffset","ySubscriptYOffset","ySuperscriptXSize","ySuperscriptYSize","ySuperscriptXOffset","ySuperscriptYOffset","yStrikeoutSize","yStrikeoutPosition","sFamilyClass","panose","ulCharRange","vendorID","fsSelection","usFirstCharIndex","usLastCharIndex","typoAscender","typoDescender","typoLineGap","winAscent","winDescent","codePageRange","xHeight","capHeight","defaultChar","breakChar","maxContent","usLowerOpticalPointSize","usUpperOpticalPointSize","$84b272aa31b70606$var$versions","versions","$84b272aa31b70606$export$2e2bcd8739ae039","$32d9e2eb9565d93c$export$2e2bcd8739ae039","italicAngle","underlinePosition","underlineThickness","isFixedPitch","minMemType42","maxMemType42","minMemType1","maxMemType1","numberOfGlyphs","glyphNameIndex","names","offsets","map","$5202bd9d9ad8eaac$export$2e2bcd8739ae039","controlValues","$5c0f37ca5ffb1850$export$2e2bcd8739ae039","instructions","$2b2b260902b1c57e$var$loca","_processed","$2b2b260902b1c57e$export$2e2bcd8739ae039","$7afb878c7bea4f66$export$2e2bcd8739ae039","controlValueProgram","$6c92b6371bce8bd9$export$2e2bcd8739ae039","$43e9821ef3717eec$export$2e2bcd8739ae039","getCFFVersion","hdrSize","readUInt32BE","readUInt16BE","offsetType","offSize","readUInt8","pos","ret","startPos","start","end","offset","arr","item","encode","writeUInt16BE","sizes","writeUInt8","item1","constructor","$c2d28e92708f99da$var$FLOAT_LOOKUP","$c2d28e92708f99da$var$FLOAT_ENCODE_LOOKUP","$c2d28e92708f99da$export$2e2bcd8739ae039","static","readInt16BE","readInt32BE","str","b","n1","n2","parseFloat","forceLarge","ceil","Number","writeInt32BE","writeInt16BE","c1","c2","$c2d28e92708f99da$var$FLOAT_EOF","$61aa549f16d58b9b$export$2e2bcd8739ae039","decodeOperands","operands","op","encodeOperands","defineProperties","_startOffset","fields","field","dict","includePointers","pointerSize","startOffset","len","k","pointers","pointerOffset","ops","op1","ptr","$0e34a43d05bde82c$export$2e2bcd8739ae039","super","$0e34a43d05bde82c$var$Ptr","options","valueOf","$6d59db2e29cc77b3$export$2e2bcd8739ae039","numBlends","pop","$229224aec43783c5$export$2e2bcd8739ae039","$bc0433d9b7e41f5f$export$dee0027060fa13bd","$ef658f5c9a1488b2$export$c33b50336c234f16","$7cbbe4e24ef3cb75$var$LangSysTable","reqFeatureIndex","featureCount","featureIndexes","$7cbbe4e24ef3cb75$var$LangSysRecord","langSys","$7cbbe4e24ef3cb75$var$Script","defaultLangSys","langSysRecords","$7cbbe4e24ef3cb75$var$ScriptRecord","script","$7cbbe4e24ef3cb75$export$3e15fc05ce864229","$7cbbe4e24ef3cb75$var$FeatureParams","$7cbbe4e24ef3cb75$export$6e91cf7616333d5","featureParams","lookupCount","lookupListIndexes","$7cbbe4e24ef3cb75$var$FeatureRecord","feature","$7cbbe4e24ef3cb75$export$aa18130def4b6cb4","$7cbbe4e24ef3cb75$var$LookupFlags","markAttachmentType","$7cbbe4e24ef3cb75$export$df0008c6ff2da22a","SubTable","Lookup","lookupType","subTableCount","subTables","markFilteringSet","useMarkFilteringSet","$7cbbe4e24ef3cb75$var$RangeRecord","startCoverageIndex","$7cbbe4e24ef3cb75$export$17608c3f81a6111","glyphCount","glyphs","rangeCount","rangeRecords","$7cbbe4e24ef3cb75$var$ClassRangeRecord","class","$7cbbe4e24ef3cb75$export$843d551fbbafef71","startGlyph","classValueArray","classRangeCount","classRangeRecord","$7cbbe4e24ef3cb75$export$8215d14a63d9fb10","deltaFormat","$7cbbe4e24ef3cb75$var$LookupRecord","sequenceIndex","lookupListIndex","$7cbbe4e24ef3cb75$var$Rule","input","lookupRecords","$7cbbe4e24ef3cb75$var$RuleSet","$7cbbe4e24ef3cb75$var$ClassRule","classes","$7cbbe4e24ef3cb75$var$ClassSet","$7cbbe4e24ef3cb75$export$841858b892ce1f4c","coverage","ruleSetCount","ruleSets","classDef","classSetCnt","classSet","coverages","$7cbbe4e24ef3cb75$var$ChainRule","backtrackGlyphCount","backtrack","inputGlyphCount","lookaheadGlyphCount","lookahead","$7cbbe4e24ef3cb75$var$ChainRuleSet","$7cbbe4e24ef3cb75$export$5e6d09e6861162f6","chainCount","chainRuleSets","backtrackClassDef","inputClassDef","lookaheadClassDef","chainClassSet","backtrackCoverage","inputCoverage","lookaheadCoverage","$1a47b0c45c1c22fe$var$F2DOT14","$1a47b0c45c1c22fe$var$RegionAxisCoordinates","startCoord","peakCoord","endCoord","$1a47b0c45c1c22fe$var$VariationRegionList","axisCount","regionCount","variationRegions","$1a47b0c45c1c22fe$var$DeltaSet","shortDeltas","shortDeltaCount","regionDeltas","regionIndexCount","deltas","concat","$1a47b0c45c1c22fe$var$ItemVariationData","itemCount","regionIndexes","deltaSets","$1a47b0c45c1c22fe$export$fe1b122a2710f241","variationRegionList","variationDataCount","itemVariationData","$1a47b0c45c1c22fe$var$ConditionTable","axisIndex","filterRangeMinValue","filterRangeMaxValue","$1a47b0c45c1c22fe$var$ConditionSet","conditionCount","conditionTable","$1a47b0c45c1c22fe$var$FeatureTableSubstitutionRecord","featureIndex","alternateFeatureTable","$1a47b0c45c1c22fe$var$FeatureTableSubstitution","substitutionCount","substitutions","$1a47b0c45c1c22fe$var$FeatureVariationRecord","conditionSet","featureTableSubstitution","$1a47b0c45c1c22fe$export$441b70b7971dd419","majorVersion","minorVersion","featureVariationRecordCount","featureVariationRecords","$b84fd3dd9d8eddb2$var$PredefinedOp","predefinedOps","index","$b84fd3dd9d8eddb2$var$CFFEncodingVersion","$b84fd3dd9d8eddb2$var$Range1","first","nLeft","$b84fd3dd9d8eddb2$var$Range2","$b84fd3dd9d8eddb2$var$CFFEncoding","nCodes","codes","nRanges","ranges","$b84fd3dd9d8eddb2$var$RangeArray","range","$b84fd3dd9d8eddb2$var$CFFCharset","CharStrings","$b84fd3dd9d8eddb2$var$FDRange3","fd","$b84fd3dd9d8eddb2$var$FDRange4","$b84fd3dd9d8eddb2$var$FDSelect","fds","sentinel","$b84fd3dd9d8eddb2$var$ptr","$b84fd3dd9d8eddb2$var$CFFPrivateOp","$b84fd3dd9d8eddb2$var$FontDict","$b84fd3dd9d8eddb2$var$CFFTopDict","$b84fd3dd9d8eddb2$var$VariationStore","itemVariationStore","$b84fd3dd9d8eddb2$var$CFF2TopDict","$b84fd3dd9d8eddb2$export$2e2bcd8739ae039","nameIndex","topDictIndex","stringIndex","globalSubrIndex","topDict","$822ac0d589e4e237$var$CFFFont","top","isCIDFont","ROS","sid","fullName","FullName","familyName","FamilyName","getCharString","glyph","readBuffer","getGlyphName","gid","charset","fdForGlyph","FDSelect","low","high","mid","privateDictForGlyph","FDArray","Private","$822ac0d589e4e237$export$2e2bcd8739ae039","$2bbf2bc1ce37cd8f$var$VerticalOrigin","glyphIndex","vertOriginY","$2bbf2bc1ce37cd8f$export$2e2bcd8739ae039","defaultVertOriginY","numVertOriginYMetrics","$0941618dc22a946d$export$16b227cb15d716a0","height","width","horiBearingX","horiBearingY","horiAdvance","vertBearingX","vertBearingY","vertAdvance","$0941618dc22a946d$export$62c53e75f69bfe12","bearingX","bearingY","$0941618dc22a946d$var$EBDTComponent","xOffset","yOffset","$0941618dc22a946d$var$ByteAligned","$0941618dc22a946d$var$BitAligned","data","pad","numComponents","components","dataLen","$9911c4c7201c13de$var$SBitLineMetrics","ascender","descender","widthMax","caretSlopeNumerator","caretSlopeDenominator","minOriginSB","minAdvanceSB","maxBeforeBL","minAfterBL","$9911c4c7201c13de$var$CodeOffsetPair","glyphCode","$9911c4c7201c13de$var$IndexSubtable","imageFormat","imageDataOffset","offsetArray","lastGlyphIndex","firstGlyphIndex","imageSize","bigMetrics","glyphArray","glyphCodeArray","$9911c4c7201c13de$var$IndexSubtableArray","subtable","$9911c4c7201c13de$var$BitmapSizeTable","indexSubTableArray","indexTablesSize","numberOfIndexSubTables","colorRef","hori","vert","startGlyphIndex","endGlyphIndex","ppemX","ppemY","bitDepth","$9911c4c7201c13de$export$2e2bcd8739ae039","numSizes","$abb847051efd51b1$var$ImageTable","ppem","resolution","imageOffsets","$abb847051efd51b1$export$2e2bcd8739ae039","numImgTables","imageTables","$eb629188f3dfefdd$var$LayerRecord","paletteIndex","$eb629188f3dfefdd$var$BaseGlyphRecord","firstLayerIndex","numLayers","$eb629188f3dfefdd$export$2e2bcd8739ae039","numBaseGlyphRecords","baseGlyphRecord","layerRecords","numLayerRecords","$08734b8e7dc64587$var$ColorRecord","blue","green","red","alpha","$08734b8e7dc64587$export$2e2bcd8739ae039","numPaletteEntries","numPalettes","numColorRecords","colorRecords","colorRecordIndices","offsetPaletteTypeArray","offsetPaletteLabelArray","offsetPaletteEntryLabelArray","$497cef411d884e34$var$BaseCoord","coordinate","referenceGlyph","baseCoordPoint","deviceTable","$497cef411d884e34$var$BaseValues","defaultIndex","baseCoordCount","baseCoords","$497cef411d884e34$var$FeatMinMaxRecord","minCoord","maxCoord","$497cef411d884e34$var$MinMax","featMinMaxCount","featMinMaxRecords","$497cef411d884e34$var$BaseLangSysRecord","minMax","$497cef411d884e34$var$BaseScript","baseValues","defaultMinMax","baseLangSysCount","baseLangSysRecords","$497cef411d884e34$var$BaseScriptRecord","$497cef411d884e34$var$BaseScriptList","$497cef411d884e34$var$BaseTagList","$497cef411d884e34$var$Axis","baseTagList","baseScriptList","$497cef411d884e34$export$2e2bcd8739ae039","horizAxis","vertAxis","$cf5f33c63ef209e6$var$AttachPoint","$cf5f33c63ef209e6$var$AttachList","attachPoints","$cf5f33c63ef209e6$var$CaretValue","caretValuePoint","$cf5f33c63ef209e6$var$LigGlyph","$cf5f33c63ef209e6$var$LigCaretList","ligGlyphCount","ligGlyphs","$cf5f33c63ef209e6$var$MarkGlyphSetsDef","markSetTableFormat","markSetCount","$cf5f33c63ef209e6$export$2e2bcd8739ae039","glyphClassDef","attachList","ligCaretList","markAttachClassDef","markGlyphSetsDef","$47e0e8ef515d9903$var$ValueFormat","$47e0e8ef515d9903$var$types","xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","rel","yPlaDevice","xAdvDevice","yAdvDevice","$47e0e8ef515d9903$var$ValueRecord","buildStruct","struct","$47e0e8ef515d9903$var$PairValueRecord","secondGlyph","value1","value2","$47e0e8ef515d9903$var$PairSet","$47e0e8ef515d9903$var$Class2Record","$47e0e8ef515d9903$var$Anchor","xCoordinate","yCoordinate","anchorPoint","xDeviceTable","yDeviceTable","$47e0e8ef515d9903$var$EntryExitRecord","entryAnchor","exitAnchor","$47e0e8ef515d9903$var$MarkRecord","markAnchor","$47e0e8ef515d9903$var$MarkArray","$47e0e8ef515d9903$var$BaseRecord","classCount","$47e0e8ef515d9903$var$BaseArray","$47e0e8ef515d9903$var$ComponentRecord","$47e0e8ef515d9903$var$LigatureAttach","$47e0e8ef515d9903$var$LigatureArray","$47e0e8ef515d9903$export$73a8cfb19cd43a0f","valueFormat","valueCount","values","valueFormat1","valueFormat2","pairSetCount","pairSets","classDef1","classDef2","class1Count","class2Count","classRecords","entryExitCount","entryExitRecords","markCoverage","baseCoverage","markArray","baseArray","ligatureCoverage","ligatureArray","mark1Coverage","mark2Coverage","mark1Array","mark2Array","posFormat","extension","$47e0e8ef515d9903$export$2e2bcd8739ae039","scriptList","featureList","lookupList","featureVariations","$d3f442064af66e06$var$Sequence","$d3f442064af66e06$var$AlternateSet","$d3f442064af66e06$var$Ligature","compCount","$d3f442064af66e06$var$LigatureSet","$d3f442064af66e06$var$GSUBLookup","deltaGlyphID","substitute","substFormat","sequences","alternateSet","ligatureSets","substitutes","$d3f442064af66e06$export$2e2bcd8739ae039","$71cfb3c4767fbd0c$var$JstfGSUBModList","$71cfb3c4767fbd0c$var$JstfPriority","shrinkageEnableGSUB","shrinkageDisableGSUB","shrinkageEnableGPOS","shrinkageDisableGPOS","shrinkageJstfMax","extensionEnableGSUB","extensionDisableGSUB","extensionEnableGPOS","extensionDisableGPOS","extensionJstfMax","$71cfb3c4767fbd0c$var$JstfLangSys","$71cfb3c4767fbd0c$var$JstfLangSysRecord","jstfLangSys","$71cfb3c4767fbd0c$var$JstfScript","extenderGlyphs","langSysCount","$71cfb3c4767fbd0c$var$JstfScriptRecord","$71cfb3c4767fbd0c$export$2e2bcd8739ae039","scriptCount","$d059a6bd2d3b5b63$var$MapDataEntry","entry","readUInt24BE","_size","entryFormat","outerIndex","innerIndex","$d059a6bd2d3b5b63$var$DeltaSetIndexMap","mapCount","mapData","$d059a6bd2d3b5b63$export$2e2bcd8739ae039","advanceWidthMapping","LSBMapping","RSBMapping","$dceeca3e1977ce30$var$Signature","$dceeca3e1977ce30$var$SignatureBlock","cbSignature","signature","$dceeca3e1977ce30$export$2e2bcd8739ae039","ulVersion","usNumSigs","usFlag","signatures","signatureBlocks","$8acd740a9435aad0$var$GaspRange","rangeMaxPPEM","rangeGaspBehavior","$8acd740a9435aad0$export$2e2bcd8739ae039","numRanges","gaspRanges","$b5f380243c34d6a0$var$DeviceRecord","pixelSize","maximumWidth","widths","$b5f380243c34d6a0$export$2e2bcd8739ae039","sizeDeviceRecord","$ca2df1256966e313$var$KernPair","left","right","$ca2df1256966e313$var$ClassTable","firstGlyph","nGlyphs","$ca2df1256966e313$var$Kern2Array","off","leftTable","rowWidth","$ca2df1256966e313$var$KernSubtable","nPairs","pairs","rightTable","array","kernValueCount","leftClassCount","rightClassCount","kernValue","leftClass","rightClass","kernIndex","$ca2df1256966e313$var$KernTable","subVersion","padding","tupleIndex","$ca2df1256966e313$export$2e2bcd8739ae039","nTables","$7a9f92b0c46ebe33$export$2e2bcd8739ae039","yPels","$2b2ccc419d152631$export$2e2bcd8739ae039","fontNumber","pitch","style","typeFamily","symbolSet","typeface","characterComplement","fileName","strokeWeight","widthType","serifStyle","$ca5b40b9bcda9c9b$var$Ratio","bCharSet","xRatio","yStartRatio","yEndRatio","$ca5b40b9bcda9c9b$var$vTable","yPelHeight","$ca5b40b9bcda9c9b$var$VdmxGroup","recs","startsz","endsz","entries","$ca5b40b9bcda9c9b$export$2e2bcd8739ae039","numRecs","numRatios","ratioRanges","$69530a3c40755af0$export$2e2bcd8739ae039","advanceHeightMax","minTopSideBearing","minBottomSideBearing","yMaxExtent","$344073dd270f0e62$var$VmtxEntry","$344073dd270f0e62$export$2e2bcd8739ae039","vhea","$3793b781918cfced$var$shortFrac","$3793b781918cfced$var$Correspondence","fromCoord","toCoord","$3793b781918cfced$var$Segment","pairCount","correspondence","$3793b781918cfced$export$2e2bcd8739ae039","segment","$6cb7dd5f47d82580$var$UnboundedArrayAccessor","getItem","_items","base","inspect","name","$6cb7dd5f47d82580$export$c5af1eebc882e39a","$6cb7dd5f47d82580$export$8351f8c2ae2f103c","ValueType","BinarySearchHeader","unitSize","nUnits","LookupSegmentSingle","lastGlyph","LookupSegmentArray","LookupSingle","binarySearchHeader","segments","$6cb7dd5f47d82580$export$79f7d93d790934ba","entryData","assign","newState","Entry","StateArray","nClasses","classTable","stateArray","entryTable","$6a3746e8c708f5a3$var$BslnSubtable","mappingData","standardGlyph","controlPoints","$6a3746e8c708f5a3$export$2e2bcd8739ae039","defaultBaseline","$d0c76fac617b308a$var$Setting","setting","fontFeatures","$d0c76fac617b308a$var$FeatureName","nSettings","settingTable","featureFlags","defaultSetting","$d0c76fac617b308a$export$2e2bcd8739ae039","featureNameCount","reserved1","reserved2","featureNames","$e83fd065f00fcd01$var$Axis","axisTag","minValue","defaultValue","maxValue","$e83fd065f00fcd01$var$Instance","coord","postscriptNameID","instanceSize","$e83fd065f00fcd01$export$2e2bcd8739ae039","offsetToData","countSizePairs","axisSize","instanceCount","axis","instance","$dbe33c8d3a7f131c$var$shortFrac","$dbe33c8d3a7f131c$export$2e2bcd8739ae039","globalCoordCount","globalCoords","$05b01887df96c4ee$var$ClassTable","subFeatureFlags","stateTable","ClassLookupTable","newStateOffset","$05b01887df96c4ee$var$WidthDeltaRecord","justClass","beforeGrowLimit","beforeShrinkLimit","afterGrowLimit","afterShrinkLimit","growFlags","shrinkFlags","$05b01887df96c4ee$var$WidthDeltaCluster","$05b01887df96c4ee$var$ActionData","lowerLimit","upperLimit","order","addGlyph","substThreshold","substGlyph","variationAxis","minimumLimit","noStretchValue","maximumLimit","$05b01887df96c4ee$var$Action","actionClass","actionType","actionLength","actionData","$05b01887df96c4ee$var$PostcompensationAction","$05b01887df96c4ee$var$PostCompensationTable","lookupTable","$05b01887df96c4ee$var$JustificationTable","wdcOffset","postCompensationTable","widthDeltaClusters","$05b01887df96c4ee$export$2e2bcd8739ae039","horizontal","vertical","$03ee6ebd54db1053$var$LigatureData","action","$03ee6ebd54db1053$var$ContextualData","markIndex","currentIndex","$03ee6ebd54db1053$var$InsertionData","currentInsertIndex","markedInsertIndex","$03ee6ebd54db1053$var$SubstitutionTable","items","$03ee6ebd54db1053$var$SubtableData","substitutionTable","ligatureActions","ligatureList","insertionActions","$03ee6ebd54db1053$var$Subtable","$03ee6ebd54db1053$var$FeatureEntry","featureType","featureSetting","enableFlags","disableFlags","$03ee6ebd54db1053$var$MorxChain","defaultFlags","chainLength","nFeatureEntries","nSubtables","features","subtables","$03ee6ebd54db1053$export$2e2bcd8739ae039","unused","nChains","chains","$b7492a80b0d1a056$var$OpticalBounds","bottom","$b7492a80b0d1a056$export$2e2bcd8739ae039","$c3395722bea751e2$var$tables","$c3395722bea751e2$export$2e2bcd8739ae039","cmap","head","hmtx","post","fpgm","loca","prep","glyf","VORG","EBLC","CBLC","sbix","COLR","CPAL","BASE","GDEF","GPOS","GSUB","JSTF","HVAR","DSIG","gasp","hdmx","kern","LTSH","PCLT","VDMX","vmtx","avar","bsln","feat","fvar","gvar","just","morx","opbd","$816c07a04b6dba87$var$TableEntry","checkSum","$816c07a04b6dba87$var$Directory","numTables","maxExponentFor2","floor","log","LN2","maxPowerOf2","pow","$816c07a04b6dba87$export$2e2bcd8739ae039","$12727730ddfc8bfe$export$2e0ae67339d5f1ac","cmp","min","$12727730ddfc8bfe$export$d02631cccf789723","range1","$12727730ddfc8bfe$export$3d28c1996ced1f14","$12727730ddfc8bfe$var$CHARS","$12727730ddfc8bfe$var$LOOKUP","$12727730ddfc8bfe$export$94fdf11bafc8de6b","base64","bufferLength","bytes","p","encoded1","encoded2","encoded3","encoded4","$f08dd41ef10b694c$export$2e2bcd8739ae039","findSubtable","cmapTable","lookup","codepoint","variationSelector","getVariationSelector","rangeOffset","group","uvs","selectors","toArray","x","sel","getCharacterSet","endCodes","tail","codePointsForGlyph","delta","c","g","prototype","$0bba3a9db57637f3$export$2e2bcd8739ae039","positions","id","getKerning","crossStream","variation","pairIdx","pair","leftOffset","rightOffset","override","$0a4bdfeb6dfd6f5e$export$2e2bcd8739ae039","positionGlyphs","clusterStart","clusterEnd","isMark","positionCluster","baseBox","cbox","copy","codePoints","minX","yGap","mark","markBox","position","combiningClass","getCombiningClass","maxX","minY","maxY","codePoint","$f34600ab9d7f70d8$export$2e2bcd8739ae039","addPoint","y","abs","Infinity","$130d1a642ebcd2b7$var$UNICODE_SCRIPTS","Caucasian_Albanian","Arabic","Imperial_Aramaic","Armenian","Avestan","Balinese","Bamum","Bassa_Vah","Batak","Bengali","Bopomofo","Brahmi","Braille","Buginese","Buhid","Chakma","Canadian_Aboriginal","Carian","Cham","Cherokee","Coptic","Cypriot","Cyrillic","Devanagari","Deseret","Duployan","Egyptian_Hieroglyphs","Elbasan","Ethiopic","Georgian","Glagolitic","Gothic","Grantha","Greek","Gujarati","Gurmukhi","Hangul","Han","Hanunoo","Hebrew","Hiragana","Pahawh_Hmong","Katakana_Or_Hiragana","Old_Italic","Javanese","Kayah_Li","Katakana","Kharoshthi","Khmer","Khojki","Kannada","Kaithi","Tai_Tham","Lao","Latin","Lepcha","Limbu","Linear_A","Linear_B","Lisu","Lycian","Lydian","Mahajani","Mandaic","Manichaean","Mende_Kikakui","Meroitic_Cursive","Meroitic_Hieroglyphs","Malayalam","Modi","Mongolian","Mro","Meetei_Mayek","Myanmar","Old_North_Arabian","Nabataean","Nko","Ogham","Ol_Chiki","Old_Turkic","Oriya","Osmanya","Palmyrene","Pau_Cin_Hau","Old_Permic","Phags_Pa","Inscriptional_Pahlavi","Psalter_Pahlavi","Phoenician","Miao","Inscriptional_Parthian","Rejang","Runic","Samaritan","Old_South_Arabian","Saurashtra","Shavian","Sharada","Siddham","Khudawadi","Sinhala","Sora_Sompeng","Sundanese","Syloti_Nagri","Syriac","Tagbanwa","Takri","Tai_Le","New_Tai_Lue","Tamil","Tai_Viet","Telugu","Tifinagh","Tagalog","Thaana","Thai","Tibetan","Tirhuta","Ugaritic","Vai","Warang_Citi","Old_Persian","Cuneiform","Yi","Inherited","Common","Unknown","$130d1a642ebcd2b7$var$OPENTYPE_SCRIPTS","$130d1a642ebcd2b7$var$RTL","arab","hebr","syrc","thaa","cprt","khar","phnx","lydi","avst","armi","phli","prti","sarb","orkh","samr","mand","merc","mero","mani","mend","nbat","narb","palm","phlp","$130d1a642ebcd2b7$export$9fddb9d0dd7d8a54","script4","$be07b3e97a42687a$export$2e2bcd8739ae039","advanceWidth","advanceHeight","bbox","direction","$1ac75d9a55b67f01$export$2e2bcd8739ae039","$3b6302b64eccc32c$var$features","allTypographicFeatures","code","exclusive","allTypeFeatures","ligatures","requiredLigatures","commonLigatures","rareLigatures","rebusPictures","diphthongLigatures","squaredLigatures","abbrevSquaredLigatures","symbolLigatures","contextualLigatures","historicalLigatures","cursiveConnection","unconnected","partiallyConnected","cursive","letterCase","verticalSubstitution","substituteVerticalForms","linguisticRearrangement","numberSpacing","monospacedNumbers","proportionalNumbers","thirdWidthNumbers","quarterWidthNumbers","smartSwash","wordInitialSwashes","wordFinalSwashes","nonFinalSwashes","diacritics","showDiacritics","hideDiacritics","decomposeDiacritics","verticalPosition","normalPosition","superiors","inferiors","ordinals","scientificInferiors","fractions","noFractions","verticalFractions","diagonalFractions","overlappingCharacters","preventOverlap","typographicExtras","slashedZero","mathematicalExtras","mathematicalGreek","ornamentSets","noOrnaments","dingbats","piCharacters","fleurons","decorativeBorders","internationalSymbols","mathSymbols","characterAlternatives","noAlternates","designComplexity","designLevel1","designLevel2","designLevel3","designLevel4","designLevel5","styleOptions","noStyleOptions","displayText","engravedText","illuminatedCaps","titlingCaps","tallCaps","characterShape","traditionalCharacters","simplifiedCharacters","JIS1978Characters","JIS1983Characters","JIS1990Characters","traditionalAltOne","traditionalAltTwo","traditionalAltThree","traditionalAltFour","traditionalAltFive","expertCharacters","JIS2004Characters","hojoCharacters","NLCCharacters","traditionalNamesCharacters","numberCase","lowerCaseNumbers","upperCaseNumbers","textSpacing","proportionalText","monospacedText","halfWidthText","thirdWidthText","quarterWidthText","altProportionalText","altHalfWidthText","transliteration","noTransliteration","annotation","noAnnotation","boxAnnotation","roundedBoxAnnotation","circleAnnotation","invertedCircleAnnotation","parenthesisAnnotation","periodAnnotation","romanNumeralAnnotation","diamondAnnotation","invertedBoxAnnotation","invertedRoundedBoxAnnotation","kanaSpacing","fullWidthKana","proportionalKana","ideographicSpacing","fullWidthIdeographs","proportionalIdeographs","halfWidthIdeographs","unicodeDecomposition","canonicalComposition","compatibilityComposition","transcodingComposition","rubyKana","CJKSymbolAlternatives","noCJKSymbolAlternatives","CJKSymbolAltOne","CJKSymbolAltTwo","CJKSymbolAltThree","CJKSymbolAltFour","CJKSymbolAltFive","ideographicAlternatives","noIdeographicAlternatives","ideographicAltOne","ideographicAltTwo","ideographicAltThree","ideographicAltFour","ideographicAltFive","CJKVerticalRomanPlacement","CJKVerticalRomanCentered","CJKVerticalRomanHBaseline","italicCJKRoman","CJKItalicRoman","caseSensitiveLayout","caseSensitiveSpacing","alternateKana","alternateHorizKana","alternateVertKana","stylisticAlternatives","noStylisticAlternates","stylisticAltOne","stylisticAltTwo","stylisticAltThree","stylisticAltFour","stylisticAltFive","stylisticAltSix","stylisticAltSeven","stylisticAltEight","stylisticAltNine","stylisticAltTen","stylisticAltEleven","stylisticAltTwelve","stylisticAltThirteen","stylisticAltFourteen","stylisticAltFifteen","stylisticAltSixteen","stylisticAltSeventeen","stylisticAltEighteen","stylisticAltNineteen","stylisticAltTwenty","contextualAlternates","swashAlternates","contextualSwashAlternates","lowerCase","defaultLowerCase","lowerCaseSmallCaps","lowerCasePetiteCaps","upperCase","defaultUpperCase","upperCaseSmallCaps","upperCasePetiteCaps","languageTag","CJKRomanSpacing","halfWidthCJKRoman","proportionalCJKRoman","defaultCJKRoman","fullWidthCJKRoman","$3b6302b64eccc32c$var$feature","selector","$3b6302b64eccc32c$var$OTMapping","rlig","clig","dlig","hlig","liga","hist","smcp","pcap","frac","dnom","numr","afrc","case","ccmp","cpct","valt","swsh","cswh","curs","c2pc","c2sc","init","fin2","medi","med2","fin3","fina","pkna","half","halt","hkna","vkna","ital","lnum","onum","mgrk","calt","vrt2","tnum","pnum","sups","subs","ordn","pwid","hwid","qwid","twid","fwid","palt","trad","smpl","jp78","jp83","jp90","jp04","expt","hojo","nlck","tnam","ruby","titl","zero","ss01","ss02","ss03","ss04","ss05","ss06","ss07","ss08","ss09","ss10","ss11","ss12","ss13","ss14","ss15","ss16","ss17","ss18","ss19","ss20","slice","$3b6302b64eccc32c$var$AATMapping","ot","aat","$3b6302b64eccc32c$var$mapFeatureStrings","f","isNaN","typeCode","settingCode","$ff5ce077dae0f144$export$2e2bcd8739ae039","seg","glyphsForValue","classValue","segment1","$50c7aac9316f2948$export$2e2bcd8739ae039","reverse","processEntry","currentState","dir","classCode","shouldAdvance","entryIndex","traverse","opts","state","visited","add","row","enter","exit","$55f71433a605c87d$var$REVERSE_DIRECTION","$55f71433a605c87d$export$2e2bcd8739ae039","chain","processSubtable","splice","processNoncontextualSubstitutions","ligatureStack","markedGlyph","markedIndex","stateMachine","getStateMachine","getProcessor","processIndicRearragement","processContextualSubstitution","processLigature","processGlyphInsertion","verb","$55f71433a605c87d$var$swap","$55f71433a605c87d$var$reorderGlyphs","subsitutions","getGlyph","actions","actionIndex","last","ligatureIndex","ligatureGlyphs","componentGlyph","unshift","store","ligatureEntry","_insertGlyphs","insertionActionIndex","isBefore","insertions","getSupportedFeatures","generateInputs","inputCache","generateInputCache","generateInputsForSubtable","stack","g1","found","bind","rangeA","rangeB","reverseA","reverseB","$ba6dd74203be8728$export$2e2bcd8739ae039","glyphRun","morxProcessor","features1","r","$3b6302b64eccc32c$export$b813f7d2a1677c16","getAvailableFeatures","features2","feature1","keys","$3b6302b64eccc32c$export$bd6df347a4f391c4","stringsForGlyph","glyphStrings","_addStrings","strings","_cmapProcessor","String","fromCodePoint","fallbackPosition","$94d7a73bd2edfc9a$export$2e2bcd8739ae039","_addFeatures","global","stageIndex","stages","stage","allFeatures","globalFeatures","arg","local","addStage","setFeatureOverrides","assignGlobalFeatures","processor","applyFeatures","$649970d87335b30f$var$VARIATION_FEATURES","$649970d87335b30f$var$COMMON_FEATURES","$649970d87335b30f$var$FRACTIONAL_FEATURES","$649970d87335b30f$var$HORIZONTAL_FEATURES","$649970d87335b30f$var$DIRECTIONAL_FEATURES","ltr","rtl","$649970d87335b30f$export$2e2bcd8739ae039","plan","planPreprocessing","planFeatures","planPostprocessing","assignFeatures","userFeatures","$764eb544bbe1ccf0$var$trie","$764eb544bbe1ccf0$var$FEATURES","$764eb544bbe1ccf0$var$ShapingClasses","$764eb544bbe1ccf0$var$ISOL","$764eb544bbe1ccf0$var$FINA","$764eb544bbe1ccf0$var$FIN2","$764eb544bbe1ccf0$var$MEDI","$764eb544bbe1ccf0$var$MED2","$764eb544bbe1ccf0$var$INIT","$764eb544bbe1ccf0$var$NONE","$764eb544bbe1ccf0$var$STATE_TABLE","$764eb544bbe1ccf0$export$2e2bcd8739ae039","prev","curAction","prevAction","$764eb544bbe1ccf0$var$getShapingClass","category","$85d408632270248b$export$2e2bcd8739ae039","reset","cur","shouldIgnore","ignoreMarks","ignoreBaseGlyphs","isBase","ignoreLigatures","isLigature","move","next","peek","idx","increment","peekIndex","$a83b9c36aaa94fd3$var$DEFAULT_SCRIPTS","$a83b9c36aaa94fd3$export$2e2bcd8739ae039","findScript","selectScript","changed","scriptTag","repeat","substituteFeature","substituteFeatureForVariations","lookupsForFeatures","exclude","lookups","lookupIndex","sort","variationsIndex","substitution","findVariationsIndex","coords","variations","conditions","variationConditionsMatch","every","condition","advances","applyLookups","glyphIterator","currentFeature","applyLookup","applyLookupList","lookupRecord","coverageIndex","match","sequence","matched","sequenceMatches","component","sequenceMatchIndices","coverageSequenceMatches","getClassID","classSequenceMatches","classID","applyContext","rule","rule1","applyChainingContext","rules","rule2","_variationProcessor","normalizedCoords","ligatureID","$10e7b257e1a9a756$export$2e2bcd8739ae039","_id","substituted","_font","ligatureComponent","isLigated","cursiveAttachment","markAttachment","shaperInfo","isMultiplied","$e1c6bbc8cb416f8c$export$2e2bcd8739ae039","$e1c6bbc8cb416f8c$var$getType","$e1c6bbc8cb416f8c$var$STATE_TABLE","$e1c6bbc8cb416f8c$var$DECOMPOSE","hasGlyphForCodePoint","$e1c6bbc8cb416f8c$var$decompose","$e1c6bbc8cb416f8c$var$COMPOSE","$e1c6bbc8cb416f8c$var$compose","$e1c6bbc8cb416f8c$var$TONE_MARK","$e1c6bbc8cb416f8c$var$reorderToneMark","$e1c6bbc8cb416f8c$var$INVALID","$e1c6bbc8cb416f8c$var$insertDottedCircle","$e1c6bbc8cb416f8c$var$HANGUL_BASE","$e1c6bbc8cb416f8c$var$HANGUL_COUNT","$e1c6bbc8cb416f8c$var$L_BASE","$e1c6bbc8cb416f8c$var$V_BASE","$e1c6bbc8cb416f8c$var$T_BASE","$e1c6bbc8cb416f8c$var$V_COUNT","$e1c6bbc8cb416f8c$var$T_COUNT","$e1c6bbc8cb416f8c$var$L_END","$e1c6bbc8cb416f8c$var$V_END","$e1c6bbc8cb416f8c$var$T_END","$e1c6bbc8cb416f8c$var$DOTTED_CIRCLE","$e1c6bbc8cb416f8c$var$isL","$e1c6bbc8cb416f8c$var$isV","$e1c6bbc8cb416f8c$var$isT","$e1c6bbc8cb416f8c$var$isTone","$e1c6bbc8cb416f8c$var$isLVT","$e1c6bbc8cb416f8c$var$isLV","$e1c6bbc8cb416f8c$var$isCombiningL","$e1c6bbc8cb416f8c$var$isCombiningV","$e1c6bbc8cb416f8c$var$isCombiningT","$e1c6bbc8cb416f8c$var$X","$e1c6bbc8cb416f8c$var$L","$e1c6bbc8cb416f8c$var$V","$e1c6bbc8cb416f8c$var$T","$e1c6bbc8cb416f8c$var$LV","$e1c6bbc8cb416f8c$var$LVT","$e1c6bbc8cb416f8c$var$M","$e1c6bbc8cb416f8c$var$getGlyph","glyphForCodePoint","l","ljmo","vjmo","insert","tjmo","lv","prevType","del","$e1c6bbc8cb416f8c$var$getLength","dottedCircle","$4b0735ca6c692ea5$exports","JSON","parse","$aa333a9607471296$exports","$90a9d3398ee54fe5$export$a513ea61a7bee91c","X","C","V","N","H","ZWNJ","ZWJ","M","SM","VD","A","Placeholder","Dotted_Circle","RS","Coeng","Repha","Ra","CM","Symbol","$90a9d3398ee54fe5$export$1a1f61c9c4dd9df0","Start","Ra_To_Become_Reph","Pre_M","Pre_C","Base_C","After_Main","Above_C","Before_Sub","Below_C","After_Sub","Before_Post","Post_C","After_Post","Final_C","SMVD","End","$90a9d3398ee54fe5$export$8519deaa7de2b07","$90a9d3398ee54fe5$export$bbcd928767338e0d","$90a9d3398ee54fe5$export$ca9599b2a300afc","$90a9d3398ee54fe5$export$e99d119da76a0fc5","Default","hasOldSpec","virama","basePos","rephPos","rephMode","blwfMode","$90a9d3398ee54fe5$export$f647c9cfdd77d95a","decompositions","$7826f90f6f0cecc9$var$decompositions","$7826f90f6f0cecc9$var$trie","$7826f90f6f0cecc9$var$stateMachine","$7826f90f6f0cecc9$export$2e2bcd8739ae039","$7826f90f6f0cecc9$var$setupSyllables","$7826f90f6f0cecc9$var$initialReordering","$7826f90f6f0cecc9$var$finalReordering","unicodeScript","indicConfig","isOldSpec","d","decomposed","$7826f90f6f0cecc9$var$indicCategory","$7826f90f6f0cecc9$var$indicPosition","$7826f90f6f0cecc9$var$IndicInfo","syllableType","syllable","tags","$7826f90f6f0cecc9$var$isConsonant","$7826f90f6f0cecc9$var$isJoiner","$7826f90f6f0cecc9$var$isHalantOrCoeng","$7826f90f6f0cecc9$var$wouldSubstitute","_layoutEngine","engine","GSUBProcessor","$7826f90f6f0cecc9$var$consonantPosition","consonant","info","$7826f90f6f0cecc9$var$nextSyllable","limit","hasReph","rphf","seenBelow","i2","j","disallowDoubleHalants","lastPos","i3","i4","i5","i6","blwf","i7","i8","abvf","pstf","prefLen","pref","i9","cfar","i10","nonJoiner","tryPref","BASE_C","newPos","oldPos","tmp","newRephPos","reph","test","categories","$7ab494fe977143c6$var$categories","$7ab494fe977143c6$var$decompositions","$7ab494fe977143c6$var$trie","$7ab494fe977143c6$var$stateMachine","$7ab494fe977143c6$export$2e2bcd8739ae039","$7ab494fe977143c6$var$setupSyllables","$7ab494fe977143c6$var$clearSubstitutionFlags","$7ab494fe977143c6$var$recordRphf","$7ab494fe977143c6$var$recordPref","$7ab494fe977143c6$var$reorder","$7ab494fe977143c6$var$useCategory","$7ab494fe977143c6$var$USEInfo","$7ab494fe977143c6$var$nextSyllable","$7ab494fe977143c6$var$isBase","$7ab494fe977143c6$var$isHalant","$102b6fe50f1d50b4$var$SHAPERS","mong","phag","hang","bng2","beng","dev2","deva","gjr2","gujr","guru","gur2","knda","knd2","mlm2","mlym","ory2","orya","taml","tml2","telu","tel2","khmr","bali","batk","brah","bugi","buhd","cakm","cham","dupl","egyp","gran","hano","java","kthi","kali","khoj","sind","lepc","limb","mahj","mtei","modi","hmng","rjng","saur","shrd","sidd","sinh","sund","sylo","tglg","tagb","tale","lana","tavt","takr","tibt","tfng","tirh","latn","DFLT","$0a876c45f1f7c41c$export$2e2bcd8739ae039","curGlyph","replacement","undefined","USER_INDEX","ligature","characters","ligatureGlyph","isMarkLigature","lastLigID","lastNumComps","curComps","matchIndex","$c96c93587d49c14d$export$2e2bcd8739ae039","applyPositionValue","variationProcessor","variationStore","getDelta","nextGlyph","class1","class2","pair1","nextIndex","curRecord","nextRecord","getAnchor","rightToLeft","baseGlyphIndex","baseIndex","markRecord","baseAnchor","applyAnchor","ligIndex","ligAttach","markGlyph","ligGlyph","compIndex","mark1Index","prevIndex","good","mark2Index","markCoords","markPos","anchor","fixCursiveAttachment","fixMarkAttachment","k1","$a62492810de27e3d$export$2e2bcd8739ae039","setup","glyphInfos","GPOSProcessor","shaper","$102b6fe50f1d50b4$export$7877a478dd30fd3d","glyphInfo","zeroMarkWidths","zeroMarkAdvances","cleanup","$4c0a7fa5df7a9ab1$export$2e2bcd8739ae039","layout","script2","$130d1a642ebcd2b7$export$e5cb25e204fb8450","glyphsForString","script3","$130d1a642ebcd2b7$export$16fab0757cfc223d","hideDefaultIgnorables","positioned","unicodeLayoutEngine","kernProcessor","space","isDefaultIgnorable","ch","plane","from","$f43aec954cdfdf21$var$SVG_COMMANDS","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath","$f43aec954cdfdf21$export$2e2bcd8739ae039","toFunction","commands","forEach","command","toSVG","round","join","_cbox","command1","freeze","_bbox","cx","cy","p0","p1","p2","p3","qp1x","qp1y","p3x","p3y","cp1x","cp1y","cp2x","cp2y","b2ac","t1","sqrt","t2","mapPoints","path","transform","m0","m1","m2","m3","m4","m5","translate","rotate","angle","cos","sin","scale","scaleX","scaleY","$7713b9b7b438dff8$export$2e2bcd8739ae039","$f92906be28e61769$export$2e2bcd8739ae039","_getPath","_getCBox","_getBBox","_getTableMetrics","metric","_getMetrics","_metrics","leftBearing","topBearing","os2","getAdvanceAdjustment","getScaledPath","ligatureCaretPositions","_getName","fromCharCode","render","save","fill","restore","$69aac16029968692$var$GlyfHeader","numberOfContours","$69aac16029968692$export$baf26146a414f24a","onCurve","endContour","$69aac16029968692$var$Component","dx","dy","scale01","scale10","$69aac16029968692$export$2e2bcd8739ae039","internal","_getTableStream","_parseGlyphCoord","short","same","_decode","glyfPos","_decodeSimple","_decodeComposite","points","endPtsOfContours","numCoords","flag","point","px","py","_getPhantomPoints","transformPoints","phantomPoints","haveInstructions","gPos","readInt8","_getContours","contours","contour","directory","firstPt","lastPt","curvePt","pt","prevPt","midX","midY","$62cc5109c6101893$export$2e2bcd8739ae039","CFF2","bias","cff","usedGsubrs","usedSubrs","trans","nStems","x1","y1","open","_usedGsubrs","_usedSubrs","gsubrs","gsubrsBias","privateDict","subrs","Subrs","subrsBias","vstore","vsindex","checkWidth","shift","nominalWidthX","parseStems","subr","phase","c1x","c1y","c2x","c2y","blendVector","getBlendVector","numOperands","sum","s1","s2","v1","v2","random","c3x","c3y","c4x","c4y","c5x","c5y","c6x","c6y","pts","startx","starty","b1","$25d8f049c222084c$var$SBIXImage","originX","originY","buflen","$25d8f049c222084c$export$2e2bcd8739ae039","getImageForSize","img","image","renderOutlines","$0d411f0165859681$var$COLRLayer","color","$0d411f0165859681$export$2e2bcd8739ae039","layers","cpal","colr","rec","baseLayer","_getBaseGlyph","fillColor","$0bb840cac04e911b$export$2e2bcd8739ae039","normalizeCoords","normalized","EPSILON","glyphPoints","tupleCount","here","sharedPoints","decodePoints","origPoints","tupleDataSize","tupleCoords","startCoords","endCoords","a1","factor","tupleFactor","nPoints","xDeltas","decodeDeltas","yDeltas","outPoints","hasDelta","interpolateMissingDeltas","deltaX","deltaY","Uint16Array","run","runCount","readUInt16","Int16Array","inPoints","firstPoint","endPoint","firstDelta","curDelta","deltaInterpolate","deltaShift","ref1","ref2","iterable","in1","in2","out1","out2","out","ref","itemStore","varData","deltaSet","netAdjustment","master","blendVectors","scalar","regionIndex","axes","axisScalar","Promise","resolve","$5cc7476da92df375$export$2e2bcd8739ae039","includeGlyph","$807e58506be70005$var$Point","$807e58506be70005$var$Glyf","xPoints","yPoints","$807e58506be70005$export$2e2bcd8739ae039","encodeSimple","lastX","lastY","lastFlag","pointCount","_encodePoint","shortFlag","sameFlag","diff","$4abbb6a5dbdc441a$export$2e2bcd8739ae039","_addGlyph","curOffset","nextOffset","view","DataView","setUint16","glyphEncoder","toBuffer","$001d739428a71d5a$export$2e2bcd8739ae039","subsetCharstrings","charstrings","subsetSubrs","used","subsetFontdict","used_fds","used_subrs","fd_select","FontName","createCIDFontdict","addString","Encoding","CIDCount","$4c1709dee528ea76$export$2e2bcd8739ae039","setDefaultLanguage","defaultLanguage","_getTable","_tables","_decodeTable","console","error","_decodeDirectory","getName","subfamilyName","copyright","characterSet","nextState","availableFeatures","_glyphs","createSubset","variationAxes","trim","namedVariations","settings","getVariation","_directoryPos","variationCoords","$c1726355ecc5b889$var$WOFFDirectoryEntry","compLength","origChecksum","$c1726355ecc5b889$var$WOFFDirectory","flavor","totalSfntSize","metaOffset","metaLength","metaOrigLength","privOffset","privLength","tables1","$c1726355ecc5b889$export$2e2bcd8739ae039","$8046190c9f1ad19e$export$2e2bcd8739ae039","_transformedGlyphs","$c28ec7bbb3b8de3a$var$Base128","$c28ec7bbb3b8de3a$var$knownTags","$c28ec7bbb3b8de3a$var$WOFF2DirectoryEntry","customTag","transformVersion","transformed","transformLength","$c28ec7bbb3b8de3a$var$WOFF2Directory","totalCompressedSize","$c28ec7bbb3b8de3a$export$2e2bcd8739ae039","$21ee218f84ac7f32$var$Substream","_buf","$21ee218f84ac7f32$var$GlyfTable","indexFormat","nContourStreamSize","nPointsStreamSize","flagStreamSize","glyphStreamSize","compositeStreamSize","bboxStreamSize","instructionStreamSize","nContours","composites","bboxes","$21ee218f84ac7f32$var$WORD_CODE","$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE2","$21ee218f84ac7f32$var$ONE_MORE_BYTE_CODE1","$21ee218f84ac7f32$var$LOWEST_U_CODE","$21ee218f84ac7f32$var$read255UInt16","$21ee218f84ac7f32$var$withSign","baseval","$21ee218f84ac7f32$var$decodeTriplet","b0","b2","$cd5853a56c68fec7$var$TTCHeader","numFonts","dsigTag","dsigLength","dsigOffset","$05f49f930186144e$var$DFontName","$05f49f930186144e$var$Ref","buf","nameOffset","attr","dataOffset","handle","$05f49f930186144e$var$Type","maxTypeIndex","refList","$05f49f930186144e$var$TypeList","types","$05f49f930186144e$var$DFontMap","typeList","nameListOffset","$05f49f930186144e$var$DFontHeader","dataLength","mapLength","outBuffer","_dataPos","_decompress","_decompressed","decompressedSize","decompressed","_transformGlyfTable","totalPoints","fonts","readString","sfnt"],"sourceRoot":""}